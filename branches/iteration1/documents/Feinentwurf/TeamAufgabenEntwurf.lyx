#LyX 1.6.4 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\use_default_options true
\language ngerman
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Grobe Auflistung der Aufgaben für den Feinentwurf und Nachfolgendes 
\end_layout

\begin_layout Section
Gui Team
\end_layout

\begin_layout Subsection
Verantwortliche
\end_layout

\begin_layout Itemize
Feras
\end_layout

\begin_layout Itemize
Daniel
\end_layout

\begin_layout Subsection
Evaluieren
\end_layout

\begin_layout Itemize
Klären wie das DM-Plugin und speziell die DM-Property-GUI aufgebaut sein
 soll, damit sie auch in allen Belangen erweiterbar ist.
 
\end_layout

\begin_layout Itemize
Untersuchen ob dafür Extension Points möglich sind bzw.
 es welche dafür gibt: (die Plug-Ins sollen möglichst einfach erweitert
 werden können) 
\end_layout

\begin_deeper
\begin_layout Itemize
Extension Points für weitere Punkte in der Admin-Konsole (zB Referenzen)
 
\end_layout

\begin_layout Itemize
Extension Points für weitere DM-Aktivitäten 
\end_layout

\begin_layout Itemize
Extension Points für weitere Patterns 
\end_layout

\begin_layout Itemize
Extension Points für weitere Anfragesprachen und ihre Komponenten (zB.
 SQL: SELECT, FROM, WHERE, ORDER BY usw.) 
\end_layout

\end_deeper
\begin_layout Itemize
Allgemein das Thema Erweiterbarkeit untersuchen, die ist am wichtigsten.
 Am Besten überlegen was sich alles ändern würde, wenn da jetzt eine ganz
 neue Aktivität realisiert werden soll, mit einer ganz anderen Anfragesprache
 usw..
 
\end_layout

\begin_layout Itemize
Die extra BPEL Variablen die benötigt werden (welche? für was?) und wie
 diese modellierungstechnisch (im BPEL Designer) umgesetzt werden können
 (Mirko meinte man müsse dazu den BPEL Designer evtl.
 aufbohren, das wollen möglichst verhindern) 
\end_layout

\begin_layout Itemize
Überprüfen ob "External Variables" (siehe Apache ODE) im BPEL Designer unterstüt
zt werden bzw.
 unterstützt werden können (nur für den Fall, dass wir diese benutzen.
 Muss das ODE Team erst klären) 
\end_layout

\begin_layout Itemize
Transformation vor Deployment möglich ohne den BPEL Designer aufzubohren?
 
\end_layout

\begin_layout Itemize
Verbindung zum SIMPL Core, wie? wo? als extra Plug-In-Komponente? 
\end_layout

\begin_layout Subsection
Machen
\end_layout

\begin_layout Itemize
Konzept und Diagramm für Aufbau der GUI und DM-Properties mit ersichtlichen
 Extension Points 
\end_layout

\begin_layout Itemize
Klassendiagramm für den Aufbau der DM-Properties (siehe Michael Hahn) und
 der GUI 
\end_layout

\begin_layout Itemize
Dynamic UML (Sequenz-, Ablaufdiagramm, ...) von Modellierung mit einer DM-Aktivität
, ggf.
 evaluieren der Eingaben, erzeugen des erweiterten BPEL-Codes, Auflösen
 der Referenzen und Deployment 
\end_layout

\begin_layout Section
Apache Ode Team
\end_layout

\begin_layout Subsection
Verantwortliche
\end_layout

\begin_layout Itemize
René
\end_layout

\begin_layout Itemize
Wolfgang
\end_layout

\begin_layout Subsection
Evaluieren
\end_layout

\begin_layout Itemize
Ist es möglich die Auditing-DB mit einem DAO auf den SIMPL Core umzubiegen
 um dort eine RDB-Datenquelle zu verwenden? 
\end_layout

\begin_layout Itemize
Events direkt in EA abfeuern möglich? Werden diese beim Auditing erfasst?
 
\end_layout

\begin_layout Itemize
Wie und wo wird die Verbindung zum SIMPL Core hergestellt (je nachdem wo
 er ist.
 Muss das SIMPL Core Team erst klären) 
\end_layout

\begin_layout Itemize
Plug-In-System für zusätzliche DM-Aktivitäten (glaube das ist das einfach
 nur eine JAR hinzufügen, evtl.
 können wir da aber auch was eigenes abstrahieren) 
\end_layout

\begin_layout Itemize
Einsatz von External Variables überprüfen (siehe ODE Homepage) 
\end_layout

\begin_layout Itemize
DOM Parser für EA Elemente (evtl.
 gibts da schon was in ODE oder was extra, evtl.
 Open Source) 
\end_layout

\begin_layout Itemize
Wie soll die DOM-Element-spezifische Ausführung realisiert werden? 
\end_layout

\begin_layout Itemize
Kann der Deployment Descriptor um eigene Granularität erweitert werden?
 Und ist das irgendwie zur Laufzeit änderbar? 
\end_layout

\begin_layout Subsection
Machen
\end_layout

\begin_layout Itemize
Test einer EA mit Event abfeuern (siehe Christoph Müller) 
\end_layout

\begin_layout Itemize
Klassendiagramm zu EA, Verbindung zu SIMPL Core, Eventsystem und DAO 
\end_layout

\begin_layout Itemize
Dynamic UML (Sequenz-, Ablaufdiagramm, ...) von deployten Prozess starten,
 EA-Activity einlesen, EA-DOM parsen, Ausführung über den SIMPL Core, Ergebnis
 in Prozess 
\end_layout

\begin_layout Section
Simpl Core Team
\end_layout

\begin_layout Subsection
Verantwortliche
\end_layout

\begin_layout Itemize
Michael
\end_layout

\begin_layout Itemize
Schneimi
\end_layout

\begin_layout Itemize
Xi
\end_layout

\begin_layout Subsection
Evaluieren
\end_layout

\begin_layout Itemize
Extra Axis2 oder innerhalb ODE Axis2 (Entscheidung wichtig!) 
\end_layout

\begin_layout Itemize
Schnittstellen definieren, Welche Services müssen welche Funktionen bereitstelle
n 
\end_layout

\begin_layout Itemize
AdministrationService wird evtl.
 nicht gebraucht, andere Services können direkt benutzt werden 
\end_layout

\begin_layout Itemize
Wie soll der erweiterte BPEL-Code aussehen, muss noch spezifiziert werden.
 (evtl.
 zusammen mit GUI Team) 
\end_layout

\begin_layout Itemize
Gibt es Zustände im SIMPL Core, die evtl.
 auch wegen Transaktionen gesichert werden müssen? (persistenz über die
 interne DB?) 
\end_layout

\begin_layout Itemize
StorageService mit interner Derby DB? Evtl.
 besser als über den DatasourceService.
 
\end_layout

\begin_layout Subsection
Machen
\end_layout

\begin_layout Itemize
Grobentwurf überarbeiten 
\end_layout

\begin_layout Itemize
evtl.
 SDO, DAS Testbeispiel (siehe Michael Hahn) 
\end_layout

\begin_layout Itemize
Klassendiagramm für jeden Service 
\end_layout

\begin_layout Itemize
Dynamic UML (Sequenz-, Ablaufdiagramm, ...) für Abläufe bei denen sich die
 Services gegenseitig benutzen und zB auch Ablauf innerhalb des DatasourceServic
e, bzw.
 dort wo es dann halt komplexer wird.
 
\end_layout

\end_body
\end_document
