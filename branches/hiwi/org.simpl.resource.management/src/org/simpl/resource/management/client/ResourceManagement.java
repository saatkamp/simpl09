
package org.simpl.resource.management.client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

import org.simpl.core.webservices.client.DataSource;
import org.simpl.resource.management.StringList;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "ResourceManagement", targetNamespace = "http://management.resource.simpl.org/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ResourceManagement {


    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws Exception_Exception
     */
    @WebMethod(action = "addDataSource")
    @WebResult(partName = "return")
    public boolean addDataSource(
        @WebParam(name = "arg0", partName = "arg0")
        DataSource arg0)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws Exception_Exception
     */
    @WebMethod(action = "updateDataSource")
    @WebResult(partName = "return")
    public boolean updateDataSource(
        @WebParam(name = "arg0", partName = "arg0")
        DataSource arg0)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws Exception_Exception
     */
    @WebMethod(action = "deleteDataSource")
    @WebResult(partName = "return")
    public boolean deleteDataSource(
        @WebParam(name = "arg0", partName = "arg0")
        int arg0)
        throws Exception_Exception
    ;

    /**
     * 
     * @return
     *     returns org.simpl.resource.management.client.StringList
     * @throws Exception_Exception
     */
    @WebMethod(action = "getDataSourceTypes")
    @WebResult(partName = "return")
    public StringList getDataSourceTypes()
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns org.simpl.resource.management.client.StringList
     * @throws Exception_Exception
     */
    @WebMethod(action = "getDataSourceSubTypes")
    @WebResult(partName = "return")
    public StringList getDataSourceSubTypes(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns org.simpl.resource.management.client.StringList
     * @throws Exception_Exception
     */
    @WebMethod(action = "getDataSourceLanguages")
    @WebResult(partName = "return")
    public StringList getDataSourceLanguages(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns org.simpl.resource.management.client.StringList
     * @throws Exception_Exception
     */
    @WebMethod(action = "getSupportedConvertDataFormatTypes")
    @WebResult(partName = "return")
    public StringList getSupportedConvertDataFormatTypes(
        @WebParam(name = "arg0", partName = "arg0")
        DataSource arg0)
        throws Exception_Exception
    ;

    /**
     * 
     * @return
     *     returns org.simpl.resource.management.client.DataSourceList
     * @throws Exception_Exception
     */
    @WebMethod(action = "getAllDataSources")
    @WebResult(partName = "return")
    public DataSourceList getAllDataSources()
        throws Exception_Exception
    ;

    /**
     * 
     * @param type
     * @return
     *     returns org.simpl.resource.management.client.DataSourceList
     * @throws Exception_Exception
     */
    @WebMethod(action = "getDataSourcesByType")
    @WebResult(partName = "return")
    public DataSourceList getDataSourcesByType(
        @WebParam(name = "type", partName = "type")
        String type)
        throws Exception_Exception
    ;

    /**
     * 
     * @param subType
     * @param type
     * @return
     *     returns org.simpl.resource.management.client.DataSourceList
     * @throws Exception_Exception
     */
    @WebMethod(action = "getDataSourcesByTypeAndSubtype")
    @WebResult(partName = "return")
    public DataSourceList getDataSourcesByTypeAndSubtype(
        @WebParam(name = "type", partName = "type")
        String type,
        @WebParam(name = "subType", partName = "subType")
        String subType)
        throws Exception_Exception
    ;

    /**
     * 
     * @param name
     * @return
     *     returns org.simpl.resource.management.client.DataSource
     * @throws Exception_Exception
     */
    @WebMethod(action = "getDataSourcesByName")
    @WebResult(partName = "return")
    public DataSource getDataSourceByName(
        @WebParam(name = "name", partName = "name")
        String name)
        throws Exception_Exception
    ;

    /**
     * 
     * @param id
     * @return
     *     returns org.simpl.resource.management.client.DataSource
     * @throws Exception_Exception
     */
    @WebMethod(action = "getDataSourceById")
    @WebResult(partName = "return")
    public DataSource getDataSourceById(
        @WebParam(name = "id", partName = "id")
        int id)
        throws Exception_Exception
    ;

    /**
     * 
     * @return
     *     returns boolean
     * @throws Exception_Exception
     */
    @WebMethod(action = "createResourceManagementTables")
    @WebResult(partName = "return")
    public boolean createResourceManagementTables()
        throws Exception_Exception
    ;

    /**
     * 
     * @return
     *     returns org.simpl.resource.management.client.DataSourceConnectorList
     * @throws Exception_Exception
     */
    @WebMethod(action = "getDataSourceConnectors")
    @WebResult(partName = "return")
    public DataSourceConnectorList getDataSourceConnectors()
        throws Exception_Exception
    ;

    /**
     * 
     * @return
     *     returns org.simpl.resource.management.client.DataConverterList
     * @throws Exception_Exception
     */
    @WebMethod(action = "getDataConverters")
    @WebResult(partName = "return")
    public DataConverterList getDataConverters()
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod(action = "getLanguageStatementDescription")
    @WebResult(partName = "return")
    public String getLanguageStatementDescription(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws Exception_Exception
    ;

}
