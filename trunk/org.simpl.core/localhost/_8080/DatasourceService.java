
package localhost._8080;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import org.simpl.core.webservices.ObjectFactory;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "DatasourceService", targetNamespace = "http://webservices.core.simpl.org/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DatasourceService {


    /**
     * 
     * @param statement
     * @param dsAddress
     * @param dsType
     * @return
     *     returns boolean
     * @throws ConnectionException
     */
    @WebMethod(action = "defineData")
    @WebResult(partName = "return")
    public boolean defineData(
        @WebParam(name = "dsAddress", partName = "dsAddress")
        String dsAddress,
        @WebParam(name = "statement", partName = "statement")
        String statement,
        @WebParam(name = "dsType", partName = "dsType")
        String dsType)
        throws ConnectionException
    ;

    /**
     * 
     * @param statement
     * @param dsAddress
     * @param data
     * @param dsType
     * @return
     *     returns boolean
     * @throws ConnectionException
     */
    @WebMethod(action = "manipulateData")
    @WebResult(partName = "return")
    public boolean manipulateData(
        @WebParam(name = "dsAddress", partName = "dsAddress")
        String dsAddress,
        @WebParam(name = "statement", partName = "statement")
        String statement,
        @WebParam(name = "data", partName = "data")
        String data,
        @WebParam(name = "dsType", partName = "dsType")
        String dsType)
        throws ConnectionException
    ;

    /**
     * 
     * @param statement
     * @param dsAddress
     * @param dsType
     * @return
     *     returns java.lang.String
     * @throws ConnectionException
     */
    @WebMethod(action = "queryData")
    @WebResult(partName = "return")
    public String queryData(
        @WebParam(name = "dsAddress", partName = "dsAddress")
        String dsAddress,
        @WebParam(name = "statement", partName = "statement")
        String statement,
        @WebParam(name = "dsType", partName = "dsType")
        String dsType)
        throws ConnectionException
    ;

}
