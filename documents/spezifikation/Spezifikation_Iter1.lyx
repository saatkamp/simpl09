#LyX 1.6.3 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\begin_preamble





\usepackage{babel}

% Package für das Einfärben von Tabellen
\usepackage{colortbl}

% Packages für eigen definierte Header und Footer
\usepackage{lastpage}
\usepackage{fancyhdr}

% doctitel = Titel des Dokuments
% docvers = Versionsnr.
% docautor = Author(en)
% docdate = Datum der letzten Änderung
\def\doctitel{Spezifikation}
\def\docvers{0.1}
\def\docautor{Wolfgang Huettig, Michael Hahn, Firas Zoabi, Michael Schneidt}
\def\docdate{11. September 2009}

% docstate = Status des Dokuments aus {neu, bearbeitet}
% qsstate = QS-Prüfungsstatus aus {positiv QS-geprüft, negativ QS-geprüft, verworfen}
% proofstate = Prüfungsstatus (durch Projektleiter) aus {positiv geprüft, negativ geprüft, verworfen}
% reviewstate = Annahmestatus des Reviews {kein Review durchgeführt, akzeptiert ohne Änderungen, akzeptiert mit Änderungen, nicht akzeptiert}
% endstate = Endstatus des Dokuments aus {freigegeben, verworfen}
\def\docstate{neu}
\def\qsstate{nicht QS-geprüft}
\def\proofstate{nicht geprüft}
\def\reviewstate{kein Review durchgeführt}
\def\endstate{-}

% Definierter Grauton für die Tabellenfärbung
\definecolor{lightgray}{rgb}{0.7,0.7,0.7}

%Nicht einrücken
%\setlength{\parindent}{0pt}
\end_preamble
\use_default_options false
\language ngerman
\inputencoding latin9
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_amsmath 0
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 3cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "Deckblatt.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "DokStatus.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%Header und Footer Definitionen für alle anderen Seiten
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pagestyle
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

fancy
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset FormulaMacro
\renewcommand{\headrulewidth}{0mm}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
lhead
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
chead
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
rhead
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
lfoot
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\size small
SIMPL © 2009 $IMPL
\size default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
cfoot
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
rfoot
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\size small

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thepage
\end_layout

\end_inset


\begin_inset space \space{}
\end_inset

/ 
\begin_inset CommandInset ref
LatexCommand pageref
reference "LastPage"

\end_inset


\size default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%Ab hier beginnt das Dokument
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Beschreibungen, was in welchem Abschnitt (von Abschnitt 1 bis 2) erwartet
 wird, sind im Buch von Prof.
 Ludewig zu finden (Seite 363 f.).
\end_layout

\end_inset


\end_layout

\begin_layout Section
Einleitung
\end_layout

\begin_layout Standard
In diesem Abschnitt wird der Zweck dieses Dokuments, sowie der Einsatzbereich
 und die Ziele der zu entwickelnden Software beschrieben.
 Weiterhin werden die in diesem Dokument verwendeten Definitionen erläutert
 und ein Überblick über das restliche Dokument gegeben.
\end_layout

\begin_layout Subsection
Zweck des Dokuments
\end_layout

\begin_layout Standard
Diese Spezifikation ist die Grundlage für alle weiteren Dokumente, die im
 Rahmen dieses Projekts entstehen.
 In ihr sind sämtliche Anforderungen an die zu entwickelnde Software festgelegt.
 Sie muss stets mit den anderen Dokumenten, insbesondere mit dem Entwurf
 und der Implementierung, konsistent gehalten werden.
 Die Spezifikation dient den Team-Mitgliedern als Grundlage und Richtlinie
 für die Entwicklung der Software und den Kunden als Zwischenergebnis zur
 Kontrolle.
\end_layout

\begin_layout Standard
Zum Leserkreis dieser Spezifikation gehören: 
\end_layout

\begin_layout Itemize
Die Entwickler der Software, 
\end_layout

\begin_layout Itemize
die Kunden und
\end_layout

\begin_layout Itemize
die Gutachter der Spezifikationsreviews.
\end_layout

\begin_layout Subsection
Einsatzbereich und Ziele
\end_layout

\begin_layout Standard
Das Entwicklungsteam soll ein erweiterbares und generisches Rahmenwerk für
 die Modellierung und Ausführung von Workflows erstellen, welches den Zugriff
 auf nahezu beliebige Datenquellen ermöglichen soll.
 Bei den Datenquellen kann es sich beispielsweise um Sensornetze, Datenbanken
 und Dateisysteme handeln.
 Der Schwerpunkt soll klar auf wissenschaftlichen Workflows liegen, in denen
 es möglich sein muss große heterogene Datenmengen verarbeiten zu können.
 Über das Rahmenwerk sollen beliebige Datenmanagement-Funktionen in einen
 BPEL-Prozess eingebunden werden können.
 Dafür werden bereits vorhandene Konzepte evaluiert, wie z.B.
 die Sprache BPEL, und falls nötig erweitert und angepasst.
 Für eine möglichst hohe Flexibilität soll ein dynamischer Ansatz gewählt
 werden, so dass auch erst zur Laufzeit des Systems die Datenquellen festgelegt
 werden können.
 Nichtsdestotrotz sollte auch die Möglichkeit bestehen, die Datenquellen
 statisch anbinden zu können.
 Eine Anforderung des Kunden ist, dass eine vorhandene BPEL-Workflow-Engine
 sowie ein vorhandenes Modellierungstool um diese gewünschten Funktionen
 erweitert bzw.
 angepasst werden.
 Die BPEL-Prozesse sollen mit dem entsprechenden Modellierungstool spezifiziert
 und mit der BPEL-Workflow-Engine ausgeführt werden können.
\end_layout

\begin_layout Subsection
Evolution des Dokuments
\end_layout

\begin_layout Subsection
Definitionen
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
hier dokumentieren wir die dokumente, die im zusammenhang mit der Spezifikation
 stehen .
 Begriffslexikon und natürlich über der Dokument kurzes Text was, und wofür.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die in der Spezifikation verwendeten Begriffe, Definitionen und Abkürzungen
 werden in einem separaten Begriffslexikon eindeutig definiert und erklärt,
 dadurch werden Missverständnisse innerhalb des Projektteams oder zwischen
 Projektteam und Kunde vermieden.
\end_layout

\begin_layout Standard
Auf alle in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Resultierende-BPEL-Aktivitäten"

\end_inset

 beschriebenen Aktivitäten wird in diesem Dokument mit dem Sammelbegriff
 Data-Management-Aktivität verwiesen.
 Wird also von einer Data-Management-Aktivität gesprochen, ist indirekt
 eine dieser Aktivitäten gemeint.
 Über die Definition und Verwendung dieses Sammelbegriffs soll lediglich
 die Allgemeingültigkeit der getroffenen Aussagen, für jede der in Abschnitt
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Resultierende-BPEL-Aktivitäten"

\end_inset

 beschriebenen Aktivitäten, erreicht werden.
\end_layout

\begin_layout Subsection
Überblick
\end_layout

\begin_layout Standard
In diesem Dokument soll die zu entwickelnde Software spezifiziert werden.
 Dazu werden in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Allgemeine-Beschreibung"

\end_inset

 die spätere Systemumgebung, die Kernfunktionen, die Sprache und weitere
 Aspekte der Software beschrieben.
 So erhält der Leser einen Überblick über die Funktionalität der Software
 und deren Verwendung.
 Weiterhin werden die Ziele und Aufgaben, die für die Realisierung der Software
 bestehen, aufgezeigt.
 Anschließend werden die vom Kunden genannten Anforderungen durch die Abschnitte
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Nichtfunktionale-Anforderungen"

\end_inset

 und 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Anwendungsfälle-(Use-Cases)"

\end_inset

 aufgezeigt.
 Dabei werden durch die nichtfunktionalen Anforderungen qualitative (Robustheit,
 Portabilität, usw.) und quantitative (Mengengerüst) Anforderungen an die
 Software spezifiziert.
 Die Anwendungfälle beschreiben im Anschluss die funktionalen Anforderungen,
 also konkret die Funktionen, die z.T.
 schon in der Übersicht der Kernfunktionalität weiter oben aufgeführt sind,
 die die Software enthalten soll.
 Im Anschluss folgen dann in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Konzepte-und-Realisierungen"

\end_inset

 die Beschreibungen und Definitionen einiger Konzepte bzw.
 Ansätze, die zur Umsetzung der gewünschten Funktionalität benötigt werden.
 Am Ende des Dokuments werden in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:MaterialienWerkzeuge"

\end_inset

 die verwendeten Materialien, Werkzeuge und Technologien, die für die Erstellung
 der Software benötigt werden, vorgestellt.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Allgemeine-Beschreibung"

\end_inset

Allgemeine Beschreibung
\end_layout

\begin_layout Standard
Dieser Abschnitt liefert allgemeine Informationen über die zu entwickelnde
 Software.
 Dazu gehöhren beispielsweise die Beschreibung der späteren Systemumgebung,
 die wichtigsten Funktionen, die verwendete Sprache und Informationen über
 den Benutzerkreis der Software.
\end_layout

\begin_layout Subsection
Einbettung
\end_layout

\begin_layout Standard
Das SIMPL Rahmenwerk soll in die, in Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Systemumgebung"

\end_inset

 dargestellte, Systemumgebung eingebettet werden.
 Die Systemumgebung besteht dabei aus Eclipse mit dem BPEL-Designer Plug-In,
 einem Web-Server, wie z.B.
 dem Apache Tomcat, auf dem das Rahmenwerk und eine Workflow-Engine (z.B.
 Apache ODE) ausgeführt werden und den unterschiedlichen Datenquellen.
 Dabei läuft die benötigte Software auf dem lokalen Rechner des Benutzers,
 die Datenquellen können auf verschiedene Server verteilt sein.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Systemumgebung.jpeg
	lyxscale 80
	width 70text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Systemumgebung"

\end_inset

Übersicht über die Systemumgebung von SIMPL
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Funktionen 
\end_layout

\begin_layout Standard
In diesem Abschnitt folgen die wichtigsten Funktionen des Rahmenwerks, die
 später dessen Kernfunktionalität bilden sollen.
\end_layout

\begin_layout Standard
Das Rahmenwerk soll als Eclipse Plug-In verwendet werden und als Laufzeitumgebun
g integriert sein.
 Ebenso soll die Verarbeitung von großen, heterogenen Datenmengen im Rahmen
 eines wissenschaftlichen Workflows möglich sein.
\end_layout

\begin_layout Standard
Die vorhandenen BPEL-Aktivitäten des Eclipse BPEL Designer werden dazu um
 neue Aktivitäten für die Verwaltung von Daten (Data-Management-Aktivitäten)
 erweitert.
 Mit deren Hilfe wird die Anbindung von Datenquellen in BPEL-Prozessen vereinfac
ht.
 Am Anfang werden die Datenquellen über ihre physikalische Adresse angebunden.
 In einer späteren Iteration wird eine Datenquellen-Registry bereitgestellt.
 Diese ermöglicht die Realisierung einer grafischen Auswahlmöglichkeit für
 Datenquellen im Eclipse BPEL Designer.
 Eine nähere Beschreibung der Data-Management-Aktivitäten wird in Abschnitt
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:BPEL-SQL"

\end_inset

 gegeben.
 
\end_layout

\begin_layout Standard
Alle Ereignisse, die wärend der Laufzeit eines Prozesses auftreten(z.B.
 Zugriff auf eine Datenquelle), werden durch ein Auditing in einer vom Nutzer
 definierten Datenbank gespeichert.
\end_layout

\begin_layout Standard
Für die Verwaltung des SIMPL-Rahmenwerks und zur Änderung von Einstellungen
 auch während der Laufzeit von Prozessen, wird eine Admin-Konsole implementiert.
 Über diese kann zum Beispiel das Auditing an und ausgeschaltet und eine
 Datenbank zur Speicherung der Auditinginformationen angegeben werden.
 
\end_layout

\begin_layout Subsection
Sprache
\end_layout

\begin_layout Standard
Generell gilt, dass alle Dokumente auf Deutsch und jeder Quellcode einschließlic
h Kommentaren auf Englisch verfasst und ausgeliefert werden sollen.
 Eine Ausnahme bilden das Handbuch und die verschiedenen Dokumentationen
 der von uns durchgeführten Erweiterungen, wie z.B.
 die Erweiterungen von Apache ODE oder dem Eclipse BPEL Designer.
 Diese Dokumente werden auf Deutsch und auf Englisch verfasst, um sie einem
 breiteren Leserkreis zur Verfügung stellen zu können.
\end_layout

\begin_layout Subsection
Distributionsform und Installation
\end_layout

\begin_layout Standard
Das Rahmenwerk wird als Teil eines großen Installationpakets ausgeliefert.
 Dieses Installationspaket besteht aus allen Programmen, die für die Verwendung
 des Rahmenwerks benötigt werden.
 Dazu gehöhrt ein Modellierungstool (Eclipse BPEL Designer), ein Web-Server
 (Apache Tomcat), der eine Workflow-Engine ausführen kann, eine Workflow-Engine
 (Apache ODE) und natürlich das Rahmenwerk selbst.
 Mithilfe des Installationspakets ist es möglich viele Einstellungen bereits
 vorzudefinieren und dem Benutzer die Installation zu erleichern.
 Das Installationspaket wird dabei als RAR-Archiv zusammen mit allen wichtigen
 Dokumenten auf einer CD/DVD ausgeliefert.
 Zu den Dokumenten zählen die Spezifikation, das Handbuch mit Installationsanlei
tung auf Deutsch und Englisch, die vollständige Dokumentation aller Erweiterunge
n auf Deutsch und Englisch und der gesammte Quellcode des Rahmenwerks.
 So können nachträgliche Erweiterungen/Korrekturen des Rahmenwerks mithilfe
 der Dokumentationen leichter realisiert werden.
 Die Installation der einzelnen Komponenten wird dann anhand der mitgelieferten
 Installationsanleitung durchgeführt.
\end_layout

\begin_layout Subsection
Benutzerprofile
\end_layout

\begin_layout Standard
Die Benutzer sind im Normalfall Wissenschaftler und Ingenieure.
 Sie haben meist keine bis wenig Vorkenntnisse im Bereich Workflow und Informati
k und stellen so entsprechende Anforderungen an die Benutzbarkeit des Rahmenwerk
s (siehe Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Nichtfunktionale-Anforderungen"

\end_inset

).
\end_layout

\begin_layout Subsection
Einschränkungen
\end_layout

\begin_layout Subsection
Annahmen und Abhängigkeiten
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Nichtfunktionale-Anforderungen"

\end_inset

Nichtfunktionale Anforderungen
\end_layout

\begin_layout Standard
In diesem Abschnitt werden die nichtfunktionalen Anforderungen an die zu
 entwickelnde Software beschrieben.
 Dafür werden die entsprechenden Software-Qualitäten aufgeführt und ihre
 Bedeutung für die zu entwickelnde Software erläutert.
\end_layout

\begin_layout Subsection
Mengengerüst
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
-hier soll darüber argumintiert wieviele Datenquellen gleichzeitig angebunden
 und wervendet werden können.
 
\end_layout

\begin_layout Plain Layout
-wieviel Benutzern den plugin gleichzeitig wenn überhaupt benutzen können.
\end_layout

\begin_layout Plain Layout
-...
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Benutzbarkeit
\end_layout

\begin_layout Standard
Die Benutzbarkeit soll sich vor allem an Nutzer mit wenig Kenntnissen im
 Umgang mit Workflows und BPEL richten und die dafür größtmöglichste Transparenz
 liefern, d.h.
 dass die interne Prozesslogik der Software bestmöglich vom Benutzer abgeschirmt
 wird und er eine möglichst einfache und schnell verständliche Schnittstelle
 zur Software erhält, um die Verwendung von SIMPL für alle Benutzergruppen
 zu ermöglichen.
\end_layout

\begin_layout Subsection
Robustheit
\end_layout

\begin_layout Standard
Unter Robustheit ist hier zu verstehen, dass selbst wenn es zu ungünstigen
 Bedingungen kommt, SIMPL weiterhin fehlerfrei verwendet werden kann.
 Dazu sollen Prozesse fehlerfrei ausgeführt werden und entsprechend korrekte
 Ergebnisse liefern oder das Rahmenwerk soll sicher beendet werden können.
\end_layout

\begin_layout Subsection
Sicherheit
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Die Sicherheit im System wird durch das Authentifizierungs und Autorisierungsver
fahren Benutzername & Passwort geleistet.
\end_layout

\begin_layout Plain Layout
Die Verbindung zwischen Client auf der DatenBanken erfolgt über vom Admin
 vordefinierte bzw.
 vorgegebene Username und passwört (Einlogdaten).
 
\end_layout

\begin_layout Plain Layout
Der Administratot und alle anedere Verwaltung-Aktuere, die andere , haben
 eigene von der normale Benutzern unabängige Passwort.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Portabilität
\end_layout

\begin_layout Standard
Portabilität bedeutet hier, wenn man bei verschiedenen Softwareumgebungen
 bzw.
 verschiedenen Operationsystems (z.B.nicht nur bei windows sonder auch bei
 linux)die SIMPL durchlaufen wollte, zwischen der verschiedenen Varianten
 braucht man nur weniger Anpassungen einzustellen.
\end_layout

\begin_layout Subsection
Erweiterbarkeit
\end_layout

\begin_layout Standard
Die Erweiterbarkeit des Systems spielt eine zentrale Anforderung, da es
 über einen langen Zeitraum genutzt und in Zukunft um die Anbindung weiterer
 Datenquellen, Konzepte für den Datenzugriff und den Umgang mit weiteren
 Datenformaten ergänzt werden soll.
 Um die Erweiterbarkeit des Systems zu gewährleisten, wird ein modularer
 Aufbau zugrunde gelegt und entsprechende Schnittstellen geschaffen.
\end_layout

\begin_layout Subsection
Wartbarkeit
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Durch qualitativ hochwertige Dokumentation und ein strukturiertes, geplantes
 und sauberes Entwicklungsvorgehen wird der Anspruch erhoben, eine möglichst
 hohe Wartbarkeit zu erreichen.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Skalierbarkeit
\end_layout

\begin_layout Standard
Die Skalierbarkeit des Systems muss eine sehr flexible Infrastruktur erlauben,
 da die Computersysteme, auf denen SIMPL später ausgeführt wird, in ihrer
 Leistung sehr weit auseinander gehen können, d.h.
 vom normalen Desktop-Computer bis zum Supercomputer kann und soll alles
 möglich sein.
\end_layout

\begin_layout Section
Akteure
\end_layout

\begin_layout Standard
In diesem Abschnitt werden die einzelnen Akteure der Software beschrieben
 und ihre Abhängigkeiten untereinander definiert.
\end_layout

\begin_layout Subsection
Prozess-Modellierer
\end_layout

\begin_layout Standard
Ein Prozess-Modellierer erstellt mit dem Eclipse BPEL Designer BPEL Prozesse.
 Dazu kann er BPEL-Aktivitäten erstellen, bearbeiten und auch löschen.
 Weiterhin kann er für die dynamische Datenquellenauswahl zur Laufzeit,
 die von ihm benötigten Datenquellen-Eigenschaften angeben und eine geeignete
 Auswahl-Strategie auswählen.
 Hat der Prozess-Modellierer den BPEL-Prozess fertig modelliert, kann er
 diesen im Anschluss auf einer Workflow-Engine ausführen lassen.
\end_layout

\begin_layout Subsection
Workflow-Administrator
\end_layout

\begin_layout Standard
Ein Workflow-Administrator ist eine Spezialisierung des Prozess-Modellierers,
 d.h.
 er kann alle Anwendungsfälle des Prozess-Modellierers und noch weitere
 administrative Anwendungsfälle ausführen.
 Er kann beispielsweise über die Admin-Konsole während der Prozesslaufzeit
 das Auditing und Monitoring an- und abschalten.
 Ebenso legt er die Datenbank für das Speichern der Auditing-Daten fest
 und administriert das Reference Resolution System, d.h.
 er kann Referenzen anlegen, löschen und bearbeiten.
\end_layout

\begin_layout Subsection
ODE Workflow-Engine
\end_layout

\begin_layout Standard
Die ODE Workflow-Engine ist ein durch Software realisierter Akteur.
 Sie führt interne Anwendungsfälle aus, die von einem Benutzer durch andere
 Anwendungsfälle indirekt aufgerufen werden.
 Zu ihren Aufgaben gehöhrt das Ausführen, Kompensieren und rückgängig Machen
 von Daten-Management-Aktivitäten.
\end_layout

\begin_layout Subsection
Eclipse BPEL Designer
\end_layout

\begin_layout Standard
Der Eclipse BPEL Designer ist ebenfalls ein durch Software realisierter
 Akteur.
 Er führt interne Anwendungsfälle aus, die von einem Benutzer durch andere
 Anwendungsfälle indirekt aufgerufen werden.
 Der Eclipse BPEL Designer kann Datenquellen aus der Datenquellen-Registry
 abrufen und die erhaltene Liste anhand der vom Prozess-Modellierer hinterlegten
 Eigenschaften filtern.
 Weiterhin sorgt er für die automatische Datenquellenauswahl per Strategie,
 das Laden der Einstellungen der Admin-Konsole und das Kopieren aller Prozess-Ar
tefakte auf die Workflow-Engine.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Anwendungsfälle-(Use-Cases)"

\end_inset

Anwendungsfälle (Use-Cases)
\end_layout

\begin_layout Standard
Dieser Abschnitt beschreibt die funktionalen Anforderungen an die Software.
 Dazu werden alle Anwendungsfälle eines jeden Akteurs beschrieben und deren
 Zusammenhänge in entsprechenden Diagrammen graphisch dargestellt.
\end_layout

\begin_layout Subsection
Diagramm aller Anwendungsfälle
\end_layout

\begin_layout Standard
Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Gesamt-Anwendungsfall-Diagramm"

\end_inset

 zeigt das Diagramm aller Anwendungsfälle der gesamten Software.
 Dadurch soll die Funktionalität und die Akteure des späteren Gesamtsystems
 sichtbar werden.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Overview_iter1.jpg
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Gesamt-Anwendungsfall-Diagramm"

\end_inset

Anwendungsfall-Diagramm des gesamten Softwaresystems
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Anwendungsfälle der Prozess-Modellierer
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ProzessModelierer_iter1.jpg
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:UseCaseDiaProzessModell"

\end_inset

Anwendungsfall-Diagramm für die Prozess-Modelierer
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Data-Management-Aktivität erstellen
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erstellung einer neue Daten-Management-Aktivität.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ein vorhandener BPEL-Prozess muss im Eclipse BPEL Designer geöffnet und
 die BPEL Designer-Palette muss angezeigt werden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die erstellte Aktivität wurde an der selektierten Position in den Prozess
 eingefügt und der eingegebene Namen wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die erstellte Aktivität wurde an der selektierten Position in den Prozess
 eingefügt und der vorgeschlagene Namen wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Auswahl einer Aktivität, durch Markierung mit der Maus, aus der Palette
\end_layout

\begin_layout Plain Layout
2.
 Selektion der Stelle des Prozesses an der die ausgewählte Aktivität eingefügt
 werden soll
\end_layout

\begin_layout Plain Layout
3.
 Eingabe eines Aktivitätsnamens
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3a.
 Der angezeigte Namensvorschlag wird vom Benutzer mit [Enter] bestätigt
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Data-Management-Aktivität bearbeiten
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bearbeitung der Eigenschaften einer vorhandenen Daten-Management-Aktivität.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ein vorhandener BPEL-Prozess muss im Eclipse BPEL Designer geöffnet, die
 zu bearbeitende Aktivität muss ausgewählt sein und der 
\begin_inset Quotes eld
\end_inset

Properties-View
\begin_inset Quotes erd
\end_inset

 von Eclipse muss angezeigt werden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alle durchgeführten Änderungen der Eigenschaften wurden korrekt übernommen
 und werden im 
\begin_inset Quotes eld
\end_inset

Properties-View
\begin_inset Quotes erd
\end_inset

 angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Auswahl einer Aktivität, durch Markierung mit der Maus, aus dem Prozess
\end_layout

\begin_layout Plain Layout
2.
 Eigenschaften der Aktivität werden in der 
\begin_inset Quotes eld
\end_inset

Properties-View
\begin_inset Quotes erd
\end_inset

 angezeigt
\end_layout

\begin_layout Plain Layout
3.
 Änderungen der Eigenschaften
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Data-Management-Aktivität löschen
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Löschen der ausgewählten Daten-Management-Aktivität.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ein vorhandener BPEL-Prozess muss im Eclipse BPEL Designer geöffnet und
 die zu löschende Aktivität muss ausgewählt sein.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die ausgewählte Aktivität wurde vollständig und korrekt aus dem Prozess
 gelöscht.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Auswahl einer Aktivität, durch Markierung mit der Maus, aus dem Prozess
\end_layout

\begin_layout Plain Layout
2.
 Löschen der Aktivität
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Note Note
status open

\begin_layout Plain Layout
Was passiert wenn eine von zwei voneinander abhängigen Aktivitäten gelöscht
 wird?
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Prozess ausführen
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausführen des Prozesses auf der Apache ODE Workflow-Engine.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ein Prozess muss im Eclipse BPEL Designer geöffnet und die Apache ODE Workflow-E
ngine korrekt in Eclipse eingebunden sein.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Prozess-Dateien wurden auf die Apache ODE Workflow-Engine kopiert, der
 Prozess wurde erfolgreich deployed und wird ausgeführt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Erstellung eines ODE Deployment-Deskriptors
\end_layout

\begin_layout Plain Layout
2.
 Kopieren der Prozess-Artefakte in Workflow-Engine
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Admin-Konsole speichern
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Speicherung des Inhalts der Admin-Konsole.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Admin-Konsole wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alle Werte der Admin-Konsole wurden korrekt gespeichert und alle veralteten
 Werte mit neuen überschrieben.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alle geänderten Werte der Admin-Konsole bleiben durch den Speichervorgang
 unverändert und es kann ein erneuter Versuch durchgeführt werden.
 Die Werte bleiben dabei solange erhalten, bis Eclipse beendet wird.
 Nach der Beendigung von Eclipse werden die Werte dann verworfen und beim
 nächsten Start die zuletzt gespeicherten Einstellungen geladen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Klick auf den Button [Speichern]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Beim Speichern der Werte tritt ein Fehler auf
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Admin-Konsole zurücksetzen
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Zurücksetzen des Inhalts der Admin-Konsole.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Admin-Konsole wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alle geänderten Werte der Admin-Konsole wurden auf die gespeicherten Werte
 zurückgesetzt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alle geänderten Werte der Admin-Konsole bleiben durch den Zurücksetz-Vorgang
 unverändert und es kann ein erneuter Versuch durchgeführt werden.
 Die Werte bleiben dabei solange erhalten, bis Eclipse beendet wird.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Klick auf den Button [Zurücksetzen]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Beim Laden der Werte tritt ein Fehler auf
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Anwendungsfälle der Workflow-Administratoren
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename WorkflowAdmin_iter1.jpg
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:UseCaseDiaWFAdmin"

\end_inset

Anwendungsfall-Diagramm für die Prozess-Modelierer
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Admin-Konsole öffnen
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Öffnen der Admin-Konsole.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eclipse muss geöffnet sein.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Admin-Konsole wird angezeigt und kann verwendet werden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Klick auf das SIMPL Menü
\end_layout

\begin_layout Plain Layout
2.
 Klick auf den Menüeintrag [Admin-Konsole]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Auditing aktivieren
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auditing von SIMPL aktivieren.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Admin-Konsole muss angezeigt werden und das Auditing ist nicht aktiv.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das Auditing ist aktiviert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Nutzer erhält eine Fehlermeldung die ihn informiert, dass keine Auditing
 Datenbank festgelegt wurde und wird gebeten eine auszuwählen.
 Das Auditing ist nicht aktiv.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Auditing aktivieren
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Vom Nutzer wurde keine Auditing Datenbank zum speichern der Daten festgelegt.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Auditing deaktivieren
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auditing von SIMPL deaktivieren.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Admin-Konsole muss angezeigt werden und das Auditing ist aktiv.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das Auditing ist deaktiviert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Auditing deaktivieren
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Auditing-Datenbank festlegen
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Festlegung einer Datenbank für das Auditing.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Admin-Console ist geöffnet.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Datenbank für das Auditing wurde festgelegt und kann verwendet werden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Administrator wird durch eine entsprechende Fehlermeldung darauf hingewiesen
, dass die angegebene Datenbank nicht erreichbar ist.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Angabe der Datenbank-Adresse (optional Auswahl über Datenbank-Registry)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Auf die angegebene Datenbank kann nicht zugegriffen werden
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Anwendungsfälle der ODE Workflow-Engine
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ODEwfEngine_iter1.jpg
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:UseCaseDiaODEWFEngine"

\end_inset

Anwendungsfall-Diagramm für die Prozess-Modelierer
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Data-Management-Aktivität ausführen
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausführen einer Data-Management-Aktivität.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Es wurde ein Prozess, der eine Data-Management-Aktivität enthält deplyoed
 und es wurde eine Instanz dieses Prozesses erzeugt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Aktivität wurde ausgeführ und das Management der Daten war erfolgreich.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Die Ausführung der Instanz wird gestartet
\end_layout

\begin_layout Plain Layout
2.
 Die Aktivität wird als bereit gekennzeichnet
\end_layout

\begin_layout Plain Layout
3.
 Die Ausführung der Aktivität wird gestartet
\end_layout

\begin_layout Plain Layout
4.
 Ausführung der Data-Management Operationen
\end_layout

\begin_layout Plain Layout
5.
 Die Ausführung der Aktivität ist beendet
\end_layout

\begin_layout Plain Layout
6.
 Die Aktivität wird als vollständig gekennzeichnet
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Data-Management-Aktivität kompensieren
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Data-Management-Aktivität rückgängig machen (rollback)
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rückgängig machen einer Data-Management-Aktivität so das der Zustand vor
 Ausführung der Aktivität wiederhergestellt wird.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eine Data-Management-Aktivität wurde durchgeführt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Zustand vor Ausführung der Data-Management-Aktivität wurde erfolgreich
 wiederhergestellt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Anwendungsfälle des Eclipse BPEL Designers
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename BPELdesigner_iter1.jpg
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:UseCaseDiaBPELDesigner"

\end_inset

Anwendungsfall-Diagramm für die Prozess-Modelierer
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Prozess-Artefakte in Workflow-Engine kopieren
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kopieren aller Prozess-Artefakte (Deployment Deskriptor, BPEL-Dateien, WSDL-Date
ien) eines Projekts in die Worflow-Engine.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alle Prozess-Artefakte befinden sich nun im Verzeichnis der Workflow-Engine
 und eine .deployed Datei wurde erstellt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die kopierten Dateien sind unverändert, es wurde keine .deployed Datei erstellt
 und die aufgetretenen Fehler werden in der ODE-Konsole im Eclipse BPEL
 Designer angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Kopieren der Prozess-Artefakte
\end_layout

\begin_layout Plain Layout
2.
 Prozess wird automatisch deployed
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2a.
 Fehler beim Deployment des Prozesses
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Admin-Konsole laden
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Laden der Inhalte der Admin-Konsole.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alle Werte der Datei mit den Einstellungen/Eingaben (Inhalten) der Admin-Konsole
 wurden geladen und im Fenster 
\begin_inset Quotes eld
\end_inset

Admin-Konsole
\begin_inset Quotes erd
\end_inset

 und dessen Unterfenstern angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Es wurden Standard-Einstellungen, die im Quellcode hinterlegt sind, geladen
 und im Fenster 
\begin_inset Quotes eld
\end_inset

Admin-Konsole
\begin_inset Quotes erd
\end_inset

 und dessen Unterfenstern angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Laden der Werte aus der Datei
\end_layout

\begin_layout Plain Layout
2.
 Füllen der Felder der Admin-Konsole
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Beim Laden der Werte tritt ein Fehler auf
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Konzepte-und-Realisierungen"

\end_inset

Konzepte und Realisierungen
\end_layout

\begin_layout Standard
In diesem Abschnitt werden alle Konzepte, die für SIMPL benötigt werden,
 und deren Realisierung erläutert.
 Dazu zählt z.B.
 die Beschreibung und Definition der benötigten Datenmanagement Aktivitäten,
 die zur Realisierung einer SQL-inline Unterstützung für BPEL benötigt werden.
 Ebenso werden die benötigten Eclipse BPEL Designer Erweiterungen, sowie
 die Realisierung des Datenquellen-Auditings und das dafür zugrunde liegende
 Event-Modell beschrieben.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:BPEL-SQL"

\end_inset

BPEL-SQL
\end_layout

\begin_layout Standard
In diesem Abschnitt werden die zu realisierenden Datenmanagement-Patterns
 zur Umsetzung einer SQL-inline Unterstützung vorgestellt und im weiteren
 Verlauf deren Realisierung für die verschiedenen Datenquellen, d.h.
 für Dateisysteme, Datenbanken und Sensornetze, erläutert.
 Aus den in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Umsetzung-der-Datenmanagement"

\end_inset

 identifizierten Funktionen, die für die Umsetzung der Datenmanagement-Patterns
 benötigt werden, werden dann in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Resultierende-BPEL-Aktivitäten"

\end_inset

 neue benötigte BPEL-Aktivitäten abstrahiert, die dann später die entsprechenden
 Funktionen ausführen werden.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Datenmanagement-Patterns"

\end_inset

Datenmanagement Patterns
\end_layout

\begin_layout Standard
In diesem Abschnitt werden die Datenmanagement Patterns, die zur Realisierung
 einer SQL-inline Unterstützung benötigt werden, aufgeführt und beschrieben
 (siehe Quelle [
\begin_inset CommandInset ref
LatexCommand ref
reference "BPEL/SQL Paper"

\end_inset

]).
\end_layout

\begin_layout Subsubsection*
Query Pattern
\end_layout

\begin_layout Standard
Das Query Pattern beschreibt die Notwendigkeit mithilfe von SQL-Befehlen
 externe Daten anfordern zu können.
 Die aus den Queries resultierenden Daten können dabei auf der Datenquelle
 extern gespeichert oder direkt im Prozessspeicher gehalten werden.
\end_layout

\begin_layout Subsubsection*
Set IUD Pattern
\end_layout

\begin_layout Standard
Das Set IUD Pattern beschreibt die Möglichkeit mengenorientiertes Einfügen
 (insert), Aktualisieren (update) und Löschen (delete) auf externen Daten
 durchführen zu können.
\end_layout

\begin_layout Subsubsection*
Data Setup Pattern
\end_layout

\begin_layout Standard
Das Data Setup Pattern liefert die Möglichkeit benötigte Data Definition
 Language (DDL) Befehle auf einem relationalen Datenbanksystem auszuführen,
 um so während der Prozessausführung die Datenquelle zu konfigurieren oder
 neue Container (Tabellen, Schema, usw.) zu erstellen.
\end_layout

\begin_layout Subsubsection*
Stored Procedure Pattern
\end_layout

\begin_layout Standard
Da die Verarbeitung von komplexen Daten meist durch Stored Procedures erfolgt,
 ist es bei der Verarbeitung von externen Daten unbedingt erforderlich,
 Stored Procedures auch aus einem Prozess heraus aufrufen zu können.
\end_layout

\begin_layout Subsubsection*
Set Retrieval Pattern
\end_layout

\begin_layout Standard
Manchmal ist es nötig Daten innerhalb des Prozessspeichers verarbeiten zu
 können.
 Das Set Retrieval Pattern liefert dafür eine mengenorientierte Datenstruktur,
 in die man die angefragten externen Daten innerhalb des Prozessspeichers
 ablegen kann.
 Diese Datenstruktur verhält sich dabei wie ein Cache im Prozessspeicher,
 der keine Verbindung zur originalen Datenquelle besitzt.
\end_layout

\begin_layout Subsubsection*
Set Access Pattern
\end_layout

\begin_layout Standard
Das Set Access Pattern beschreibt die Notwendigkeit auf den erzeugten Datencache
 sequentiell und direkt (random) zugreifen zu können.
\end_layout

\begin_layout Subsubsection*
Tuple IUD Pattern
\end_layout

\begin_layout Standard
Das Tuple IUD Pattern beinhaltet einfügen (insert), aktualisieren (update)
 und löschen (delete) von Daten im Datencache.
\end_layout

\begin_layout Subsubsection*
Synchronization Pattern
\end_layout

\begin_layout Standard
Das Synchronization Pattern realisiert die Synchronisation eines lokalen
 Datencaches mit der originalen Datenquelle.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Umsetzung-der-Datenmanagement"

\end_inset

Umsetzung der Datenmanagement Patterns 
\end_layout

\begin_layout Standard
In diesem Abschnitt wird die Realisierung der acht Datenmanagement Patterns
 aus Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Datenmanagement-Patterns"

\end_inset

 im Zusammenhang mit den jeweiligen Datenquellentypen beschrieben.
\end_layout

\begin_layout Subsubsection*
Dateisysteme
\end_layout

\begin_layout Standard
Hier wird die Umsetzung der in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Datenmanagement-Patterns"

\end_inset

 beschriebenen Patterns im Bereich der Dateisysteme durch entsprechende
 Systemaufrufe (Betriebssystem) beschrieben.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Minimale Unterstützung von folgenden OS und ihren Dateisystemen:
\end_layout

\begin_layout Plain Layout
Linux: ext3 (http://de.wikipedia.org/wiki/Ext3)
\end_layout

\begin_layout Plain Layout
Microsoft: NTFS (http://de.wikipedia.org/wiki/NTFS)
\end_layout

\begin_layout Plain Layout
Mac: HFS+ (http://de.wikipedia.org/wiki/HFS_plus)
\end_layout

\begin_layout Plain Layout
siehe auch wikipedia: http://de.wikipedia.org/wiki/Liste_von_Dateisystemen
 und http://de.wikipedia.org/wiki/Dateisystem
\end_layout

\begin_layout Plain Layout
-----------------------------------------------------------------
\end_layout

\begin_layout Plain Layout
C:
\backslash
Dokumente und Einstellungen
\backslash
benutzername
\backslash
Eigene Dateien
\backslash
Texte
\backslash
Brief1.txt (Windows 2000/XP) 
\end_layout

\begin_layout Plain Layout
/Users/benutzername/Texte/Brief1.txt (Mac OS X) 
\end_layout

\begin_layout Plain Layout
/home/benutzername/Texte/Brief1.txt (Unix/Linux)
\end_layout

\begin_layout Plain Layout
-----------------------------------------------------------------
\end_layout

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

WebDAV (Web-based Distributed Authoring and Versioning) ist ein offener
 Standard zur Bereitstellung von Dateien im Internet.
 
\end_layout

\begin_layout Plain Layout
Dabei können Benutzer auf ihre Daten wie auf eine Online-Festplatte zugreifen.
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Plain Layout
Quelle: http://de.wikipedia.org/wiki/WebDAV
\end_layout

\begin_layout Plain Layout
-----------------------------------------------------------------
\end_layout

\begin_layout Plain Layout
Java unterstützt mindestens UNIX und Windows Dateisysteme, über Mac keine
 Aussage gefunden.
\end_layout

\begin_layout Plain Layout
(http://java.sun.com/javase/6/docs/api/java/io/File.html)
\end_layout

\begin_layout Plain Layout
Wahrscheinlich Zugriff über JNDI-FileSystemServiceProvider ähnlich, wie
 bei DB und DataSource-Objekten.
\end_layout

\begin_layout Plain Layout
Wie wird dann aber die Verbindung zum Zielrechner, auf dem das Binding für
 das Dateisystem liegt, hergestellt?
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Query Pattern: Realisierung durch eine GET-Methode, die intern java.io Methoden
 verwendet, um Inhalte aus Dateien oder komplette Dateien aus einem Dateisystem
 zu lesen.
 Dafür muss noch ein Konzept erarbeitet werden, wie entsprechende Daten
 gezielt über einen Befehl ausgewählt und abgefragt werden können.
 Eine Möglichkeit wäre z.B.
 einen Filter-Dialog zur Angabe von Suchparametern über die GUI bereitzustellen,
 der es ermöglicht Dateiinhalte zu suchen und zurückzugeben.
\end_layout

\begin_layout Itemize
Set IUD Pattern: Realisierung durch eine entsprechende PUT- und eine REMOVE-Meth
ode (RM), die intern java.io Methoden verwenden, um Inhalt in Dateien zu
 schreiben und aus ihnen zu löschen.
 Ein Update wird bei Dateien intern durch das Löschen des alten Wertes und
 anschließendem Einfügen des neuen Wertes ausgeführt.
 Dafür muss noch ein Konzept erarbeitet werden, wie entsprechende Informationen
 gezielt über einen Befehl eingefügt und gelöscht werden können.
\end_layout

\begin_layout Itemize
Data Setup Pattern: Realisierung durch die Verwendung entsprechender Erzeugungs-
Methoden, wie MKDIR und MKFILE zur Erzeugung von Ordnern und Dateien.
 Diese werden intern wieder durch java.io-Methoden realisiert.
 Hier sollte es auf jeden Fall möglich sein, Dateien und Ordner in einem
 Dateisystem erzeugen zu können.
 Ebenso sollte optional das Löschen auf der gleichen Ebene, d.h.
 von ganzen Dateien und Ordnern, möglich sein.
\end_layout

\begin_layout Itemize
Stored Procedure Pattern: Findet im Rahmen der Dateisysteme keine Verwendung.
\end_layout

\begin_layout Itemize
Set Retrieval Pattern: Realisierung durch die Definition und Bereitstellung
 einer entsprechenden Aktivität, die Daten kapselt und im Prozessspeicher
 halten kann, für BPEL.
 Eine solche Aktivität liefert dann die Möglichkeit, dass in ihren Ausprägungen
 Ergebnisse von Queries (siehe Query Pattern), die über die 
\emph on
Service Data Objects API
\emph default
 (SDO API) abstrahiert wurden, innerhalb des Prozessspeichers abgelegt werden
 können.
 Die Firma IBM hat mit ihrer 
\emph on
Business Integration Suite
\emph default
 und dem darin enthaltenen 
\emph on
WebSphere Integration Developer
\emph default
 bereits eine Umsetzung dieses Patterns als Aktivität mit der Bezeichnung
 
\emph on

\begin_inset Quotes eld
\end_inset

Retrieve Set Activity
\begin_inset Quotes erd
\end_inset


\emph default
 realisiert.
 Dabei werden in einer Retrieve Set Activity externe Daten in eine XML-Struktur
 innerhalb des Prozessspeichers geladen, eine etwas ausführlichere Beschreibung
 liefert [
\begin_inset CommandInset ref
LatexCommand ref
reference "BPEL/SQL Paper"

\end_inset

].
\end_layout

\begin_layout Itemize
Set Access Pattern: Um das Set Access Pattern zu realisieren, müssen Methoden,
 die eine sequentielle und direkte Bearbeitung des Datencache einer RetrieveSet
 Activity realisieren, bereitgestellt werden.
 D.h.
 konkret, dass es möglich sein muss, mit der definierten Aktivität innerhalb
 von BPEL zu arbeiten.
 Die SDO API liefert dafür bereits einige Methoden die verwendet werden
 können.
 Es muss weiterhin möglich sein, dass eine entsprechende Aktivität auch
 in Containern, wie z.B.
 einer ForEach Activity, korrekt ausgeführt wird.
\end_layout

\begin_layout Itemize
Tuple IUD Pattern: Erweitert die Set Access Pattern Methoden um die Möglichkeite
n Werte innerhalb der mengenorientierten Datenstruktur im Prozessspeicher
 zu aktualisieren, einzufügen und zu löschen.
 Die SDO API liefert dafür bereits einige Methoden die verwendet werden
 können.
 
\end_layout

\begin_layout Itemize
Synchronization Pattern: Um die Daten aus dem Prozesscache zurück auf die
 originale Datenquelle zu übertragen, muss ebenfalls eine neue BPEL-Aktivität
 erstellt werden, durch die der Benutzer angibt, dass die Daten zurückgeschriebe
n werden sollen.
 Diese Aktivität nutzt dann intern die im Set IUD Pattern und Set Access
 Pattern beschriebenen Methoden um die Daten aus dem Prozesscache auf die
 Datenquelle zu übertragen.
 Die SDO API und die 
\emph on
Data Access Services API
\emph default
 (DAS API) liefern dafür bereits einige Methoden die verwendet werden können.
\end_layout

\begin_layout Subsubsection*
Datenbanken
\end_layout

\begin_layout Standard
Hier wird die Umsetzung der in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Datenmanagement-Patterns"

\end_inset

 beschriebenen Patterns im Bereich der Datenbanken durch bestehende SQL
 und XQuery-Befehle oder falls erforderlich durch die Definition neuer zu
 implementierender Funktionen beschrieben.
\end_layout

\begin_layout Itemize
Query Pattern: Realisierung durch SQL-SELECT oder entsprechende XQuery-Befehle.
\end_layout

\begin_deeper
\begin_layout Itemize
Beispiele: 
\end_layout

\begin_deeper
\begin_layout Itemize
SELECT Info FROM Customer 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
NEUE BPEL-AKTIVITÄT: Namensvorschlag => SELECT Activity
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
XQUERY db2-fn:xmlcolumn (’CUSTOMER.INFO’)
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Set IUD Pattern: Realisierung durch SQL-INSERT, SQL-UPDATE, SQL-DELETE oder
 entsprechende XQuery-Befehle.
\end_layout

\begin_deeper
\begin_layout Itemize
Beispiele: 
\end_layout

\begin_deeper
\begin_layout Itemize
INSERT INTO DEPARTMENT VALUES (’E31’, ’ARCHITECTURE’, ’00390’, ’E01’) 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
NEUE BPEL-AKTIVITÄT: Namensvorschlag => Insert Activity
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
UPDATE EMPLOYEE SET JOB = ’LABORER’ WHERE EMPNO = ’000290’ 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
NEUE BPEL-AKTIVITÄT: Namensvorschlag => Update Activity
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
DELETE FROM DEPARTMENT WHERE DEPTNO = ’D11’ 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
NEUE BPEL-AKTIVITÄT: Namensvorschlag => Delete Activity
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
xquery transform copy $mycust := db2-fn:sqlquery(’select info from customer
 where cid = 1004’) modify do insert <billto country="Canada"> <street>4441
 Wagner</street> <city>Aurora</city> <prov-state>Ontario</prov-state> <pcode-zip
>
\begin_inset Newline newline
\end_inset

N8X 7F8</pcode-zip> </billto> after $mycust/customerinfo/phone[last()] return
 $mycust
\end_layout

\begin_layout Itemize
UPDATE Customer SET info = XMLQUERY( ’declare default element namespace
 "http://posample.org"; transform copy $newinfo := $info modify do delete
 ($newinfo/customerinfo/phone) return $newinfo’ passing info as "info")
 WHERE cid = 1002
\end_layout

\begin_layout Itemize
xquery transform copy $mycust := db2-fn:sqlquery(’select INFO from CUSTOMER
 where Cid = 1003’) modify do delete $mycust/customerinfo/phone[@type!="home"]
 return $mycust
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Data Setup Pattern: Realisierung durch SQL-CREATE SCHEMA, SQL-CREATE TABLE,
 SQL-CREATE VIEW und weitere SQL-CREATE Befehle.
 Falls optional auch das Löschen dieser Objekte möglich sein soll, wird
 dies durch SQL-DROP realisiert.
\end_layout

\begin_deeper
\begin_layout Itemize
Beispiele: 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Hier eventuell auch eine Create Activity in deren Eigenschaften man Schema,
 Table oder View als Option auswählt.
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
CREATE SCHEMA INTERNAL AUTHORIZATION ADMIN 
\end_layout

\begin_layout Itemize
CREATE TABLE TDEPT (DEPTNO CHAR(3) NOT NULL, DEPTNAME VARCHAR(36) NOT NULL,
 MGRNO CHAR(6), ADMRDEPT CHAR(3) NOT NULL, PRIMARY KEY(DEPTNO)) IN DEPARTX
 
\end_layout

\begin_layout Itemize
CREATE VIEW ADMINISTRATOR.KUND_WITH_ADR AS 
\begin_inset Newline newline
\end_inset

SELECT KUNDEN.KUNDEN_NR, KUNDEN.VORNAME, KUNDEN.NACHNAME, ADRESSEN.STRASSE,
 ADRESSEN.POSTLEITZAHL, ADRESSEN.STADT FROM "SYSTEM".KUNDEN AS KUNDEN, "SYSTEM".ADRE
SSEN AS ADRESSEN WHERE KUNDEN.KUNDEN_NR = ADRESSEN.KUNDEN_NR
\end_layout

\begin_layout Itemize
DROP SCHEMA INTERNAL
\end_layout

\begin_layout Itemize
DROP TABLE TDEPT
\end_layout

\begin_layout Itemize
DROP VIEW ADMINISTRATOR.KUND_WITH_ADR
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
NEUE BPEL-AKTIVITÄT: Namensvorschlag => Drop Activity
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Stored Procedure Pattern: Realisierung durch SQL-CALL (Aufruf über JDBC
 API möglich).
\end_layout

\begin_deeper
\begin_layout Itemize
Beispiele:
\end_layout

\begin_deeper
\begin_layout Itemize
CALL PARTS_ON_HAND (?,?,?) 
\shape italic
(? = Parameter der Prozedur)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
NEUE BPEL-AKTIVITÄT: Namensvorschlag => Call Activity
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Set Retrieval Pattern: Realisierung durch die Definition und Bereitstellung
 einer entsprechenden Aktivität, die eine mengenorientierte Datenstrukur
 kapseln kann, für BPEL.
 Eine solche Aktivität liefert dann die Möglichkeit, dass in Ausprägungen
 dieser Aktivität, Ergebnisse von Queries (siehe Query Pattern), die über
 die SDO API abstrahiert wurden, innerhalb des Prozessspeichers abgelegt
 werden können.
 Die Firma IBM hat mit ihrer 
\emph on
Business Integration Suite
\emph default
 und dem darin enthaltenen 
\emph on
WebSphere Integration Developer
\emph default
 bereits eine Umsetzung dieses Patterns als Aktivität mit der Bezeichnung
 
\emph on

\begin_inset Quotes eld
\end_inset

Retrieve Set Activity
\begin_inset Quotes erd
\end_inset


\emph default
 realisiert.
 Dabei werden in einer Retrieve Set Activity externe Daten in eine XML-Struktur
 innerhalb des Prozessspeichers geladen, eine etwas ausführlichere Beschreibung
 liefert [
\begin_inset CommandInset ref
LatexCommand ref
reference "BPEL/SQL Paper"

\end_inset

].
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
NEUE BPEL-AKTIVITÄT: Namensvorschlag => RetrieveSet Activity (IBM)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Set Access Pattern: Um das Set Access Pattern zu realisieren, müssen Methoden,
 die eine sequentielle und direkte Bearbeitung der mengenorientierten Datenstruk
tur realisieren, bereitgestellt werden.
 D.h.
 konkret, dass es möglich sein muss, mit mengenorientierten Daten innerhalb
 von BPEL zu arbeiten.
 Die SDO API liefert dafür bereits einige Methoden die verwendet werden
 können.
 Bei der Kapselung als Aktivität muss es auch möglich sein, dass die entsprechen
de Aktivität auch in Containern, wie z.B.
 einer ForEach Activity, entsprechend korrekt ausgeführt wird.
 
\end_layout

\begin_layout Itemize
Tuple IUD Pattern: Erweitert die Set Access Pattern Methoden um die Möglichkeite
n Werte innerhalb der mengenorientierten Datenstruktur im Prozessspeicher
 zu aktualisieren, einzufügen und zu löschen.
 Die SDO API liefert dafür bereits einige Methoden die verwendet werden
 können.
 
\end_layout

\begin_layout Itemize
Synchronization Pattern: Um die Daten aus dem Prozesscache zurück auf die
 originale Datenquelle zu übertragen, muss ebenfalls eine neue BPEL-Aktivität
 erstellt werden, durch die der Benutzer angibt, dass die Daten zurückgeschriebe
n werden sollen.
 Diese Aktivität nutzt dann intern die im Set IUD Pattern und Set Access
 Pattern beschriebenen Methoden und ebenso SQL-Befehle um die Daten aus
 dem Prozesscache auf die Datenquelle zu übertragen.
 Die SDO API und die DAS API liefern dafür bereits einige Methoden die verwendet
 werden können.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
NEUE BPEL-AKTIVITÄT: Namensvorschlag => WriteBack Activity
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
\begin_inset CommandInset label
LatexCommand label
name "sub:Sensornetze"

\end_inset

Sensornetze
\end_layout

\begin_layout Standard
Hier wird die Umsetzung der in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Datenmanagement-Patterns"

\end_inset

 beschriebenen Patterns im Bereich der Sensornetze und deren Datenbanken
 durch bestehende sensornetzspezifische SQL-Befehle oder falls erforderlich
 durch die Definition neuer zu implementierender Funktionen beschrieben.
 Alle SQL-Befehls Beispiele beziehen sich hier auf den SQL-Dialekt der Sensornet
z-Datenbank TinyDB.
\end_layout

\begin_layout Itemize
Query Pattern: Realisierung durch ein entsprechendes SQL-SELECT der Sensornetz-D
atenbank.
\end_layout

\begin_deeper
\begin_layout Itemize
Befehlsstruktur: SELECT select-list [FROM sensors] WHERE where-clause [GROUP
 BY gb-list [HAVING having-list]][TRIGGER ACTION command-name[(param)]]
 [EPOCH DURATION integer]
\end_layout

\begin_layout Itemize
Beispiele: 
\end_layout

\begin_deeper
\begin_layout Itemize
SELECT temp FROM sensors WHERE temp > thresh TRIGGER ACTION SetSnd(512)
 EPOCH DURATION 512
\end_layout

\begin_layout Itemize
SELECT field1, field2 SAMPLE PERIOD 100 FROM name (SELECT auf Buffer-Tabelle
 
\emph on
name
\emph default
)
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Set IUD Pattern: Dieses Pattern wird von Sensornetz-Datenbanken nicht unterstütz
t, da Sensoren nur ausgelesen und nicht beschrieben werden können.
 Darum ist das Einfügen, Aktualisieren und Löschen von externen Daten auf
 einer Sensornetz-Datenbank nicht möglich.
 Es besteht lediglich die Möglichkeit sensornetzintern in einem Buffer Werte
 zwischenzuspeichern und den Buffer zu löschen.
 Realisiert wird dies durch im Arbeitsspeicher von Sensoren (siehe Data
 Setup Pattern) erstellte Tabellen, die mit momentanen Sensorwerten gefüllt
 werden können, um später die Daten zeitversetzt abrufen zu können.
 Die gewünschten Werte werden dabei mit einem entsprechenden SQL-SELECT
 Befehl in den Buffer geschrieben.
\end_layout

\begin_deeper
\begin_layout Itemize
Befehlsstruktur: 
\end_layout

\begin_deeper
\begin_layout Itemize
Werte einfügen in Buffer-Tabelle: SELECT field1, field2, ...
 FROM sensors SAMPLE PERIOD x INTO name
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Data Setup Pattern: Es können Tabellen im Arbeitsspeicher der Sensoren erstellt
 werden, die dann Werte von Sensoren aufnehmen und halten können.
 Die Erstellung solcher Tabellen wird durch SQL-CREATE BUFFER und das Löschen
 des gesamten Buffers durch SQL-DROP realisiert.
\end_layout

\begin_deeper
\begin_layout Itemize
Eine Buffer-Tabelle erstellen: CREATE BUFFER name SIZE x ( field1 type,
 field2 type, ...
 ) 
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
Bemerkungen: 
\series bold
\emph default
x
\series default
\emph on
 ist die Anzahl der Zeilen, 
\series bold
type
\series default
 ist ein Datentyp aus der Menge {uint8, uint16, uint16, int8, int16, int32}
 und 
\series bold
field1
\series default
, 
\series bold
field2
\series default
, usw.
 sind Spaltennamen, die wie der Tabellenname jeweils 8 Zeichen lang sein
 dürfen.
\end_layout

\end_deeper
\begin_layout Itemize
Alle Buffer-Tabellen löschen: DROP ALL
\end_layout

\end_deeper
\begin_layout Itemize
Stored Procedure Pattern: Es gibt für die TinyDB einen 
\emph on
stored procedures
\emph default
 ähnlichen Ansatz, dabei können falls eine bestimmte Bedingung gilt (z.B.
 Temperatur > 20°C) sogenannte 
\emph on
commands 
\emph default
aufgerufen werden.
 Der Code für diese Methoden wird auf die entsprechenden Sensoren übertragen
 und dort dann bei Bedarf ausgeführt.
 Ein Zugriff von außerhalb wie bei 
\emph on
stored procedures
\emph default
 ist hier allerdings nicht möglich.
\end_layout

\begin_deeper
\begin_layout Itemize
Beispiele:
\end_layout

\begin_deeper
\begin_layout Itemize
SELECT temp FROM sensors WHERE temp > thresh TRIGGER ACTION SetSnd(512)
 EPOCH DURATION 512
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
Bemerkungen: Hier wird alle 512ms die Temperatur an den Sensoren abgefragt
 und falls diese einen gewissen Wert übersteigt, wird über den 
\series bold
command
\series default
 SetSnd(512) für 512ms ein Signalton ausgegeben.
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Itemize
Set Retrieval Pattern: Realisierung ebenso wie bei Datenbanken beschrieben.
\end_layout

\begin_layout Itemize
Set Access Pattern: Realisierung ebenso wie bei Datenbanken beschrieben.
\end_layout

\begin_layout Itemize
Tuple IUD Pattern: Realisierung ebenso wie bei Datenbanken beschrieben.
\end_layout

\begin_layout Itemize
Synchronization Pattern: Hier gilt dasselbe wie für das Set IUD Pattern.
 Da es nicht möglich ist, Daten von außen in die Sensornetz-Datenbank einzubring
en, wird die Realisierung dieses Patterns nicht unterstützt bzw.
 benötigt.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Resultierende-BPEL-Aktivitäten"

\end_inset

Resultierende BPEL-Aktivitäten
\end_layout

\begin_layout Standard
In diesem Abschnitt werden die durch Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Umsetzung-der-Datenmanagement"

\end_inset

 identifizierten BPEL-Aktivitäten aufgezählt und ihre Funktion noch einmal
 kurz beschrieben.
 Dazu gehört z.B.
 auch welche Attribute welchen Typs für die einzelnen Aktivitäten benötigt
 werden.
 Generell gilt, dass alle Aktivitäten momentan mindestens die drei Variablen
 
\emph on
kind
\emph default
, 
\emph on
dqAddress
\emph default
 und
\emph on
 statement
\emph default
 vom Typ String besitzen.
 Die Variable 
\emph on
kind
\emph default
 dient zur Angabe des Datenquellentyps für den die Aktivität ausgeführt
 wird, also ob es sich um ein Dateisystem, eine Datenbank oder ein Sensornetz
 handelt.
 Diese Auswahl ist wichtig um intern den richtigen SQL-Dialekt bzw.
 Befehlssatz für die entsprechende Datenquelle auszuwählen.
 Die Variable 
\emph on
dqAddress
\emph default
 dient zur Angabe der Datenquellenadresse und die Variable 
\emph on
statement 
\emph default
zur Haltung des entsprechenden Systemaufrufs bzw.
 SQL- oder XQuery-Befehls der ausgeführt werden soll.
 Diese drei Variablen besitzt jede der definierten Aktivitäten.
 Darum werden diese nachfolgend nicht mehr angegeben und nur falls benötigt
 weitere aktivitätsspezifische Variablen beschrieben.
 Weiterhin werden die verschiedenen Ausprägungen der einzelnen Aktivitäten
 im Hinblick auf die zugrundeliegende Datenquelle aufgezeigt, so dass am
 Ende ein vollständiger Überblick aller definierten Aktivitäten und ihrer
 Ausprägungen vorliegt.
 Generell gibt es durch die verschiedenen Datenquellen nur wenige strukturelle
 Unterschiede in den Aktivitäten.
 Das liegt vorallem daran, dass auf datenquellenspezifische Eigenschaften
 bereits in der graphischen Oberfläche, also dem Eclipse BPEL Designer,
 eingegangen werden soll und diese so durch entsprechende Dialoge intern
 immer auf dieselbe Struktur abgebildet werden können.
 Eben dazu sollen auch alle Befehle über entsprechende graphische Elemente
 angegeben werden können, indem sie einfach 
\begin_inset Quotes eld
\end_inset

zusammengeklickt
\begin_inset Quotes erd
\end_inset

 werden können (siehe Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Eigenschaftsfenster-einer-Data-Management-Aktivität"

\end_inset

).
 Dadurch solle eine allgemein einfachere Handhabung realisiert werden, denn
 wie diese Befehle nun intern verarbeitet werden, braucht der Benutzer nicht
 zu wissen und er kann dadurch schnellstmöglich ohne sehr detailierte Kentnisse
 der Anfragesprache alle zur Verfügung gestellten Daten- und Datenquellenbefehle
 für alle unterstützten Datenquellen ausführen.
\end_layout

\begin_layout Subsubsection*
Query Activity
\end_layout

\begin_layout Standard
Diese Aktivität ermöglicht es aus jeder beliebigen Datenquelle Daten zu
 lesen.
 Weitere spezifische Attribute werden dafür nicht benötigt.
 Die Query Activity ist für alle Datenquellen gleich strukturiert und nur
 die entsprechenden Query-Befehle unterscheiden sich je nach Datenquelle.
\end_layout

\begin_layout Subsubsection*
Insert Activity
\end_layout

\begin_layout Standard
Diese Aktivität ermöglicht es Daten in jede Datenquelle einzufügen.
 Da dies für Sensornetze nicht relevant ist, wird diese Aktivität für Sensornetz
e für das sensornetzinterne Einfügen von Sensornetzdaten in Buffer-Tabellen
 genutzt (wie auch in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Sensornetze"

\end_inset

 beschrieben).
\end_layout

\begin_layout Subsubsection*
Update Activity
\end_layout

\begin_layout Standard
Diese Aktivität ermöglicht es Daten aus Datenquellen mit externen Daten
 zu aktualisieren.
 Diese Aktivität existiert nicht für Sensornetze.
\end_layout

\begin_layout Subsubsection*
Delete Activity
\end_layout

\begin_layout Standard
Diese Aktivität ermöglicht es Daten auf beliebigen Datenquellen zu löschen.
 Diese Aktivität existiert nicht für Sensornetze.
\end_layout

\begin_layout Subsubsection*
Create Activity
\end_layout

\begin_layout Standard
Diese Aktivität ermöglicht es Zuordnungseinheiten (Dateien, Ordner, Tabellen,
 Schema, usw.) auf beliebigen Datenquellen zu erstellen.
 Dabei werden die folgenden Befehle zur Erstellung von Zuordnungseinheiten
 auf den entsprechenden Datenquellen benötigt:
\end_layout

\begin_layout Itemize
Dateisysteme
\end_layout

\begin_deeper
\begin_layout Itemize
MKDIR FOLDER
\end_layout

\begin_layout Itemize
MKFILE FILE
\end_layout

\end_deeper
\begin_layout Itemize
Datenbanken
\end_layout

\begin_deeper
\begin_layout Itemize
CREATE TABLE
\end_layout

\begin_layout Itemize
CREATE SCHEMA
\end_layout

\begin_layout Itemize
CREATE VIEW
\end_layout

\end_deeper
\begin_layout Itemize
Sensornetze
\end_layout

\begin_deeper
\begin_layout Itemize
CREATE BUFFER
\end_layout

\end_deeper
\begin_layout Subsubsection*
Call Activity
\end_layout

\begin_layout Standard
Diese Aktivität ermöglicht es auf der Datenquelle hinterlegte Prozeduren
 auszuführen.
 Diese Aktivität existiert nur für Datenbanken.
\end_layout

\begin_layout Subsubsection*
RetrieveSet Activity
\end_layout

\begin_layout Standard
Diese Aktivität ermöglicht es Daten von Datenquellen in den Prozessspeicher
 zu laden.
\end_layout

\begin_layout Subsubsection*
WriteBack Activity
\end_layout

\begin_layout Standard
Diese Aktivität ermöglicht es Daten aus dem Prozessspeicher auf die originale
 Datenquelle zurückzuschreiben.
 Diese Aktivität existiert nicht für Sensornetze.
\end_layout

\begin_layout Subsubsection*
Optionale Aktivitäten:
\end_layout

\begin_layout Itemize

\series bold
Import Activity
\series default
: Diese Aktivität ermöglicht es lokale Daten (z.B.
 Simulationsparameter) des Benutzers in einen Prozess einzubinden und in
 diesem zu verwenden.
\end_layout

\begin_layout Itemize

\series bold
Export Activity
\series default
: Diese Aktivität ermöglicht es Daten eines Prozesses (z.B.
 Simulationsergebnisse) lokal auf den Benutzer-Rechner zu exportieren.
\end_layout

\begin_layout Itemize

\series bold
Move Activity
\series default
: Diese Aktivität ermöglicht es Daten zwischen beliebigen Datenquellen zu
 kopieren/verschieben, d.h.
 es können beispielsweise Daten aus einer Datei in eine Datenbank-Tabelle
 verschoben/kopiert werden.
\end_layout

\begin_layout Itemize

\series bold
Drop Activity
\series default
: Diese Aktivität ermöglicht es Zuordnungseinheiten auf beliebigen Datenquellen
 zu löschen.
 Dazu werden die folgenden Befehle benötigt:
\end_layout

\begin_deeper
\begin_layout Itemize
Dateisysteme
\end_layout

\begin_deeper
\begin_layout Itemize
RMDIR FOLDER
\end_layout

\begin_layout Itemize
RM FILE
\end_layout

\end_deeper
\begin_layout Itemize
Datenbanken
\end_layout

\begin_deeper
\begin_layout Itemize
DROP TABLE
\end_layout

\begin_layout Itemize
DROP SCHEMA
\end_layout

\begin_layout Itemize
DROP VIEW
\end_layout

\end_deeper
\begin_layout Itemize
Sensornetze
\end_layout

\begin_deeper
\begin_layout Itemize
DROP ALL
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsection
Eclipse BPEL Designer
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Diesen kompleten Abschnitt 6.3 sprachlich überprüfen und korrigieren .
 Feras :) 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Im folgender Abbildung ist der kommplete UI der Rahmenwerk von SIMPL.
 Auf der rechte Seite befindet sich Menu 
\begin_inset Quotes eld
\end_inset

DataManagement
\begin_inset Quotes erd
\end_inset

 mit aller Aktivitäten für die Erzeugung von Data-Aktivität, Select, update
 etc.
 zuständig sind.
\end_layout

\begin_layout Standard
Beim Auswählen bzw.
 Drag-and-Drop einer dieser graphische Darstellungen der Aktivitäten, dann
 erscheint entsprechend einer neue Aktivität in dem Bpel-prozess an der
 ausgewählte Position im Prozess.
\end_layout

\begin_layout Standard
Ausserdem können wir den Popup-Menu vom SIMPL im Eclipse Menuleiste sehen,
 dass alle Navigationspunkte für die Anwendungsaktivitäten wie 
\begin_inset Quotes eld
\end_inset

Admin console
\begin_inset Quotes erd
\end_inset

 oder 
\begin_inset Quotes eld
\end_inset

Settings
\begin_inset Quotes erd
\end_inset

 etc.
 beinhaltet.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ProtoTyp_Screenshots/SIMPL_menu_iter1.JPG
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
SIMPL Menü und Eclipse BPEL Designer mit einigen Data-Management-Aktivitäten
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Admin-Konsole
\end_layout

\begin_layout Standard
Beim anklicken auf dem Untermenupunkt 
\begin_inset Quotes eld
\end_inset

Admin Console
\begin_inset Quotes erd
\end_inset

 öffnet sich der Adminkonsole Dialog.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ProtoTyp_Screenshots/SIMPL_menu_mini_iter1.jpg

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Admin-Konsole Untermenupunkt
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Hier ist der Adminkonsole Dialog zu sehen.
 Mithilfe die Unterbaumpunkte können verschiedene Einstellungen angebracht
 werden wie 
\begin_inset Quotes eld
\end_inset

Global settings
\begin_inset Quotes erd
\end_inset

, die Strategien oder Datenquellen etc.
\end_layout

\begin_layout Standard
Auf der untere rechte Seite dieser Dialog befinden sich die zwei Schaltflechen
 
\begin_inset Quotes eld
\end_inset

Save
\begin_inset Quotes erd
\end_inset

 und 
\begin_inset Quotes eld
\end_inset

Cancel
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Save
\begin_inset Quotes erd
\end_inset

 Schaltfläche: damit werden die angebrachte Änderungen gespeichert und der
 Dialog wird geschlossen.
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Cancel
\begin_inset Quotes erd
\end_inset

 Schaltfläche: damit wird einfach der Dialog geschlossen ohne Berücksichtigung
 der Änderungen, die innerhalb der Konsole angebracht wurden.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ProtoTyp_Screenshots/AdminKonsoleNeuIter1.jpg
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Admin-Konsole
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subparagraph
Globale Eigenschaften
\end_layout

\begin_layout Standard
In folgeneden Dialog kann der Benutzer über den Unterbaumpunkt 
\begin_inset Quotes eld
\end_inset

Global settings-Authentication Data
\begin_inset Quotes erd
\end_inset

 die Zugangsdaten angeben.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ProtoTyp_Screenshots/GlobaleSettings_AuthenticationDataIter1.jpg
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Globale Eigenschaften Dialog
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subparagraph
Auditing
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ProtoTyp_Screenshots/Auditing_generalIter1.jpg
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Globale Eigenschaften Dialog
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Data-Management-Aktivitäten
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ProtoTyp_Screenshots/SelectBPELPropertySectionFinal_iter1.JPG
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Eigenschaftsfenster-einer-Data-Management-Aktivität"

\end_inset

Eigenschaftsfenster einer Data-Management-Aktivität am Beispiel einer Query
 Activity
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Monitoring und Auditing
\end_layout

\begin_layout Standard
In diesem Abschnitt wird eine Beschreibung des geplannten Auditing und Monitorin
g von SIMPL gegeben.
 Zunächst wird auf die bestehenden Möglichkeiten des Monitorings von ODE
 eingegangen.
 Hier folgt eine Erläuterung aller relevanten Begriffe die für das Monitoring
 wichtig sind, sowie einige Übersichten zur Veranschaulichung.
 Anschließend folgt eine kurze Beschreibung darüber wie das Monitoring und
 Auditing in ODE aussehen soll, dies wird durch Event Modelle veranschaulicht.
\end_layout

\begin_layout Subsubsection
Momentane Situation - Monitoring von ODE
\end_layout

\begin_layout Standard
Das Monitoring von ODE wird durch sogenannte Events und Event Listener sowie
 die Management API realisiert.
\end_layout

\begin_layout Subsubsection*
Events: 
\end_layout

\begin_layout Standard
Events sind Ereignisse die auftreten wenn bestimmte Aktionen innerhalb der
 ODE Engine durchgeführt werden.
 Zum Beispiel das Aktivieren eines Prozesses oder das Erzeugen einer neuen
 Prozessinstanz.
 Diese Events machen es möglich, zu verfolgen was innerhalb der ODE Engine
 passiert und produzieren detailierte Informationen über die Prozessausführung.
 Sie können mit Hilfe der Management API abgefragt werden oder man nutzt
 Event Listener.
\end_layout

\begin_layout Subsubsection*
Event Listener:
\end_layout

\begin_layout Standard
Event Listener sind bestimmte Konstrukte die es ermöglichen bei Auftreten
 bestimmter Events eine direkte Rückmeldung zu geben, oder auf verschiedene
 Events zu reagieren und event-spezifische Aktionen durchführen.
\end_layout

\begin_layout Subsubsection*
Management API:
\end_layout

\begin_layout Standard
Die Management API der ODE Engine macht es möglich zahlreiche Informationen
 abzurufen.
 So ist es beispielsweies möglich, zu überprüfen welche Prozesse gerade
 eingesetzt werden und welche Prozessinstanzen ausgeführt werden oder beendet
 sind.
 Dies ist besonders für das Monitoring wichtig, da es hierdurch möglich
 ist spezifische Informationen zu einem bestimmten Prozess oder einer bestimmten
 Instanz abzurufen.
 Dies kann zum Beispiel das Erstellungsdatum sein, eine Liste der Events
 die für diesen Prozess oder diese Instanz generiert wurden und vieles mehr.
\end_layout

\begin_layout Subsubsection
Monitoring und Auditing von SIMPL
\end_layout

\begin_layout Standard
Im BPEL Designer ist der Zugriff auf das Monitoring und Auditing unter dem
 entsprechenden Menüpunkt möglich.
 Hier kommt man nun zum entsprechenden Interface in dem sich verschiedene
 Einstellungen für das Auditing und das Monitoring tätigen lassen (siehe
 6.3.1).
 Es ist möglich das Auditing als auch das Echtzeitmonitoring zu aktivieren
 oder zu deaktivieren und es ist außerdem möglich die Datenbank für das
 Speichern der Auditing Daten festzulegen.
\end_layout

\begin_layout Standard
Das Monitoring und Auditing von SIMPL wird sich nur auf die Prozesse und
 Instanzen der Datenzugriffsaktivitäten beschränken.
 Weiterhin ist zu erwähnen, dass das Auditing standardmäßig aktiviert ist,
 allerdings über die Adminkonsole deaktiviert und auch erneut aktiviert
 werden kann.
\end_layout

\begin_layout Subsubsection
Auditing
\end_layout

\begin_layout Standard
Wenn das Audutiting aktiviert wird, im Standardfall wenn SIMPL gestartet
 wird, wird eine Liste der Prozesse und Instanzen die momentan in der ODE
 Engine existieren abgerufen.
 Diese Listen werden in Form von XML-Datein übergeben.
 Nach Verarbeitung dieser Listen ist es nun weiterhin möglich detailierte
 Informationen und die aufgetretenen Events zu den einzelnen Prozessen und
 Instanzen abzurufen.
 Diese Informationen und Events werden ebenfalls in Form von XML-Datein
 übergeben.
 Diese Informationen werden anschließend als xml-Datein in einer entsprechenden
 Datenbank gespeichert.
 Es ist bisher nicht vorgesehen die Auditing Daten in irgendeiner Form weiterzuv
erarbeiten um diese als Strings in einer relationalen Datenbanke zu speichern.
\end_layout

\begin_layout Standard
Der zuvor beschriebene Vorgang des Abrufens und Verarbeitens der Daten,
 wird, so lange das Auditing aktiv ist, regelmäßig innerhalb einer bestimmten
 Zeit wiederholt.
\end_layout

\begin_layout Subsubsection
Monitoring
\end_layout

\begin_layout Standard
Das Monitoring von SIMPL wird als ein Echtzeitmonitoring realisiert.
 Die Informationsgewinnung des Monitoring würd über direkte Rückmeldungen
 auf Events die innerhalb der ODE Engine auftreten realisiert.
 Wenn ein Event auftritt, so zum Beispiel das Aktivieren eines Prozesses,
 oder das generieren einer neuen Prozessinstanz, dann erhält das Monitoring
 eine direkte Rückmeldung darüber und die Visualisierung ist möglich.
\end_layout

\begin_layout Standard
Eine Visualisierung nach verschiedenen Gesichtspunkten, wie zum Beispiel:
 Anzahl der aktiven Prozesse oder Prozessinstanzen soll möglich sein.
 Geplant sind bisher zwei Arten der Visualisierung, die in der Konzept-Grafik
 in 6.3.1 zu sehen sind.
 Die Monitoring Informationen werden nicht gespeichert sondern dienen jedeglich
 der Visualisierung.
\end_layout

\begin_layout Subsubsection
Event-Modelle
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Ok hab grad nocheinmal genauer gekuckt welche Art von Event Modell gefordert
 ist und anscheinend ist das was ich hier gemacht hab nich ganz das was
 gefordert ist ...
 Naja das jetzt noch irgendwie zu überarbeiten schaff ich leider nicht ...
 werd morgen wahrscheinlich mal euere Hilfe brauchen um das ganze noch hinzubeko
mmen!
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Anmerkung: Optionale Bestandteile des Monitoring und Auditing, die vorraussichtl
ich nicht im Lieferumfang enthalten sind, wurden im Event Modell markiert.
 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Monitoring Event Modell.jpg
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Event Modell des Monitoring
\end_layout

\end_inset


\end_layout

\end_inset

 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Event Modell Auditing.jpg
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Event Modell des Monitoring
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:MaterialienWerkzeuge"

\end_inset

Materialien, Werkzeuge und Technologien
\end_layout

\begin_layout Subsection
Materialien
\end_layout

\begin_layout Standard
java
\end_layout

\begin_layout Subsection
Technologien
\end_layout

\begin_layout Standard
Es werden die Verchiedene Technologien in Entwicklung eingesetzt:
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
hier gehts es um die Technologien ,die direkt auf den entwicklung sich beziehen
\end_layout

\begin_layout Plain Layout
über jeden folgender Technologien bzw.
 Werkzeuge eine kleinen Text 
\end_layout

\begin_layout Plain Layout
-was die sind 
\end_layout

\begin_layout Plain Layout
-und wichtig auch wofür sie in unsere Projekt gebraucht sind 
\end_layout

\begin_layout Plain Layout
-und warum die und nicht andere.
 Vorteil ,Nachteil.
 
\end_layout

\end_inset


\end_layout

\begin_layout Description
ApacheODE 
\begin_inset CommandInset href
LatexCommand href
name "http:/ode.apache.org"
target "http:/ode.apache.org"

\end_inset


\end_layout

\begin_layout Standard
Apache ODE ist eine BPEL-fähige Workflow-Engine.
 Es wird sowohl WS-BPEL 2.0 als auch BPEL4WS 1.1 unterstützt und die Ausführung
 von Prozessen in SOA ist möglich.
 Zudem ist das hot deplyoment von Prozessen möglich als auch die Analyse
 und Validierung von Prozessen.
\end_layout

\begin_layout Description
Eclipse-Bpel-Designer 
\begin_inset CommandInset href
LatexCommand href
name "http://www.eclipse.org/bpel"
target "http://www.eclipse.org/bpel"

\end_inset


\end_layout

\begin_layout Standard
Der Eclipse BPEL Designer ist ein Eclipse Plugin zum Arbeiten mit BPEL Prozessen.
 Er verfügt über eine leicht verständliche GUI, eine Fehlererkennnung für
 BPEL Prozesse und außerdem ist die Schritt für Schritt Ausführung von Prozessen
 möglich.
\end_layout

\begin_layout Description
IBM-DB2 
\begin_inset CommandInset href
LatexCommand href
name "http://pub...w/v9r5/index.jsp"
target "http://pub...w/v9r5/index.jsp"

\end_inset


\end_layout

\begin_layout Standard
Die IBM-DB2 ist ein Hybriddatenserver mit dem sowohl die Verwaltung von
 XML-Daten als auch von relationalen Daten möglich ist.
\end_layout

\begin_layout Standard
Apache Tuscany, Webservices, axis2, DAS (Data Access Service), SDO (Service
 Data Objects), 
\end_layout

\begin_layout Subsection
Werkzeuge
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
unter untersützende Werkzeuge gemeint ist, die uns bei der Projektarbeit
 unterstützen , wie beim Dokumenten Erzeugen oder SVN-Tool
\end_layout

\end_inset


\end_layout

\begin_layout Description
Subversion 
\begin_inset CommandInset href
LatexCommand href
name "http://svnbook.red-bean.com"
target "http://svnbook.red-bean.com"

\end_inset


\end_layout

\begin_layout Standard
Subversion ist eine Software zur Versionskontrolle und eine Weiterentwicklung
 von CVS.
\end_layout

\begin_layout Description
Maven 
\begin_inset CommandInset href
LatexCommand href
name "http://svnbook.red-bean.com"
target "http://svnbook.red-bean.com"

\end_inset


\end_layout

\begin_layout Standard
Maven ist ein Projekt-Management-Tool.
\end_layout

\begin_layout Description
Lyx 
\begin_inset CommandInset href
LatexCommand href
name "www.lyx.org"
target "www.lyx.org"

\end_inset


\end_layout

\begin_layout Description
Hudson 
\begin_inset CommandInset href
LatexCommand href
name "https://hudson.dev.java.net/"
target "https://hudson.dev.java.net/"

\end_inset


\end_layout

\begin_layout Standard
Hudson ist ein webbasiertes System zur kontinuierlichen Integration von
 Softwareprojekten.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Entwicklungsplattform, Entwicklungsmethode, Programmiersprache sowie andere
 Notationen, Techniken und Methoden, um das System und andere auszuliefernde
 Produkte zu spezifizieren, entwerfen, konstruieren, testen, integrieren,
 dokumentieren, modifizieren oder pflegen; technische Standards, Richtlinien,
 Zertifizierungskriterien
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Entwicklungsumgebung
\end_layout

\begin_layout Standard
Eclipse (Galileo 3.5 usw.), 
\end_layout

\begin_layout Subsubsection
Sonstige Werkzeuge
\end_layout

\begin_layout Section
Änderungsgeschichte
\end_layout

\begin_layout Itemize

\series bold
Version 0.1
\series default
, 11.
 September 2009: Erstellung des Dokuments.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"

\end_inset

Begriffslexikon
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "BPEL/SQL Paper"

\end_inset

Vrhovnik, M.; Schwarz, H.; Radeschütz, S.; Mitschang, B.: An Overview of SQL
 Support in Workflow Products.
 In: Proc.
 of the 24th International Conference on Data Engineering (ICDE 2008), Cancún,
 México, April 7-12, 2008
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "the:ReferencesInBPEL"

\end_inset

Wieland, M.; Görlach, K.; Schumm, D.; Leymann, F.: Towards Reference Passing
 in Web Service and Workflow-based Applications.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "the:WS-Addressing"

\end_inset

W3C.
 Web Services Addressing 1.0 - Core, W3C Recommendation.
 http://www.w3.org/TR/ ws-addr-core/, 2006.
\end_layout

\end_body
\end_document
