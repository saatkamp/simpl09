#LyX 1.6.3 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\begin_preamble





\usepackage{babel}

% Package für das Einfärben von Tabellen
\usepackage{colortbl}

% Packages für eigen definierte Header und Footer
\usepackage{lastpage}
\usepackage{fancyhdr}

% doctitel = Titel des Dokuments
% docvers = Versionsnr.
% docautor = Author(en)
% docdate = Datum der letzten Änderung
\def\doctitel{Spezifikation}
\def\docvers{2.0}
\def\docautor{}
\def\docdate{27. Oktober 2009}

% docstate = Status des Dokuments aus {neu, bearbeitet}
% qsstate = QS-Prüfungsstatus aus {positiv QS-geprüft, negativ QS-geprüft, verworfen}
% proofstate = Prüfungsstatus (durch Projektleiter) aus {positiv geprüft, negativ geprüft, verworfen}
% reviewstate = Annahmestatus des Reviews {kein Review durchgeführt, akzeptiert ohne Änderungen, akzeptiert mit Änderungen, nicht akzeptiert}
% endstate = Endstatus des Dokuments aus {freigegeben, verworfen}
\def\docstate{neu}
\def\qsstate{nicht QS-geprüft}
\def\proofstate{nicht geprüft}
\def\reviewstate{kein Review durchgeführt}
\def\endstate{-}

% Definierter Grauton für die Tabellenfärbung
\definecolor{lightgray}{rgb}{0.7,0.7,0.7}

%Nicht einrücken
%\setlength{\parindent}{0pt}
\end_preamble
\use_default_options false
\language ngerman
\inputencoding latin9
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_amsmath 0
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 3cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "Deckblatt.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset CommandInset include
LatexCommand input
filename "DokStatus.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%Header und Footer Definitionen für alle anderen Seiten
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pagestyle
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

fancy
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset FormulaMacro
\renewcommand{\headrulewidth}{0mm}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
lhead
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
chead
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
rhead
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
lfoot
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\size small
SIMPL © 2009 $IMPL
\size default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
cfoot
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
rfoot
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\size small

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thepage
\end_layout

\end_inset


\begin_inset space \space{}
\end_inset

/ 
\begin_inset CommandInset ref
LatexCommand pageref
reference "LastPage"

\end_inset


\size default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%Ab hier beginnt das Dokument
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Beschreibungen, was in welchem Abschnitt (von Abschnitt 1 bis 2) erwartet
 wird, sind im Buch von Prof.
 Ludewig zu finden (Seite 363 f.).
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Änderungsgeschichte
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="4">
<features>
<column alignment="left" valignment="top" width="2cm">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="6cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Version
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Datum
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Autor
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Änderungen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11.09.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hahnml
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erstellung des Dokuments.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14.09.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
zoabfs, hahnml, xitu
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Nichtfunktionale-Anforderungen"

\end_inset

 eingefügt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
17.09.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hahnml, zoabisfs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Konzepte-und-Realisierungen"

\end_inset

 eingefügt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
21.09.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hahnml, zoabisfs, rehnre
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Akteure"

\end_inset

 und 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Anwendungsfälle-(Use-Cases)"

\end_inset

 eingefügt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
28.09.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hahnml, zoabisfs, schneimi, bruededl, huettiwg, rehnre
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abschließende Überarbeitung des Dokuments.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
19.10.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hahnml, schneimi, rehnre
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Korrektur der Spezifikation nach dem Review mit den Kunden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
27.10.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hahnml
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erweiterung der Spezifikation auf die 2.Iteration.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Einleitung
\end_layout

\begin_layout Standard
In diesem Kapitel wird der Zweck dieses Dokuments, sowie der Einsatzbereich
 und die Ziele der zu entwickelnden Software beschrieben.
 Weiterhin werden die in diesem Dokument verwendeten Definitionen erläutert
 und ein Überblick über das restliche Dokument gegeben.
\end_layout

\begin_layout Subsection
Zweck des Dokuments
\end_layout

\begin_layout Standard
Diese Spezifikation ist die Grundlage für alle weiteren Dokumente, die im
 Rahmen dieses Projekts entstehen.
 In ihr sind sämtliche Anforderungen an die zu entwickelnde Software festgelegt.
 Sie muss stets mit den anderen Dokumenten, insbesondere mit dem Entwurf
 und der Implementierung, konsistent gehalten werden.
 Die Spezifikation dient den Team-Mitgliedern als Grundlage und Richtlinie
 für die Entwicklung der Software und den Kunden als Zwischenergebnis zur
 Kontrolle.
\end_layout

\begin_layout Standard
Zum Leserkreis dieser Spezifikation gehören: 
\end_layout

\begin_layout Itemize
Die Entwickler der Software, 
\end_layout

\begin_layout Itemize
die Kunden und
\end_layout

\begin_layout Itemize
die Gutachter der Spezifikationsreviews.
\end_layout

\begin_layout Subsection
Einsatzbereich und Ziele
\end_layout

\begin_layout Standard
Das Entwicklungsteam soll ein erweiterbares Rahmenwerk für die Modellierung
 und Ausführung von Workflows erstellen, welches den generischen Zugriff
 auf nahezu beliebige Datenquellen ermöglichen soll.
 Bei den Datenquellen kann es sich beispielsweise um Sensornetze, Datenbanken
 und Dateisysteme handeln.
 Der Schwerpunkt soll klar auf wissenschaftlichen Workflows liegen, in denen
 es möglich sein muss große heterogene Datenmengen verarbeiten zu können.
 Über das Rahmenwerk sollen beliebige Datenmanagement-Funktionen in einen
 Business Process Execution Language (BPEL)-Prozess eingebunden werden können.
 Dafür werden bereits vorhandene Konzepte evaluiert, wie z.B.
 die Sprache BPEL (siehe 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

), und falls nötig erweitert und angepasst.
 Für eine möglichst hohe Flexibilität soll ein dynamischer Ansatz gewählt
 werden, so dass auch erst zur Laufzeit des Systems die Datenquellen festgelegt
 werden können.
 Nichtsdestotrotz sollte auch die Möglichkeit bestehen, die Datenquellen
 statisch anbinden zu können.
 Eine Anforderung des Kunden ist, dass eine vorhandene BPEL-Workflow-Engine
 sowie ein vorhandenes Modellierungstool um diese gewünschten Funktionen
 erweitert bzw.
 angepasst werden.
 Die BPEL-Prozesse sollen mit dem entsprechenden Modellierungstool spezifiziert
 und mit der BPEL-Workflow-Engine ausgeführt werden können.
\end_layout

\begin_layout Subsection
Evolution des Dokuments
\end_layout

\begin_layout Standard
Das Projekt SIMPL ist in drei Iterationsstufen aufgeteilt.
 Die vorliegende Spezifikation spiegelt die zweite Iterationsstufe des Rahmenwer
ks wieder und stellt dessen Grundfunktionalität, sowie erste Erweiterungen
 dieser dar.
 Die Spezifikation und damit die Beschreibung der weitergehenden Funktionalität
 wird in späteren Iterationen vervollständigt.
\end_layout

\begin_layout Standard
Darüber hinaus wird in weiterführenden Kundengesprächen über die Präferenzordnun
g von optionalen Implementierungen diskutiert, welche in den entsprechenden
 Iterationen umgesetzt werden sollen.
 In den folgenden Abschnitten (
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Basisfunktionalität"

\end_inset

 und 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Ausblick"

\end_inset

) sind detaillierte Informationen enthalten, in welche Aufgabenbereiche
 sich die Basisfunktionalität gliedert und welche Funktionen in späteren
 Iterationen geplant sind.
\end_layout

\begin_layout Subsubsection
Basisfunktionalität 
\begin_inset CommandInset label
LatexCommand label
name "sub:Basisfunktionalität"

\end_inset


\end_layout

\begin_layout Standard
Folgende Funktionen bilden die Basisfunktionalität des SIMPL-Rahmenwerks
\end_layout

\begin_layout Paragraph
1.
 Iteration
\end_layout

\begin_layout Itemize
Die statische Anbindung von Datenquellen: Relationale Datenbanken, XML-Datenbank
en, Sensornetze und Dateisysteme.
\end_layout

\begin_layout Itemize
Eine grundlegende Adminkonsole, die Funktionen wie das An- und Ausschalten
 des Auditings und die Eingabe globaler Einstellungen für das Rahmenwerk
 bereitstellt.
\end_layout

\begin_layout Itemize
Bereitstellung von generischen BPEL-Aktivitäten im Eclipse BPEL Designer
 für den Zugriff auf Datenquellen.
\end_layout

\begin_layout Paragraph
2.
 Iteration
\end_layout

\begin_layout Itemize
Implementierung der IAAS-Referenzen 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

.
 Das heißt, Referenzen, die auf Daten verweisen und anstatt derer zwischen
 Prozessen hin und her geschickt werden und nur dort wo sie wirklich benötigt
 werden, aufgelöst und in den Prozess geladen werden (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Daten-Referenzen-in-BPEL"

\end_inset

).
 Dies wird aus Gründen der Performanz benötigt, da die Datenübergabe standardmäß
ig per Value erfolgt, was bei großen Datenmengen (bis zu Gigabytes im wissenscha
ftlichen Bereich) zu erheblichen Performanzeinbußen führt.
\end_layout

\begin_layout Itemize
Implementierung der IPVS-Referenzen: Das sind BPEL-Variablen, die als Referenzen
 auf Datenquellen und Datencontainer (Tabellen, Dateien, XML-Dokumente,
 etc.) verwendet werden können (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Container-Referenzen-in-BPEL"

\end_inset

).
\end_layout

\begin_layout Itemize
Implementierung eines Plug-In Systems für die Anbindung von verschiedenen
 Datenquellen.
\end_layout

\begin_layout Itemize
Implementierung eines Dateisystem-Adapters am Beispiel des CSV-Dateiformats.
\end_layout

\begin_layout Subsubsection
Ausblick 
\begin_inset CommandInset label
LatexCommand label
name "sub:Ausblick"

\end_inset


\end_layout

\begin_layout Standard
In diesem Abschnitt geht es darum, welche Funktionalität in weiteren Iterationen
 hinzugefügt wird.
 Die folgende Liste enthält die Punkte, die auf jeden Fall in einer der
 folgenden Iterationen umgesetzt werden.
 
\end_layout

\begin_layout Paragraph
3.
 Iteration
\end_layout

\begin_layout Itemize
Implementierung einer Datenquellen-Registry mit Hilfe derer Datenquellen
 über den Eclipse BPEL Designer manuell durch den Benutzer oder dynamisch
 durch das SIMPL Eclipse Plug-In ausgewählt werden können.
\end_layout

\begin_layout Itemize
Unterstützung einer automatischen Auswahl von Datenquellen zur Laufzeit.
 Dabei kann der Benutzer Anforderungen an Datenquellen formulieren und eine
 Strategie auswählen, mit deren Hilfe eine Datenquelle, die seine Anforderungen
 erfüllt, ausgewählt wird.
\end_layout

\begin_layout Itemize
Einstellung der Granularität des Auditings.
\end_layout

\begin_layout Standard
Im Folgenden wird beschrieben, was von uns (unter Absprache mit dem Kunden)
 als optionale Anforderungen definiert wurden.
 Diese werden umgesetzt, wenn der zeitliche Rahmen des Projekts es zulässt.
\end_layout

\begin_layout Itemize
Implementierung eines Monitorings, welches das bestehende Auditing nutzt,
 um dessen Daten in definierten Abständen auszulesen und dem Benutzer, zur
 Beobachtung und Überwachung von BPEL-Prozessen, anzuzeigen.
 Die kann später auch einfach vom Kunden nachgerüstet werden.
\end_layout

\begin_layout Subsection
Definitionen
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
hier dokumentieren wir die dokumente, die im zusammenhang mit der Spezifikation
 stehen .
 Begriffslexikon und natürlich über der Dokument kurzes Text was, und wofür.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die in der Spezifikation verwendeten Begriffe, Definitionen und Abkürzungen
 werden in einem separaten Begriffslexikon eindeutig definiert und erklärt.
 Dadurch werden Missverständnisse innerhalb des Projektteams oder zwischen
 Projektteam und Kunde vermieden.
\end_layout

\begin_layout Standard
Auf alle in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Resultierende-BPEL-Aktivitäten"

\end_inset

 beschriebenen Aktivitäten wird in diesem Dokument mit dem Sammelbegriff
 Data-Management-Aktivität verwiesen.
 Wird also von einer Data-Management-Aktivität gesprochen, ist indirekt
 eine dieser Aktivitäten gemeint.
 Über die Definition und Verwendung dieses Sammelbegriffs soll lediglich
 die Allgemeingültigkeit der getroffenen Aussagen, für jede der in Abschnitt
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Resultierende-BPEL-Aktivitäten"

\end_inset

 beschriebenen Aktivitäten, erreicht werden.
 Nachfolgend wird weiterhin für den Begriff 
\begin_inset Quotes eld
\end_inset

Data-Management-Aktivität
\begin_inset Quotes erd
\end_inset

 die Abkürzung DM-Aktivität in diesem Dokument verwendet.
\end_layout

\begin_layout Subsection
Überblick
\end_layout

\begin_layout Standard
In diesem Dokument soll die zu entwickelnde Software spezifi
\begin_inset CommandInset citation
LatexCommand cite
key "key-10"

\end_inset

ziert werden.
 Dazu werden in Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Allgemeine-Beschreibung"

\end_inset

 die spätere Systemumgebung, die Kernfunktionen, die Sprache und weitere
 Aspekte der Software beschrieben.
 So erhält der Leser einen Überblick über die Funktionalität der Software
 und deren Verwendung.
 Weiterhin werden die Ziele und Aufgaben, die für die Realisierung der Software
 bestehen, aufgezeigt.
 Anschließend werden die vom Kunden genannten Anforderungen durch die Kapitel
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Nichtfunktionale-Anforderungen"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Akteure"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Anwendungsfälle-(Use-Cases)"

\end_inset

 und die vorläufige Benutzeroberfläche in Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Benutzeroberfläche"

\end_inset

 aufgezeigt.
 Dabei werden durch die nichtfunktionalen Anforderungen qualitative (Robustheit,
 Portabilität, usw.) und quantitative (Mengengerüst) Anforderungen an die
 Software spezifiziert.
 Die Anwendungfälle in Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Anwendungsfälle-(Use-Cases)"

\end_inset

 beschreiben die funktionalen Anforderungen.
 Es werden also konkret die Funktionen, die z.T.
 schon in der Übersicht der Kernfunktionalität weiter oben aufgeführt sind,
 die die Software enthalten soll, beschrieben.
 Im Anschluss folgen in Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Konzepte-und-Realisierungen"

\end_inset

 die Beschreibungen und Definitionen einiger Konzepte bzw.
 Ansätze, die zur Umsetzung der gewünschten Funktionalität benötigt werden.
 Am Ende des Dokuments werden in Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Technologien und Werkzeuge"

\end_inset

 die verwendeten Werkzeuge und Technologien, die für die Erstellung der
 Software benötigt werden, vorgestellt.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Allgemeine-Beschreibung"

\end_inset

Allgemeine Beschreibung
\end_layout

\begin_layout Standard
Dieses Kapitel liefert allgemeine Informationen über die zu entwickelnde
 Software.
 Dazu gehöhren beispielsweise die Beschreibung der späteren Systemumgebung,
 die wichtigsten Funktionen, die verwendete Sprache und Informationen über
 den Benutzerkreis der Software.
\end_layout

\begin_layout Subsection
Einbettung in die Systemumgebung
\end_layout

\begin_layout Standard
Das SIMPL Rahmenwerk, bestehend aus dem SIMPL Core und dem SIMPL Eclipse
 Plug-In soll in die in Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Systemumgebung"

\end_inset

 dargestellte Systemumgebung eingebettet werden.
 Die Systemumgebung besteht dabei aus Eclipse mit dem BPEL-Designer Plug-In,
 einem Web-Server, wie z.B.
 dem Apache Tomcat (siehe 
\begin_inset CommandInset citation
LatexCommand cite
key "key-7"

\end_inset

), auf dem der SIMPL Core und eine Workflow-Engine (z.B.
 Apache Orchestration Director Engine (ODE), siehe 
\begin_inset CommandInset citation
LatexCommand cite
key "key-6"

\end_inset

) ausgeführt werden und den Datenquellen auf die zugegriffen wird.
 SIMPL unterstützt die in Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Systemumgebung"

\end_inset

 dargestellten Datenquellen und kann um weitere Datenquellen ergänzt werden.
 Der SIMPL Core läuft als Web-Service auf dem Web-Server und liefert die
 Funktionalität, die während der Laufzeit von Prozessen mit Data-Management-Akti
vitäten benötigt werden.
 Das SIMPL Eclipse Plug-In erweitert die grafische Oberfläche von Eclipse
 und des BPEL-Designer Plug-Ins und liefert die benötigte Funktionaliät
 um Prozesse mit Data-Management-Aktivitäten zu modellieren und Einstellungen
 für das Rahmenwerk vorzunehmen.
 Dabei läuft die benötigte Software auf dem lokalen Rechner des Benutzers,
 die Datenquellen können auf verschiedene Server verteilt sein.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Systemumgebung.jpeg
	lyxscale 80
	width 70text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Systemumgebung"

\end_inset

Übersicht über die Systemumgebung von SIMPL
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Funktionen
\end_layout

\begin_layout Standard
In diesem Abschnitt folgen die wichtigsten Funktionen des Rahmenwerks, die
 später dessen Kernfunktionalität bilden sollen.
\end_layout

\begin_layout Standard
Das Rahmenwerk soll als Eclipse Plug-In verwendet werden und mit der Laufzeitumg
ebung integriert sein.
 Es soll die Verarbeitung von großen, heterogenen Datenmengen im Rahmen
 eines wissenschaftlichen Workflows ermöglichen.
\end_layout

\begin_layout Standard
Die vorhandenen BPEL-Aktivitäten des Eclipse BPEL Designer werden dazu um
 neue Aktivitäten für die Verwaltung von Daten (Data-Management-Aktivitäten)
 erweitert.
 Mit deren Hilfe wird die Anbindung von Datenquellen in BPEL-Prozessen vereinfac
ht.
 In der ersten Iteration werden die Datenquellen über ihre physikalische
 Adresse angebunden.
 In einer späteren Iteration wird eine Datenquellen-Registry bereitgestellt.
 Diese ermöglicht die Realisierung einer grafischen Auswahlmöglichkeit für
 Datenquellen im Eclipse BPEL Designer.
 Eine nähere Beschreibung der Data-Management-Aktivitäten wird in Abschnitt
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Data-Management-Aktivitäten"

\end_inset

 gegeben.
\end_layout

\begin_layout Standard
Alle Ereignisse, die während der Laufzeit eines Prozesses auftreten (z.B.
 Zugriff auf eine Datenquelle), werden durch ein Auditing in einer vom Benutzer
 definierten Datenbank gespeichert.
\end_layout

\begin_layout Standard
Für die Verwaltung des SIMPL-Rahmenwerks und zur Änderung von Einstellungen
 auch während der Laufzeit von Prozessen, wird eine Admin-Konsole implementiert.
 Über diese kann zum Beispiel das Auditing an und ausgeschaltet und eine
 Datenbank zur Speicherung der Auditinginformationen angegeben werden.
\end_layout

\begin_layout Subsection
Sprache
\end_layout

\begin_layout Standard
Generell gilt, dass alle Dokumente auf Deutsch und jeder Quellcode einschließlic
h Kommentaren auf Englisch verfasst und ausgeliefert werden sollen.
 Eine Ausnahme bilden das Handbuch und die verschiedenen Dokumentationen
 der von uns durchgeführten Erweiterungen, wie z.B.
 die Erweiterungen von Apache ODE oder dem Eclipse BPEL Designer.
 Diese Dokumente werden auf Deutsch und auf Englisch verfasst, um sie einem
 breiteren Leserkreis zur Verfügung stellen zu können.
\end_layout

\begin_layout Subsection
Distributionsform und Installation
\end_layout

\begin_layout Standard
Das Rahmenwerk wird als Teil eines großen Installationpakets ausgeliefert.
 Dieses Installationspaket besteht aus allen Programmen, die für die Verwendung
 des Rahmenwerks benötigt werden.
 Dazu gehöhrt ein Modellierungstool (Eclipse BPEL Designer), ein Web-Server
 (Apache Tomcat), der eine Workflow-Engine ausführen kann, eine Workflow-Engine
 (Apache ODE) und natürlich das Rahmenwerk selbst.
 Mithilfe des Installationspakets ist es möglich viele Einstellungen bereits
 vorzudefinieren und dem Benutzer die Installation zu erleichern.
 Das Installationspaket wird dabei als RAR-Archiv zusammen mit allen wichtigen
 Dokumenten auf einer CD/DVD ausgeliefert.
 So können nachträgliche Erweiterungen/Korrekturen des Rahmenwerks mithilfe
 der Dokumentationen leichter realisiert werden.
 Die Installation der einzelnen Komponenten wird dann anhand der mitgelieferten
 Installationsanleitung durchgeführt.
 Nähere Informationen liefert 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

.
\end_layout

\begin_layout Subsection
Benutzerprofile
\end_layout

\begin_layout Standard
Die Benutzer sind im Normalfall Wissenschaftler und Ingenieure.
 Sie haben meist keine bis wenig Vorkenntnisse in den Bereichen Workflow
 und Informatik und stellen so entsprechende Anforderungen an die Benutzbarkeit
 des Rahmenwerks (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Nichtfunktionale-Anforderungen"

\end_inset

).
\end_layout

\begin_layout Subsection
Einschränkungen
\end_layout

\begin_layout Standard
Für die Erstellung und Verwendung des SIMPL Rahmenwerks gelten die folgenden
 Einschränkungen.
\end_layout

\begin_layout Itemize
Die Modellierung von BPEL-Prozessen ist an das Modellierungswerkzeug Eclipse
 BPEL Designer gebunden.
 
\end_layout

\begin_layout Itemize
Das Auditing der Prozessausführung wird nur für die Workflow-Engine Apache
 ODE bereitgestellt.
\end_layout

\begin_layout Itemize
Als Workflow-Modellierungssprache dient die Business Process Execution Language
 (BPEL).
\end_layout

\begin_layout Itemize
Als Programmiersprache für das SIMPL Rahmenwerk kommt Java zum Einsatz.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Nichtfunktionale-Anforderungen"

\end_inset

Nichtfunktionale Anforderungen
\end_layout

\begin_layout Standard
In diesem Kapitel werden die nichtfunktionalen Anforderungen an die zu entwickel
nde Software beschrieben.
 Dafür werden die entsprechenden Software-Qualitäten aufgeführt und ihre
 Bedeutung für die zu entwickelnde Software erläutert.
\end_layout

\begin_layout Subsection
Mengengerüst
\end_layout

\begin_layout Standard
Das Mengengerüst beinhaltet alle quantifizierbaren Anforderungen an das
 Rahmenwerk.
\end_layout

\begin_layout Itemize
Für die Speicherung der Auditing-Daten kann nur eine Datenbank gleichzeitig
 ausgewählt sein.
\end_layout

\begin_layout Itemize
Alle laufenden Prozesse einer Workflow-Engine können zu einem Zeitpunkt
 gemeinsam nur Daten in Höhe des Speichers, der durch das Betriebssystem
 zur Verfügung gestellt wird, halten.
\end_layout

\begin_layout Subsection
Benutzbarkeit
\end_layout

\begin_layout Standard
Die Benutzbarkeit soll sich vor allem an Nutzer mit wenig Kenntnissen im
 Umgang mit Workflows und BPEL richten und die dafür größtmöglichste Transparenz
 liefern.
 Dass bedeutet, dass die interne Prozesslogik der Software bestmöglich vom
 Benutzer abgeschirmt wird.
 Dadurch erhält der Benutzer eine möglichst einfache und schnell verständliche
 Schnittstelle zur Software.
\end_layout

\begin_layout Subsection
Verfügbarkeit
\end_layout

\begin_layout Standard
Die Verfügbarkeit des Rahmenwerks soll mindestens so hoch sein, dass sie
 der Verfügbarkeit der späteren Systemumgebung entspricht oder diese übersteigt,
 damit durch die Verwendung des Rahmenwerks keine zusätzlichen Ausfallzeiten
 entstehen.
\end_layout

\begin_layout Subsection
Robustheit
\begin_inset Note Note
status open

\begin_layout Plain Layout
in der nächsten Iteration nochmal überarbeiten: Wiederherstellbarkeit/Fortsetzen
 von Prozessen nach Neustart
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Unter Robustheit ist hier zu verstehen, dass selbst wenn es zu ungünstigen
 Bedingungen kommt, SIMPL weiterhin weitgehend fehlerfrei verwendet werden
 kann.
 Ungünstige Bedingungen sind dabei z.B.
 der Ausfall des Servers oder Probleme bei der Verbindung mit Datenquellen.
 Dazu sollen Prozesse fehlerfrei ausgeführt werden und entsprechend korrekte
 Ergebnisse liefern oder das Rahmenwerk sicher beendet werden können.
 Nach dem Neustart des Rahmenwerks müssen auch die Prozesse neu gestartet
 werden.
\end_layout

\begin_layout Standard
Benutzereingaben werden nicht vom Rahmenwerk überprüft.
 Fehlerhafte Eingaben resultieren während dem Deployment bzw.
 dem Prozessablauf jedoch immer in stabilen Zuständen, die über entsprechende
 Fehlermeldungen dem Benutzer mitgeteilt werden.
 Anhand der Fehlermeldungen kann der Benutzer seine Eingaben korrigieren
 und den Prozess neu deployen bzw.
 ausführen.
\end_layout

\begin_layout Subsection
Sicherheit
\end_layout

\begin_layout Standard
Da das Rahmenwerk nur lokal ausgeführt wird und alle lokalen Benutzer momentan
 die gleichen Rechte besitzen, wird vorerst auf Authentifizierungs- und
 Autorisierungsmaßnahmen innerhalb des Rahmenwerks verzichtet.
 Um eine spätere Realisierung zu vereinfachen, werden bereits jetzt die
 Rollen Prozess-Modellierer und Workflow-Administrator (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Akteure"

\end_inset

) definiert.
 Die Authentifizierung und Autorisierung bei Datenquellen wird in Abschnitt
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Authentifizierung-und-Autorisierung"

\end_inset

 beschrieben.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Die Sicherheit im System wird durch das Authentifizierungs und Autorisierungsver
fahren Benutzername & Passwort geleistet.
\end_layout

\begin_layout Plain Layout
Die Verbindung zwischen Client auf der DatenBanken erfolgt über vom Admin
 vordefinierte bzw.
 vorgegebene Username und passwört (Einlogdaten).
 
\end_layout

\begin_layout Plain Layout
Der Administratot und alle anedere Verwaltung-Aktuere, die andere , haben
 eigene von der normale Benutzern unabängige Passwort.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Portabilität
\end_layout

\begin_layout Standard
Die Portabilität des SIMPL Eclipse Plug-Ins ist durch die Integration in
 Eclipse gewährleistet.
 Der SIMPL Core wird dahingehend implementiert, dass er in allen Java unterstütz
enden Web-Containern 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Web-Container noch beschreiben (Begriffslexikon ?)
\end_layout

\end_inset

lauffähig ist.
\end_layout

\begin_layout Subsection
Erweiterbarkeit
\end_layout

\begin_layout Standard
Die Erweiterbarkeit des Systems ist eine zentrale Anforderung, da es über
 einen langen Zeitraum genutzt und in Zukunft um die Anbindung weiterer
 Datenquellen, Konzepte für den Datenzugriff und den Umgang mit weiteren
 Datenformaten ergänzt werden soll.
 Um die Erweiterbarkeit des Systems zu gewährleisten, werden ein modularer
 Aufbau zugrunde gelegt und entsprechende Schnittstellen geschaffen.
\end_layout

\begin_layout Subsection
Wartbarkeit
\end_layout

\begin_layout Standard
Durch eine qualitativ hochwertige Dokumentation und ein strukturiertes,
 geplantes und sauberes Entwicklungsvorgehen soll eine hohe Wartbarkeit
 erreicht werden.
 Dazu werden alle Dokumente entsprechend gepflegt und laufend aktualisiert.
 Weiterhin werden nach jedem Wartungsintervall Tests durchgeführt und deren
 Ergebnisse protokolliert.
\end_layout

\begin_layout Subsection
Skalierbarkeit
\end_layout

\begin_layout Standard
Die Skalierbarkeit des Rahmenwerks soll garantieren, dass für die Verarbeitung
 von steigenden Datenmengen die benötigten Ressourcen höchstens in der gleichen
 Größenordnung steigen.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Benutzeroberfläche"

\end_inset

Benutzeroberfläche des SIMPL Eclipse Plug-Ins
\begin_inset Note Note
status open

\begin_layout Plain Layout
verändert, komplett überarbeiten
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In diesem Kapitel wird die grafische Benutzeroberfläche des SIMPL Eclipse
 Plug-Ins beschrieben.
 Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:SIMPL-Menü"

\end_inset

 zeigt den erweiterten Eclipse BPEL Designer.
 In der Palette befinden sich die SIMPL Data-Management-Aktivitäten, die
 wie bereits vorhandene Aktivitäten zur Modellierung von Prozessen verwendet
 werden können.
 Für SIMPL wird ein Menü bereitgestellt, über das alle wichtigen Einstellungen
 und Informationen des SIMPL Rahmenwerks vorgenommen bzw.
 angezeigt werden können.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ProtoTyp_Screenshots/SIMPL_menu_iter1.JPG
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:SIMPL-Menü"

\end_inset

SIMPL Menü und Eclipse BPEL Designer mit einigen Data-Management-Aktivitäten
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Admin-Konsole
\end_layout

\begin_layout Standard
Die Admin-Konsole kann über das SIMPL Menü geöffnet werden und bietet die
 Möglichkeit, Einstellungen für das Rahmenwerk vorzunehmen.
 Dazu gehört die Angabe von globalen Einstellungen, die Verwaltung des Auditings
 und der Referenzen (siehe Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Admin-Konsole"

\end_inset

).
 
\end_layout

\begin_layout Standard
Folgende Schaltflächen stehen durchgängig zur Verfügung:
\end_layout

\begin_layout Itemize
[Default]: Laden der Standard-Einstellungen
\end_layout

\begin_layout Itemize
[Reset]: Zurücksetzen aller durchgeführten Änderungen auf den letzten Speicherst
and
\end_layout

\begin_layout Itemize
[Save]: Speichern aller durchgeführten Änderungen
\end_layout

\begin_layout Itemize
[Close]: Schließen der Admin-Konsole und Verwerfen aller Änderungen
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ProtoTyp_Screenshots/Iter2Screens/AdminConsole.JPG
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Admin-Konsole"

\end_inset

Admin-Konsole
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Globale-Einstellungen"

\end_inset

Globale Einstellungen
\end_layout

\begin_layout Standard
In Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:GlobalSettings"

\end_inset

 wird der Unterpunkt 
\begin_inset Quotes eld
\end_inset

Global Settings
\begin_inset Quotes erd
\end_inset

 der Admin-Konsole gezeigt.
 Hier können Standardwerte für die Authentifizierung bei Datenquellen angegeben
 werden.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
In folgeneden Dialog kann der Benutzer über den Unterbaumpunkt 
\begin_inset Quotes eld
\end_inset

Global settings-Authentication Data
\begin_inset Quotes erd
\end_inset

 die Zugangsdaten angeben.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ProtoTyp_Screenshots/Iter2Screens/AdminConsoleSettings.JPG
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:GlobalSettings"

\end_inset

Dialog der globalen Eigenschaften
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Auditing
\end_layout

\begin_layout Standard
In Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Auditing-Einstellungen"

\end_inset

 wird der Unterpunkt 
\begin_inset Quotes eld
\end_inset

Auditing
\begin_inset Quotes erd
\end_inset

 der Admin-Konsole gezeigt.
 Hier kann das Auditing an- und abgeschaltet werden und eine Datenbank für
 das Auditing angegeben werden.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ProtoTyp_Screenshots/Iter1Screens/AdminConsoleAuditing.JPG
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Auditing-Einstellungen"

\end_inset

Dialog für die Auditing Einstellungen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Referenzen
\end_layout

\begin_layout Standard
In Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:RefGeneral"

\end_inset

 wird der Unterpunkt 
\begin_inset Quotes eld
\end_inset

References
\begin_inset Quotes erd
\end_inset

 der Admin-Konsole gezeigt.
 Hier können über 
\begin_inset Quotes eld
\end_inset

General
\begin_inset Quotes erd
\end_inset

 allgemeine Eigenschaften in Bezug auf die Verwendung von Referenzen, wie
 ???
\begin_inset Note Note
status open

\begin_layout Plain Layout
noch überlegen und dann ergänzen.
\end_layout

\end_inset

 getroffen werden.
 Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:RefManagement"

\end_inset

 zeigt den Verwaltungsdialog der Referenzen, der über 
\begin_inset Quotes eld
\end_inset

Management
\begin_inset Quotes erd
\end_inset

 aufgerufen werden kann.
 Hier können alle vorhandenen Referenzen betrachtet, bearbeitet oder gelöscht
 werden und auch neue Referenzen erstellt werden.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ProtoTyp_Screenshots/Iter2Screens/AdminConsoleRefGeneral.JPG
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:RefGeneral"

\end_inset

Dialog für allgemeine Referenzen Einstellungen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ProtoTyp_Screenshots/Iter2Screens/AdminConsoleRefManagement.JPG
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:RefManagement"

\end_inset

Dialog für die Verwaltung von Referenzen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Bezeichnungen auf der GUI-Ebene für Referenzen-Paramater ändern.
 Benutzer sollte grafisch unterstützte Eingabemöglichkeiten (siehe Aktivitäten)
 erhalten.
 Parameter könnten z.B.: Name, Adresse der DQ, Query-Befehl, Schreib-Befehl,
 ...
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Beschreibung der zwei Screens (New Reference, Edit Reference) hinzufügen,
 wenn Design klar ist!
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ProtoTyp_Screenshots/new_Reference.jpg
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Dialog für das Anlegen neuer Referenzen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ProtoTyp_Screenshots/edit_Reference.jpg
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Dialog zur Bearbeitung von Referenzen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Data-Management-Aktivitäten
\end_layout

\begin_layout Standard
In Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Eigenschaftsfenster-einer-Data-Management-Aktivität"

\end_inset

 wird die 
\begin_inset Quotes eld
\end_inset

PropertyView
\begin_inset Quotes erd
\end_inset

 am Beispiel einer Query-Aktivität gezeigt.
 Hier kann die im Prozess ausgewählte Aktivität parametrisiert werden.
 Das bedeutet, dass die Aktivität hier mit Inhalt gefüllt wird, wie z.B.
 der Zieldatenquelle oder dem Befehl, der auf dieser ausgeführt werden soll.
 Dazu wird die Art der Datenquelle ausgewählt, ein Befehl über entsprechende
 grafische Elemente erstellt und die physikalische Adresse der Datenquelle
 angegeben.
 Falls die Checkbox 
\begin_inset Quotes eld
\end_inset

Show resulting statement
\begin_inset Quotes erd
\end_inset

 gesetzt ist, wird der durch die grafischen Elemente definierte Befehl im
 Textfeld 
\begin_inset Quotes eld
\end_inset

Resulting statement
\begin_inset Quotes erd
\end_inset

 angezeigt.
 Im Textfeld wird dabei der Befehl in seiner vollen Länge angezeigt, genau
 so wie er auf der Datenquelle ausgeführt wird.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ProtoTyp_Screenshots/SelectBPELPropertySectionFinal_iter1.JPG
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Eigenschaftsfenster-einer-Data-Management-Aktivität"

\end_inset

Eigenschaftsfenster einer Data-Management-Aktivität am Beispiel einer Query
 Activity
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Akteure"

\end_inset

Akteure
\end_layout

\begin_layout Standard
In diesem Kapitel werden die einzelnen Akteure der Software beschrieben
 und ihre Abhängigkeiten untereinander definiert.
\end_layout

\begin_layout Subsection
Prozess-Modellierer
\end_layout

\begin_layout Standard
Ein Prozess-Modellierer besitzt Fachwissen (z.B.
 aus der Biologie), das er bei der Modellierung eines wissenschaftlichen
 Workflows verwendet.
 Zur Modellierung der Workflows nutzt er den Eclipse BPEL Designer.
 Dazu kann er beispielsweise BPEL-Aktivitäten erstellen, bearbeiten und
 auch löschen.
 Hat der Prozess-Modellierer den BPEL-Prozess fertig modelliert, kann er
 diesen im Anschluss auf einer Workflow-Engine deployen und ausführen lassen.
\end_layout

\begin_layout Subsection
Workflow-Administrator
\end_layout

\begin_layout Standard
Ein Workflow-Administrator ist eine Spezialisierung des Prozess-Modellierers,
 d.h.
 er kann alle Anwendungsfälle des Prozess-Modellierers und noch weitere
 administrative Anwendungsfälle ausführen.
 Seine Kentnisse liegen im technischen Bereich, wie z.B.
 bei der Konfiguration des Rahmenwerks.
 Er kann beispielsweise über die Admin-Konsole während der Prozesslaufzeit
 das Auditing an- und abschalten.
 Ebenso legt er die Datenbank für das Speichern der Auditing-Daten fest.
\end_layout

\begin_layout Subsection
ODE Workflow-Engine
\end_layout

\begin_layout Standard
Die ODE Workflow-Engine ist ein durch Software realisierter Akteur.
 Sie führt interne Anwendungsfälle aus, die von einem Benutzer durch andere
 Anwendungsfälle indirekt aufgerufen werden.
 Durch die Erweiterungen kann sie Data-Management-Aktivitäten ausführen
 und kompensieren.
\end_layout

\begin_layout Subsection
Eclipse BPEL Designer
\end_layout

\begin_layout Standard
Der Eclipse BPEL Designer ist ebenfalls ein durch Software realisierter
 Akteur.
 Er führt interne Anwendungsfälle aus, die von einem Benutzer durch andere
 Anwendungsfälle indirekt aufgerufen werden.
 Der Eclipse BPEL Designer sorgt für das Laden der Einstellungen der Admin-Konso
le und das Speichern dieser nach Änderungen.
 Weiterhin führt er die Transformation (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Transformation-des-Modells"

\end_inset

) der modellierten BPEL-Prozesse aus, um diese in standard-konformen BPEL-Code
 umzuwandeln.
\end_layout

\begin_layout Subsection
SIMPL Core
\end_layout

\begin_layout Standard
Der SIMPL Core ist ebenfalls ein durch Software realisierter Akteur.
 Er führt interne Anwendungsfälle aus, die von einem Benutzer durch andere
 Anwendungsfälle indirekt aufgerufen werden.
 Der SIMPL Core sorgt für das automatische Auflösen von Referenzen.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Anwendungsfälle-(Use-Cases)"

\end_inset

Anwendungsfälle (Use-Cases)
\end_layout

\begin_layout Standard
Dieses Kapitel beschreibt die funktionalen Anforderungen an die Software.
 Dazu werden alle Anwendungsfälle eines jeden Akteurs beschrieben und deren
 Zusammenhänge in entsprechenden Diagrammen graphisch dargestellt.
\end_layout

\begin_layout Subsection
Diagramm der Anwendungsfälle
\end_layout

\begin_layout Standard
Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Gesamt-Anwendungsfall-Diagramm"

\end_inset

 zeigt das Diagramm aller Anwendungsfälle der gesamten Software.
 Dadurch sollen die Funktionalität und die Akteure des späteren Gesamtsystems
 sichtbar werden.
 Die einzelnen Anwendungsfälle der verschiedenen Akteure werden in den folgenden
 Abschnitten näher beschrieben.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Overview_iter2.jpg
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Gesamt-Anwendungsfall-Diagramm"

\end_inset

Anwendungsfall-Diagramm des gesamten Softwaresystems
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Anwendungsfälle des Prozess-Modellierers
\end_layout

\begin_layout Standard
Ein Prozess-Modellierer kann folgende Anwendungsfälle (siehe Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:UseCaseDiaProzessModell"

\end_inset

) ausführen:
\end_layout

\begin_layout Itemize
Data-Management-Aktivität erstellen
\end_layout

\begin_layout Itemize
Data-Management-Aktivität bearbeiten
\end_layout

\begin_layout Itemize
Data-Management-Aktivität löschen
\end_layout

\begin_layout Itemize
Prozess ausführen
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ProzessModelierer_iter1.jpg
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:UseCaseDiaProzessModell"

\end_inset

Anwendungsfall-Diagramm für den Prozess-Modellierer
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Data-Management-Aktivität erstellen
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erstellung einer neuen DM-Aktivität.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ein vorhandener BPEL-Prozess ist im Eclipse BPEL Designer geöffnet und die
 BPEL Designer-Palette wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die erstellte DM-Aktivität wurde an der selektierten Position in den Prozess
 eingefügt, und der vom Benutzer eingegebene Name wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die erstellte DM-Aktivität wurde an der selektierten Position in den Prozess
 eingefügt, und der vom Eclipse BPEL Designer vorgeschlagene Name wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Selektion einer DM-Aktivität, durch Auswahl mit der linken Maustaste, aus
 der Palette und anschließend Selektion der Stelle des Prozesses an der
 die ausgewählte DM-Aktivität eingefügt werden soll
\end_layout

\begin_layout Plain Layout
1b.
 (alternativ) Drag&Drop einer DM-Aktivität aus der Palette an die gewünschte
 Stelle im Prozess
\end_layout

\begin_layout Plain Layout
2.
 Eingabe eines Aktivitätsnamens durch den Benutzer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2a.
 Der angezeigte Namensvorschlag wird vom Benutzer bestätigt
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Data-Management-Aktivität bearbeiten
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bearbeitung der Eigenschaften einer vorhandenen DM-Aktivität.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ein vorhandener BPEL-Prozess ist im Eclipse BPEL Designer geöffnet, die
 zu bearbeitende DM-Aktivität ist ausgewählt und der 
\begin_inset Quotes eld
\end_inset

Properties-View
\begin_inset Quotes erd
\end_inset

 von Eclipse wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alle durchgeführten Änderungen der Eigenschaften wurden korrekt übernommen
 und werden in der 
\begin_inset Quotes eld
\end_inset

Properties-View
\begin_inset Quotes erd
\end_inset

 angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Selektierung einer DM-Aktivität, durch Auswahl mit der linken Maustaste,
 aus dem Prozess
\end_layout

\begin_layout Plain Layout
2.
 Eigenschaften der DM-Aktivität werden innerhalb der 
\begin_inset Quotes eld
\end_inset

Properties-View
\begin_inset Quotes erd
\end_inset

 angezeigt
\end_layout

\begin_layout Plain Layout
3.
 Änderung der Eigenschaften
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Data-Management-Aktivität löschen
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Löschen der ausgewählten DM-Aktivität.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ein vorhandener BPEL-Prozess ist im Eclipse BPEL Designer geöffnet.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die ausgewählte DM-Aktivität wurde vollständig und korrekt aus dem Prozess
 gelöscht.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Selektierung einer DM-Aktivität, durch Auswahl mit der linken Maustaste,
 aus dem Prozess
\end_layout

\begin_layout Plain Layout
2.
 Löschen der DM-Aktivität
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Prozess ausführen
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausführen des Prozesses auf der Apache ODE Workflow-Engine.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ein Prozess ist im Eclipse BPEL Designer geöffnet, die Apache ODE Workflow-Engin
e korrekt in Eclipse eingebunden und die Server-View wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Prozess-Dateien wurden auf die Apache ODE Workflow-Engine kopiert, der
 Prozess wurde erfolgreich deployed und wird ausgeführt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3a.
 Der Prozess wurde nicht gestartet.
\end_layout

\begin_layout Plain Layout
3b.
 Der Prozess wurde nicht gestartet.
\end_layout

\begin_layout Plain Layout
3c.
 Der Prozess wurde beendet und es wird eine Fehlermeldung angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Erstellung eines ODE Deployment-Deskriptors über File->New->Other->BPEL2.0->Apac
he ODE Deployment Descriptor
\end_layout

\begin_layout Plain Layout
2.
 Hinzufügen des Prozesses zum ODE-Server in der Eclipse Server-View:
\end_layout

\begin_layout Itemize
Rechter Mausklick auf den ODE-Server
\end_layout

\begin_layout Itemize
Auswahl des Menüpunkts 
\begin_inset Quotes eld
\end_inset

Add and Remove
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
Hinzufügen der BPEL Prozess-Datei
\end_layout

\begin_layout Plain Layout
3.
 Starten des ODE-Servers über rechten Mausklick und 
\begin_inset Quotes eld
\end_inset

Start
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3a.
 ODE-Server startet nicht
\end_layout

\begin_layout Plain Layout
3b.
 Beim Starten des Prozesses tritt ein Fehler auf
\end_layout

\begin_layout Plain Layout
3c.
 Während der Ausführung des Prozesses tritt ein Fehler auf
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Anwendungsfälle des Workflow-Administrators
\end_layout

\begin_layout Standard
Ein Workflow-Administrator kann folgende Anwendungsfälle (siehe Abbildung
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:UseCaseDiaWFAdmin"

\end_inset

) ausführen:
\end_layout

\begin_layout Itemize
Admin-Konsole öffnen
\end_layout

\begin_layout Itemize
Admin-Konsole zurücksetzen
\end_layout

\begin_layout Itemize
Admin-Konsole speichern
\end_layout

\begin_layout Itemize
Admin-Konsole schließen
\end_layout

\begin_layout Itemize
Admin-Konsole Defaults laden
\end_layout

\begin_layout Itemize
Auditing aktivieren
\end_layout

\begin_layout Itemize
Auditing deaktivieren
\end_layout

\begin_layout Itemize
Auditing-Datenbank festlegen
\end_layout

\begin_layout Itemize
Referenz in RRS einfügen
\end_layout

\begin_layout Itemize
Referenz aus RRS bearbeiten
\end_layout

\begin_layout Itemize
Referenz aus RRS löschen
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename WorkflowAdmin_iter2.jpg
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:UseCaseDiaWFAdmin"

\end_inset

Anwendungsfall-Diagramm für den Workflow-Administrator
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Admin-Konsole öffnen
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Öffnen der Admin-Konsole.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eclipse mit dem SIMPL Eclipse Plug-In ist geöffnet.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Admin-Konsole wird angezeigt und kann verwendet werden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Klick auf das SIMPL Menü in der Menüleiste
\end_layout

\begin_layout Plain Layout
2.
 Klick auf den Menüeintrag [Admin Console]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Admin-Konsole zurücksetzen
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Zurücksetzen des Inhalts der Admin-Konsole.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Admin-Konsole wird angezeigt und es wurde mindestens ein Wert geändert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alle geänderten Werte der Admin-Konsole wurden auf die zuletzt gespeicherten
 Einstellungen zurückgesetzt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Klick auf den Button [Reset]
\end_layout

\begin_layout Plain Layout
2.
 Ausführung des Anwendungsfalls 
\begin_inset Quotes eld
\end_inset

Admin-Konsole laden
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Admin-Konsole speichern
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Speicherung des Inhalts der Admin-Konsole in eine Datenbank.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Admin-Konsole wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alle Werte der Admin-Konsole wurden korrekt gespeichert und alle veralteten
 Werte mit Neuen überschrieben.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Alle geänderten Werte der Admin-Konsole bleiben unverändert.
 Es wird eine entsprechende Fehlermeldung angezeigt und ein erneuter Speicherver
such kann durchgeführt werden.
 Die Werte bleiben dabei solange erhalten, bis die Admin-Konsole geschlossen
 wird.
\end_layout

\begin_layout Plain Layout
1b.&1c.
 Der Benutzer erhält eine Fehlermeldung, die ihn über den entsprechenden
 Fehler informiert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Klick auf den Button [Save]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Beim Speichern der Werte tritt ein Fehler auf
\end_layout

\begin_layout Plain Layout
1b.
 Vom Benutzer wurde keine Auditing-Datenbank zum Speichern der Auditing-Daten
 festgelegt.
\end_layout

\begin_layout Plain Layout
1c.
 Die angegebene Auditing-Datenbank kann nicht verwendet werden, da sie z.B.
 nicht erreichbar ist oder die Authentifizierung fehlgeschlagen ist
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Admin-Konsole schließen
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Schließen der Admin-Konsole.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Admin-Konsole wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Admin-Konsole wurde geschlossen und alle nicht gespeicherten Änderungen
 wurden verworfen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Klick auf den Button [Close]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Admin-Konsole Defaults laden
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Laden der Standardwerte in der Admin-Konsole.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Admin-Konsole wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alle geänderten Werte der Admin-Konsole wurden auf die gespeicherten Standardwer
te zurückgesetzt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Klick auf den Button [Default]
\end_layout

\begin_layout Plain Layout
2.
 Ausführung des Anwendungsfalls 
\begin_inset Quotes eld
\end_inset

Admin-Konsole laden
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Auditing aktivieren
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auditing von SIMPL aktivieren.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Admin-Konsole ist geöffnet, der Unterpunkt 
\begin_inset Quotes eld
\end_inset

Auditing
\begin_inset Quotes erd
\end_inset

 wird angezeigt und das Auditing ist nicht aktiv.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das Auditing ist aktiv.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Setzen der Auditing-Checkbox
\end_layout

\begin_layout Plain Layout
2.
 Ausführung des Anwendungsfalls 
\begin_inset Quotes eld
\end_inset

Admin-Konsole speichern
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Auditing deaktivieren
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auditing von SIMPL deaktivieren.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Admin-Konsole ist geöffnet, der Unterpunkt 
\begin_inset Quotes eld
\end_inset

Auditing
\begin_inset Quotes erd
\end_inset

 wird angezeigt und das Auditing ist aktiv.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das Auditing ist deaktiviert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Zurücksetzen der Auditing-Checkbox
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Auditing-Datenbank festlegen
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Festlegung einer Datenbank für das Auditing.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Admin-Konsole ist geöffnet und der Unterpunkt 
\begin_inset Quotes eld
\end_inset

Auditing
\begin_inset Quotes erd
\end_inset

 wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Datenbank für das Auditing wurde festgelegt, gespeichert und kann verwendet
 werden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Angabe einer Datenbank-URL (optional Auswahl über Datenbank-Registry)
\end_layout

\begin_layout Plain Layout
2.
 Ausführung des Anwendungsfalls 
\begin_inset Quotes eld
\end_inset

Admin-Konsole speichern
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Globale Einstellungen festlegen
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Festlegung der globalen Einstellungen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Admin-Konsole ist geöffnet und der Unterpunkt 
\begin_inset Quotes eld
\end_inset

Global Settings
\begin_inset Quotes erd
\end_inset

 wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die globalen Einstellungen wurden festgelegt und gespeichert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Eingabe/Änderung der Werte
\end_layout

\begin_layout Plain Layout
2.
 Ausführung des Anwendungsfalls 
\begin_inset Quotes eld
\end_inset

Admin-Konsole speichern
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Neue Referenz in RRS einfügen
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Referenz in Reference Resolution System (RRS) einfügen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das RRS ist angebunden und die Admin-Konsole wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die neue Referenz wurde korrekt in das RRS eingefügt, wird in der Referenzen-Tab
elle angezeigt und kann nun bei der Modellierung verwendet werden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Referenz wurde nicht in das RRS eingefügt, wird nicht in der Referenzen-Tabe
lle angezeigt und es wird eine entsprechende Fehlermeldung angezeigt, die
 den Benutzer über die aufgetretenen Fehler informiert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Auswahl des Unterpunkts 
\begin_inset Quotes eld
\end_inset

References
\begin_inset Quotes erd
\end_inset

->
\begin_inset Quotes erd
\end_inset

Management
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Plain Layout
2.
 Klick auf den Button [New] zur Erstellung einer neuen Referenz
\end_layout

\begin_layout Plain Layout
3.
 Angabe aller benötigten Parameter
\end_layout

\begin_layout Plain Layout
4.
 Klick auf [Save], um die neue Referenz einzufügen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4a.
 Fehler beim Einfügen der Referenz in das RRS, da z.B.
 das RRS nicht erreichbar ist.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Referenz aus RRS bearbeiten
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bearbeiten einer vorhandenen Referenz des RRS.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das RRS ist angebunden und die Admin-Konsole wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die geänderten Werte der Referenz wurden korrekt im RRS gespeichert, die
 Referenz wurde aktualisiert und die aktualisierten Werte werden in der
 Referenzen-Tabelle angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die bearbeitete Referenz bleibt im RRS und in der Referenzen-Tabelle unverändert
 und es wird eine entsprechende Fehlermeldung angezeigt, die den Benutzer
 über die aufgetretenen Fehler informiert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Auswahl des Unterpunkts 
\begin_inset Quotes eld
\end_inset

References
\begin_inset Quotes erd
\end_inset

->
\begin_inset Quotes erd
\end_inset

Management
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Plain Layout
2.
 Auswahl der zu bearbeitenden Referenz mit einem linken Mausklick auf eine
 Zeile der Referenzen-Tabelle
\end_layout

\begin_layout Plain Layout
3.
 Klick auf Button [Open], um die Referenz zu öffen
\end_layout

\begin_layout Plain Layout
4.
 Bearbeiten der Werte der Referenz
\end_layout

\begin_layout Plain Layout
5.
 Klick auf den Button [Save], um die Änderungen im RRS zu speichern
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5a.
 Beim Speichern der Änderungen tritt ein Fehler auf, da z.B.
 das RRS nicht erreichbar ist.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Referenz aus RRS löschen
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Löschen einer vorhandenen Referenz aus dem RRS.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Das RRS ist angebunden und die Admin-Konsole wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die entsprechende Referenz wurde vollständig und korrekt aus dem RRS und
 der Referenzen-Tabelle entfernt und kann nun nicht mehr verwendet werden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die zu löschende Referenz bleibt im RRS und in der Referenzen-Tabelle unveränder
t und es wird eine entsprechende Fehlermeldung angezeigt, die den Benutzer
 über die aufgetretenen Fehler informiert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Auswahl des Unterpunkts 
\begin_inset Quotes eld
\end_inset

References
\begin_inset Quotes erd
\end_inset

->
\begin_inset Quotes erd
\end_inset

Management
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Plain Layout
2.
 Auswahl der zu löschenden Referenz mit einem linken Mausklick auf eine
 Zeile der Referenzen-Tabelle
\end_layout

\begin_layout Plain Layout
3.
 Klick auf Button [Delete], um die Referenz zu löschen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3a.
 Beim Löschen der Referenz tritt ein Fehler auf, da z.B.
 das RRS nicht erreichbar ist.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Anwendungsfälle der ODE Workflow-Engine
\end_layout

\begin_layout Standard
Die ODE Workflow-Engine kann durch unsere Erweiterungen folgende Anwendungsfälle
 (siehe Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:UseCaseDiaODEWFEngine"

\end_inset

) ausführen:
\end_layout

\begin_layout Itemize
Data-Management-Aktivität ausführen
\end_layout

\begin_layout Itemize
Data-Management-Aktivität kompensieren
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ODEwfEngine_iter1.jpg
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:UseCaseDiaODEWFEngine"

\end_inset

Anwendungsfall-Diagramm für die ODE Workflow-Engine
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Data-Management-Aktivität ausführen
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausführen einer DM-Aktivität.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Es wurde ein Prozess, der eine DM-Aktivität enthält, deployt und es wurde
 eine Instanz des Prozesses erzeugt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die DM-Aktivität und die darin enthaltene Datenmanagementoperation wurden
 erfolgreich ausgeführt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Die Aktivität befindet sich im Endzustand 
\begin_inset Quotes eld
\end_inset

Terminated
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Plain Layout
1b.
 Die Aktivität befindet sich im Zustand 
\begin_inset Quotes eld
\end_inset

Waiting
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Plain Layout
2.
 Die Aktivität befindet sich im Endzustand 
\begin_inset Quotes eld
\end_inset

Terminated
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Plain Layout
3.
 Die Aktivität befindet sich im Endzustand 
\begin_inset Quotes eld
\end_inset

Faulted
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Plain Layout
4.
 Die Aktivität befindet sich im Endzustand 
\begin_inset Quotes eld
\end_inset

Terminated
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Die DM-Aktivität befindet sich im Zustand 
\begin_inset Quotes eld
\end_inset

Ready
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Plain Layout
2.
 Die Ausführung der DM-Aktivität wird gestartet
\end_layout

\begin_layout Plain Layout
3.
 Senden der in der DM-Aktivität enthaltenen DM-Operationen zur Ausführung
 an die Datenquelle
\end_layout

\begin_layout Plain Layout
4.
 Die Ausführung der DM-Aktivität ist beendet und sie befindet sich im Zustand
 
\begin_inset Quotes eld
\end_inset

Waiting
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Plain Layout
5.
 Die DM-Aktivität wird als 
\begin_inset Quotes eld
\end_inset

Complete
\begin_inset Quotes erd
\end_inset

 gekennzeichnet
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.1.
 In der Vateraktivität tritt ein Fehler auf
\end_layout

\begin_layout Plain Layout
1a.2.
 Es wird ein 
\begin_inset Quotes eld
\end_inset

Terminate_Activity Event
\begin_inset Quotes erd
\end_inset

 ausgelöst
\end_layout

\begin_layout Plain Layout
1b.1.
 Es wird ein 
\begin_inset Quotes eld
\end_inset

Complete_Acitivity Event
\begin_inset Quotes erd
\end_inset

 an die DM-Aktivität gesendet
\end_layout

\begin_layout Plain Layout
1b.2.
 Es wird ein 
\begin_inset Quotes eld
\end_inset

Activity_Executed Event
\begin_inset Quotes erd
\end_inset

 ausgelöst
\end_layout

\begin_layout Plain Layout
2a.1.
 In der Vateraktivität tritt ein Fehler auf
\end_layout

\begin_layout Plain Layout
2a.2.
 Es wird ein 
\begin_inset Quotes eld
\end_inset

Terminate_Activity Event
\begin_inset Quotes erd
\end_inset

 ausgelöst
\end_layout

\begin_layout Plain Layout
3a.1.
 Währender der Durchführung der DM-Operationen tritt ein Fehler in der Datenquel
le auf (z.B.
 ein Syntaxfehler oder die Datenbank ist nicht erreichbar)
\end_layout

\begin_layout Plain Layout
3a.2.
 Es wird ein 
\begin_inset Quotes eld
\end_inset

Activity_Faulted Event
\begin_inset Quotes erd
\end_inset

 ausgelöst
\end_layout

\begin_layout Plain Layout
4a.1.
 In der Vateraktivität tritt ein Fehler auf
\end_layout

\begin_layout Plain Layout
4a.2.
 Es wird ein 
\begin_inset Quotes eld
\end_inset

Terminate_Activity Event
\begin_inset Quotes erd
\end_inset

 ausgelöst
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Data-Management-Aktivität kompensieren
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rückgängig machen einer DM-Aktivität, so dass der Zustand der Datenqeulle
 vor Ausführung der DM-Aktivität wiederhergestellt wird.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Im Normalablauf einer DM-Aktivität tritt ein Fehler auf (siehe Sonderfälle
 des Anwendungsfalls 
\begin_inset Quotes eld
\end_inset

Data-Management-Aktivität ausführen
\begin_inset Quotes erd
\end_inset

).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Zustand vor Ausführung der DM-Aktivität wurde erfolgreich wiederhergestellt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Alle Änderungen werden zurückgesetzt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Anwendungsfälle des Eclipse BPEL Designers
\end_layout

\begin_layout Standard
Der Eclipse BPEL Designer kann durch unsere Erweiterungen folgende Anwendungsfäl
le (siehe Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:UseCaseDiaBPELDesigner"

\end_inset

) ausführen:
\end_layout

\begin_layout Itemize
Admin-Konsole laden
\end_layout

\begin_layout Itemize
BPEL-Datei transformieren
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename BPELdesigner_iter2.jpg
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:UseCaseDiaBPELDesigner"

\end_inset

Anwendungsfall-Diagramm für den Eclipse BPEL Designer
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Admin-Konsole laden
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Laden der Inhalte der Admin-Konsole.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eclipse mit dem SIMPL Eclipse Plug-In ist geöffnet.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alle Werte der Datei mit den Einstellungen der Admin-Konsole wurden geladen
 und können im Fenster 
\begin_inset Quotes eld
\end_inset

Admin Console
\begin_inset Quotes erd
\end_inset

 und dessen Unterfenstern angezeigt werden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Es wird eine entsprechende Fehlermeldung angezeigt, die hinterlegten Standard-Ei
nstellungen wurden geladen und werden im Fenster 
\begin_inset Quotes eld
\end_inset

Admin Console
\begin_inset Quotes erd
\end_inset

 und dessen Unterfenstern angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Laden der Werte aus einer Datenquelle
\end_layout

\begin_layout Plain Layout
2.
 Füllen der Felder der Admin-Konsole
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Beim Laden der Werte tritt ein Fehler auf und die Standardwerte werden
 geladen
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
BPEL-Datei transformieren
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Umwandlung einer BPEL-Datei in Standard-BPEL-Quellcode.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eine BPEL-Datei (BPEL-Prozess) muss vorhanden sein und das Reference Resolution
 System (RRS) muss angebunden und erreichbar sein.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Es wurde ein korrekter standard-konformer BPEL-Prozess, der die gleiche
 Funktionalität wie der originale Prozess besitzt und zur Verwendung von
 Referenzen um entsprechende Aktivitäten oder Events erweitert wurde, erzeugt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Es wurde kein neuer BPEL-Prozess erzeugt, der originale BPEL-Prozess ist
 unverändert und es wird eine entsprechende Fehlermeldung ausgegeben.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Auslesen des originalen Prozesses
\end_layout

\begin_layout Plain Layout
2.
 Positioniertes Einfügen entsprechender Dereferenzierungsaktivitäten oder
 Events für Referenzen (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Transformation-des-Modells"

\end_inset

)
\end_layout

\begin_layout Plain Layout
3.
 Generierung des neuen BPEL-standard-konformen erweiterten Prozesses
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3a.
 Bei der Generierung tritt ein Fehler auf
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Anwendungsfälle des SIMPL Core
\begin_inset Note Note
status open

\begin_layout Plain Layout
neu, ÜBERARBEITEN
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Der SIMPL Core kann folgende Anwendungsfälle (siehe Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:UseCaseDiaSIMPLCore"

\end_inset

) ausführen:
\end_layout

\begin_layout Itemize
Referenz auflösen/dereferenzieren
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename SIMPLcore_iter2.jpg
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:UseCaseDiaSIMPLCore"

\end_inset

Anwendungsfall-Diagramm für die Prozess-Modelierer
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Referenz auflösen/dereferenzieren
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" width="3cm" special=">{\columncolor{lightgray}}{l}">
<column alignment="left" valignment="top" width="11cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ziel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der zugrundeliegende Wert einer Referenz wird ausgelesen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die angegebene Referenz muss existieren und das RRS muss angebunden sein.
 Ebenso muss die Datenquelle des referenzierten Werts erreichbar sein.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der korrekte Wert einer Referenz wird geliefert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung im Sonderfall
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Es wird ein entsprechender Fehler geworfen, der Informationen über das zugrundel
iegende Problem liefert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normalablauf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Wert der Referenz wird im RRS abgefragt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sonderfälle
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Beim Abfragen des Werts tritt ein Fehler auf, da z.B.
 das RRS nicht erreichbar ist
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Konzepte-und-Realisierungen"

\end_inset

Konzepte und Realisierungen
\end_layout

\begin_layout Standard
In diesem Kapitel werden alle Konzepte, die für SIMPL benötigt werden, und
 deren Realisierung erläutert.
 Dazu zählt z.B.
 die Beschreibung eines Referenzen-Konzepts für BPEL, dass es ermöglicht
 mit Referenzen innerhalb von Workflows zu arbeiten oder die Identifizierung
 und Definition von benötigten Data-Management-Aktivitäten, die zur Realisierung
 einer generischen Unterstützung von verschiedenen Abfragesprachen, wie
 z.B.
 SQL oder XQuery, für BPEL benötigt werden.
 Ebenso werden die Realisierung des Datenquellen-Auditings und das dafür
 zugrunde liegende Event-Modell beschrieben.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Daten-Referenzen-in-BPEL"

\end_inset

Daten-Referenzen in BPEL (IAAS-Referenzen)
\end_layout

\begin_layout Standard

\size small
Da bereits ein Konzept und umfassende Erkentnisse zur Bereitstellung und
 Verwaltung von Referenzen in BPEL, durch 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

 
\emph on
(
\begin_inset Quotes eld
\end_inset

Towards Reference Passing in Web Service and Workflow-based Applications
\begin_inset Quotes eld
\end_inset

)
\emph default
 vorlag, wurden an dieser Stelle nur die Ergebnisse des Dokuments zusammengefass
t und an die Anforderungen dieses Projekts angepasst.
\end_layout

\begin_layout Standard
\noindent
In BPEL werden Daten immer in Variablen gespeichert und die Werte (
\emph on
by value
\emph default
) innerhalb des Workflows weitergegeben.
 Dies hat zur Folge, dass gerade bei großen Datenmengen, wie sie in wissentschaf
tlichen Workflows normal sind, die Performanz stark durch das Transportieren
 der Daten beeinflusst wird.
 Um dies zu verhindern sollen Referenzen eingeführt werden, diese werden
 dann zwischen den einzelnen Web-Services weitergegeben (Daten werden 
\emph on
by reference
\emph default
 übergeben) und die Daten bleiben, sofern sie nicht im Workflow benötigt
 werden, auf ihrer Datenquelle und werden dort auch bearbeitet.
\end_layout

\begin_layout Standard
Zur Umsetzung dieses Konzepts muss ein neue Art von BPEL Variablen eingeführt
 werden, dies sind sogenannte Referenz-Variablen, die dazu genutzt werden
 können auf Daten zu verweisen.
 Dadurch müssen nur noch Referenzen zwischen den Web-Services und Workflows
 weitergeleitet werden und nicht mehr die Daten selbst.
 Für wissentschaftliche Workflows reduziert sich dadurch der Datentransport
 von großen Datenmengen zwischen den Web-Services und dem Workflow erheblich.
\end_layout

\begin_layout Standard
Zur Bereitstellung solcher Referenzen für Web-Services und Workflows müssen
 diese extern verwaltet werden und auch extern abrufbar sein.
 So kann ein globales oder unternehmensweites Variablenkonzept erstellt
 werden, dass es ermöglicht dieselben Daten in mehreren Workflows zu nutzen
 und nur einmal zentral zur Verfügung zu stellen.
\end_layout

\begin_layout Standard
Die Umsetzung der Referenzen wird durch sogenannte Endpoint References realisier
t, die in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Endpoint-References"

\end_inset

 beschrieben werden.
 Das externe Verwaltungssystem der Referenzen, das sogenannte Reference
 Resolution System, wird in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Reference-Resolution-System"

\end_inset

 näher erläutert.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Reference-Resolution-System"

\end_inset

Reference Resolution System
\end_layout

\begin_layout Standard
Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:RRS"

\end_inset

 zeigt die Architektur des Reference Resolution Systems (RRS).
 Am unteren Ende der Abbildung werden die verschiedenen möglichen Nutzer
 des Systems gezeigt: Workflows, Web-Services und der SIMPL Core, die den
 Wert einer Referenz auslesen oder Referenzen im System anlegen, aktualisieren
 und löschen können.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename RRSdiagramm.jpg
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:RRS"

\end_inset

Die Architektur des Reference Resolution Systems (RRS).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Auch wenn auf eine Trennung von Nutzern nach Zugriffsrechten (Benutzer vs.
 Administrator) aus Gründen der Flexibilität (ermöglicht automatische Erstellung
 von neuen Referenzen zur Prozesslaufzeit) verzichtet wird, so werden doch
 zwei entsprechende Web-Service Schnittstellen bereitgestellt.
 Dadurch ist eine spätere Erweiterung um Zugriffsrechte leicht realisierbar.
 Im folgenden werden diese zwei Schnittstellen kurz beschrieben:
\end_layout

\begin_layout Itemize
Die erste Schnittstelle ist der 
\emph on
Reference Retrieval Web Service
\emph default
 mit der Methode 
\emph on
get
\emph default
 und einer 
\emph on
enpoint reference
\emph default
 (EPR) als Eingabe.
 Das Konzept der endpoint references wird im Web Services Addressing Standard
 (siehe 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

) beschrieben und kann ohne Anpassungen für die Repräsentation einer Referenz
 genutzt werden.
 Der Rückgabewert der Methode ist der Wert, der durch die angegebene EPR
 referenziert wurde.
\end_layout

\begin_layout Itemize
Die zweite Schnittstelle ist der Reference Management Web Service, der drei
 Methoden bereitstellt.
 Die Methode 
\emph on
insert
\emph default
 um eine neue Referenz zu erstellen, dabei ist die Eingabe der Wert der
 Referenz, wo dieser Wert gespeichert wird und wie er dort wieder ausgelesen
 werden kann.
 Dies könnte beispielsweise durch entsprechende SQL-Befehle angegeben werden.
 Der Rückgabewert ist eine Meldung, die die neu generierte EPR enthält.
 Als Zweites die 
\emph on
update
\emph default
 Methode, die für die Aktualisierung von gespeicherten Werten einer Referenz
 benötigt wird.
 Dabei ist die Eingabe der neue Wert der Referenz und wie dieser Wert gespeicher
t wird.
 Der Rückgabewert ist eine Meldung, ob die Aktualisierung erfolgreich war.
 Die 
\emph on
delete
\emph default
 Methode löscht eine Referenz aus dem RRS, d.h.
 der Wert und alle sonstigen Informationen der Referenz werden aus dem System
 entfernt.
 Die Eingabe ist dabei die EPR, die entfernt werden soll und der Rückgabewert
 ist eine Meldung, ob die Referenz erfolgreich entfernt wurde.
\end_layout

\begin_layout Standard
Die Hauptkomponente ist allerdings das Reference Resolution System selbst.
 Es verbindet beide Web-Service Schnittstellen und hält eine Menge von Adaptern
 für die Integration verschiedenster Datenquellen bereit.
 Jeder dieser Adapter besteht dabei aus einem Lookup-Service für gespeicherte
 Queries und Informationen, sowie aus einem ausführenden Service mit dem
 Queries auf den Datenquellen ausgeführt werden können.
 Anhand einer gegebenen Referenz wird dazu der passende Adapter gesucht,
 ausgewählt und für das Auflösen von Referenzen verwendet.
 Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:RRS"

\end_inset

 zeigt am oberen Ende einige solcher Adapter, wobei das RRS erweiterbar
 ist und mit Adaptern für alle Arten von Datenquellen ergänzt werden kann.
\end_layout

\begin_layout Standard
In 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

 werden mehrere mögliche Anbindungen des RRS in der Workflow-Umgebung genannt.
 Im Zusammenhang mit unseren Gegebenheiten, vorallem im Hinblick darauf,
 dass die Workflow-Engine lokal auf dem Benutzer-Rechner ausgeführt wird,
 bietet sich die Variante 
\begin_inset Quotes eld
\end_inset

Ein RRS pro Workflow-Engine
\begin_inset Quotes erd
\end_inset

 an.
 Dadurch erhalten wir mehrere wichtige Vorteile: 
\end_layout

\begin_layout Itemize
Jeder Prozess-Modellierer (Workflow-Administrator) kann Referenzen nach
 Bedarf selbst sofort erstellen und verwalten.
\end_layout

\begin_layout Itemize
Die Referenzen können nur lokal geändert werden und sind nicht global (von
 aussen) zugänglich, dadurch benötigen wir keinen Zugriffsschutz.
\end_layout

\begin_layout Itemize
Wird bei der Modellierung von BPEL-Prozessen festgestellt, dass entsprechende
 Referenzen benötigt werden, können diese sofort angelegt und auch sofort
 in der Prozess-Modellierung verwendet werden.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Endpoint-References"

\end_inset

Referenzen und Endpoint References
\end_layout

\begin_layout Standard
Nachdem die Architektur des Systems beschrieben wurde, folgt die Beschreibung
 des wichtigsten Teils des Systems, die Referenzen selbst.
 Dazu wird die Repräsentation der Referenzen anhand des WSAddressing Konzepts
 der 
\emph on
endpoint references
\emph default
 (EPR's) 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

 beschrieben.
 Das Ziel bei der Definition der Referenzen ist, diese so flexibel und erweiterb
ar wie möglich zu realisieren und zu versuchen die vollständige Abgeschlossenhei
t der EPR's zu erreichen.
 Vollständige Abgeschlossenheit bedeutet dabei, dass alle für die Auflösung
 einer Referenz benötigten Informationen in der EPR selbst hinterlegt sind.
 Listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "lst:EPR-Schema"

\end_inset

 zeigt das Schema einer EPR und wie diese zur Repräsentation einer Referenz
 genutzt werden.
 Im Schema und allen nachfolgenden Listings werden dabei folgende BNF Konvention
en verwendet: 
\begin_inset Quotes eld
\end_inset

?
\begin_inset Quotes erd
\end_inset

 bezeichnet Optionalität (0 oder 1), 
\begin_inset Quotes eld
\end_inset

*
\begin_inset Quotes erd
\end_inset

 (0 oder mehr), 
\begin_inset Quotes eld
\end_inset

+
\begin_inset Quotes erd
\end_inset

 (1 oder mehr) und 
\begin_inset Quotes eld
\end_inset

|
\begin_inset Quotes erd
\end_inset

 steht für eine Auswahlmöglichkeit.
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "basicstyle={\small\ttfamily},captionpos=b,frame=single,tabsize=4,xleftmargin=3cm,xrightmargin=3cm"
inline false
status open

\begin_layout Plain Layout

<wsa:EndpointReference> 
\end_layout

\begin_layout Plain Layout

	<wsa:Address> 
\end_layout

\begin_layout Plain Layout

		xs:anyURI 
\end_layout

\begin_layout Plain Layout

	</wsa:Address> 
\end_layout

\begin_layout Plain Layout

	<wsa:ReferenceProperties> 
\end_layout

\begin_layout Plain Layout

		<rrs:resolutionSystem> 
\end_layout

\begin_layout Plain Layout

			(xs:String | xs:anyURI | 
\end_layout

\begin_layout Plain Layout

			xs:QName) 
\end_layout

\begin_layout Plain Layout

		</rrs:resolutionSystem> 
\end_layout

\begin_layout Plain Layout

	</wsa:ReferenceProperties> 
\end_layout

\begin_layout Plain Layout

	<wsa:ReferenceParameters> 
\end_layout

\begin_layout Plain Layout

		(xs:anyURI | 
\end_layout

\begin_layout Plain Layout

		xs:any) 
\end_layout

\begin_layout Plain Layout

	</wsa:ReferenceParameters> 
\end_layout

\begin_layout Plain Layout

	<wsa:PortType>xs:QName</wsa:PortType> 
\end_layout

\begin_layout Plain Layout

	<wsa:ServiceName PortName="xs:NCName"?>
\end_layout

\begin_layout Plain Layout

		xs:QName 
\end_layout

\begin_layout Plain Layout

	</wsa:ServiceName> 
\end_layout

\begin_layout Plain Layout

	<wsp:Policy>Policy</wsp:Policy>? 
\end_layout

\begin_layout Plain Layout

</wsa:EndpointReference>
\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lst:EPR-Schema"

\end_inset

EPR Schema
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die verschiedenen Bestandteile einer EPR werden dabei für folgende Zwecke
 benötigt: Der 
\family typewriter
Address
\family default
 Teil verweist auf den Endpunkt des RRS, das die Werte der Referenzen verwaltet.
 In den 
\family typewriter
ReferenceProperties
\family default
 wird der Adapter des RRS, der für das Auflösen der Referenz zuständig ist,
 angegeben.
 Alle Informationen, die der entsprechende Adapter zur Auflösung der Referenz
 benötigt, werden in den 
\family typewriter
ReferenceParameters
\family default
 angegeben.
 Diese Informationen können entweder direkt angegeben werden, wie z.B.
 ein SQL-Query oder aber auch zentral gespeichert und anschließend über
 einen 
\emph on
Uniform Resource Identifier
\emph default
 (URI) referenziert werden.
 Beide Möglichkeiten haben Vorteile: Die direkte Angabe erlaubt es den Query
 in der EPR wärend der Laufzeit zu ändern.
 Mit der Verwendung von gespeicherten Queries wird dafür sichergestellt,
 dass immer der gleiche Query ausgeführt wird und so niemand ungewollte
 Queries ausführen kann.
 
\family typewriter
PortType
\family default
 und 
\family typewriter
ServiceName
\family default
 sind technische Parameter, die das dynamische Binden des RRS erlauben sollen.
 
\family typewriter
Policy
\family default
 ist optional und erlaubt das Hinzufügen von nichtfunktionalen Eigenschaften
 für die Ausführung der Queries.
 So kann z.B.
 
\emph on
Quality of Context
\emph default
 (QoC) (Aktualität, Korrektheit, usw.), der für die zurückgelieferten Daten
 gelten soll, angegeben werden.
\end_layout

\begin_layout Standard
Weitere Details zu den Design-Entscheidungen und deren Nutzen finden sich
 in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

 unter 
\emph on

\begin_inset Quotes eld
\end_inset

Main Design Issues and Benefits of the Architecture
\begin_inset Quotes erd
\end_inset


\emph default
.
\end_layout

\begin_layout Subsubsection
Realisierung von Referenzen in BPEL
\end_layout

\begin_layout Standard
In 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

 werden zwei verschiedene Ansätze (siehe Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:AltRealisierungRefBPEL"

\end_inset

) zur Integration des Referenzen-Konzepts in BPEL beschrieben und deren
 Vor- und Nachteile erläutert.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ReferenzUmsetzungDiagramm.jpg
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:AltRealisierungRefBPEL"

\end_inset

Alternativen zur Realisierung von Referenzen in BPEL
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Für beide Konzepte muss ein entsprechendes Modellierungswerkzeug erweitert
 werden, danach unterscheiden sich dann die Konzepte.
 Die erste Variante besteht darin, den erweiterten BPEL-Quellcode unverändert
 auf einer erweiterten Workflow-Engine auszuführen, dass hat natürlich den
 entscheidenen Nachteil, dass nur noch eine entsprechend erweiterte Workflow-Eng
ine diese Prozesse ausführen kann.
 Die zweite Variante umgeht dieses Problem, indem der veränderte BPEL-Quellcode
 in Standard-BPEL-Quellcode transformiert wird.
 Wir konzentrieren uns hier auf die Beschreibung der zweiten Variante, da
 diese einen universelleren Ansatz liefert, auf nahezu alle standard-konformen
 Workflow-Engines portiert werden kann und somit die Ausführungsumgebung
 des generierten BPEL-Quellcodes nicht eingeschränkt wird.
\end_layout

\begin_layout Subsubsection*
Erweiterung des Modellierungswerkzeugs
\end_layout

\begin_layout Standard
Wie bereits erwähnt, muss auf jeden Fall das Modellierungswerkzeug erweitert
 werden, um BPEL Prozesse mit Referenzen modellieren zu können.
 Zur Modellierung von solchen 
\family typewriter
<referenceVariable>
\family default
 muss ein neuer Variablentyp eingeführt werden.
 Den Aufbau dieser Variablen zeigt das Schema in Listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "lst:<referenceVariable>-Schema"

\end_inset

.
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "basicstyle={\small\ttfamily},captionpos=b,frame=single,tabsize=4,xleftmargin=3cm,xrightmargin=3cm"
inline false
status open

\begin_layout Plain Layout

<referenceVariable name="refName" 
\end_layout

\begin_layout Plain Layout

    valueType="xsd: schema" 
\end_layout

\begin_layout Plain Layout

	referenceType="onInstantiation | fresh |
\end_layout

\begin_layout Plain Layout

	periodic | external" 
\end_layout

\begin_layout Plain Layout

	period="duration"? 
\end_layout

\begin_layout Plain Layout

	external="partnerLink"? />*
\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lst:<referenceVariable>-Schema"

\end_inset

Code eines 
\family typewriter
<referenceVariable>
\family default
-Schemas
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Dieses Schema ist eine Erweiterung des Standard BPEL Variablen-Schemas.
 Das Attribut 
\family typewriter
valueType
\family default
 spiegelt den Datentyp der referenzierten Variable wieder.
 Die Referenz-Variable selbst, ist implizit vom Type 
\family typewriter
xsd:EPR
\family default
 und dient dazu die eigentliche Referenz zu speichern.
 Über das Attribut 
\family typewriter
referenceType
\family default
 kann angegeben werden, wie aktuell referenzierte Werte sein sollen, also
 wann und wie oft die in den Referenzen hinterlegten Werte aktualisiert
 werden sollen.
 In 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

 werden vier solcher Aktualitätskonstanten vorgestellt, wobei eine vielzahl
 weiterer solcher Konstanten denkbar ist.
 Ihre Bedeutung und Verwendung wird nachfolgend bei der Beschreibung der
 Modelltransformation aufgezeigt.
\end_layout

\begin_layout Subsubsection*
\begin_inset CommandInset label
LatexCommand label
name "sub:Transformation-des-Modells"

\end_inset

Transformation des Modells
\end_layout

\begin_layout Standard
Die Integration eines Modelltransformation-Zwischenschritts vor dem Deployment
 des Prozesses erlaubt uns, ein virtuelles Referenz-Handling für Prozesse
 zu realisieren, ohne dabei die den Prozess ausführende Engine zu modifizieren.
 Die Grundidee ist dabei die Sprache BPEL nur im Modellierungswerkzeug,
 in dem wir zwischen normalen Variablen und Referenzen unterscheiden, zu
 erweitern.
 Der zusätzliche Transformationsschritt generiert dabei standard-konforme
 BPEL Konstrukte für die Handhabung von Referenzen und speist diese in das
 originale Prozess-Modell ein.
 Für jede Referenz, die im Prozessmodell deklariert ist, werden dafür zwei
 entsprechende Variablendeklarationen, wie in Listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "lst:VariablenDeklaration"

\end_inset

 dargestellt, generiert.
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "basicstyle={\small\ttfamily},captionpos=b,frame=single,tabsize=4,xleftmargin=3cm,xrightmargin=3cm"
inline false
status open

\begin_layout Plain Layout

<variable name="refName" type="xsd:schema"/> 
\end_layout

\begin_layout Plain Layout

<variable name="refNameEPR" type="xsd:EPR"/>
\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lst:VariablenDeklaration"

\end_inset

Code der generierten Variablen-Deklaration
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die erste Deklaration wird dabei für die Haltung des aktuellen Werts genutzt,
 die Zweite um die Referenz, die durch eine EPR repräsentiert wird, auf
 diesen Wert zu speichern.
 Weiterhin muss das RRS im Prozessmodel sichtbar sein, dies wird durch die
 Generierung eines entsprechenden 
\family typewriter
<partnerLink>
\family default
 realisiert.
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "basicstyle={\small\ttfamily},captionpos=b,frame=single,tabsize=4,xleftmargin=3cm,xrightmargin=3cm"
inline false
status open

\begin_layout Plain Layout

<invoke name="refNameRefresh_1" partnerLink="RRS"
\end_layout

\begin_layout Plain Layout

	operation="GET" inputVariable="refNameEPR"
\end_layout

\begin_layout Plain Layout

	outputVariable="refName"/>
\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lst:Dereferenzierungsaktivität"

\end_inset

Code einer Dereferenzierungs-Aktivität
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Zu guter Letzt zeigt Listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "lst:Dereferenzierungsaktivität"

\end_inset

 die tatsächliche Dereferenzierung einer Referenz über einen Web-Service
 Aufruf, der das RRS, das der Hauptbestandteil der Dereferenzierungsaktivität
 ist, aufruft.
 Der Modelltransformationsansatz speist Variablendeklarationen und Dereferenzier
ungsaktivitäten in den Workflow ein, um die Aktualisierung der Werte der
 Referenzen auszuführen.
 Wie bereits weiter oben erwähnt, ermöglicht es das Attribut 
\family typewriter
referenceType
\family default
 dem Modellierer eine von verschiedenen Aktualisierungsoptionen für die
 Werte der Referenzen auszuwählen.
 Abhängig von der Auswahl des Modellierers müssen die Dereferenzierungsaktivität
en an der entsprechenden Position im Prozess folgendermaßen eingefügt werden:
\end_layout

\begin_layout Itemize

\emph on
onInstantiation (default)
\emph default
:
\emph on
 
\emph default
Bei der Instanzierung des Prozesses werden die Werte vom RRS abgefragt und
 die Variablen entsprechend gesetzt.
 Diese Einstellung ist für die Definition von Konstanten, die beim Prozessstart
 gesetzt werden und während der ganzen Laufzeit des Prozesses unverändert
 bleiben, sinnvoll.
 Für jede Referenz die auf 
\emph on
onInstantiation
\emph default
 gesetzt ist, wird die RRS Invoke-Aktivität aus Listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "lst:Dereferenzierungsaktivität"

\end_inset

 zu einer Sequenz, die bei der Prozessinstanzierung ausgeführt wird, hinzugefügt.
\end_layout

\begin_layout Itemize

\emph on
fresh
\emph default
:
\emph on
 
\emph default
So frisch wie nur möglich - der Wert wird jedesmal abgefragt, wenn auf die
 Variable zugegriffen wird.
 Diese Einstellung ist nützlich, falls auf sich oft ändernde externe Werte,
 wie z.B.
 Sensordaten, zugegriffen werden soll.
 Hier muss die Dereferenzierungsaktivität direkt vor jeder Aktivität, die
 den Wert der Referenz liest, ausgeführt werden.
\end_layout

\begin_layout Itemize

\emph on
periodic
\emph default
: Im Attribut 
\family typewriter
period
\family default
 kann ein Zeitwert, wie z.B.
 10 min, angegeben werden.
 Dieses Attribut beschreibt das maximale Alter (Zeitspanne seit letzter
 Aktualisierung), das ein lokal gespeicherter temporärer Wert einer Referenz
 haben darf.
 Nachdem diese Zeitspanne abgelaufen ist, wird der Wert aus dem RRS abgefragt
 und die temporäre Variable aktualisiert.
 Dafür wird ein 
\family typewriter
<onAlarm>
\family default
 Element im globalen 
\family typewriter
<eventHandlers>
\family default
 Element während der Transformation eingefügt.
 Diese Konstruktion liefert die periodische Aktualisierung von Werten über
 das wiederholte Abfragen dieser Werte aus dem RRS.
\end_layout

\begin_layout Itemize

\emph on
external
\emph default
: Ein externer Event im Bereich der Web-Service Orchestrierung ist typischerweis
e eine Nachricht, die an die Prozessinstanz geschickt wird (oder ein Signal,
 das für alle Instanzen eines Prozessmodells gültig ist).
 Wird dieser Wert als 
\family typewriter
referenceType
\family default
 gesetzt, können Aktualisierungen der Werte von Aussen, durch das Senden
 entsprechender Nachrichten an die Prozess-Engine, ausgelöst werden.
 Der Service von dem solch eine Nachricht erwartet wird, kann im Attribut
 
\family typewriter
external
\family default
 angegeben werden.
 Im Transformationsschritt wird dazu ein 
\family typewriter
<onEvent>
\family default
 Konstrukt im globalen 
\family typewriter
<eventHandlers>
\family default
 Element eingefügt.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Container-Referenzen-in-BPEL"

\end_inset

Container-Referenzen in BPEL (IPVS-Referenzen)
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
noch ausarbeiten
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Data-Management-Aktivitäten"

\end_inset

Data-Management-Aktivitäten
\end_layout

\begin_layout Standard
In diesem Abschnitt werden die zu realisierenden Datenmanagement-Patterns
 zur Umsetzung einer generischen Unterstützung verschiedener Abfragesprachen
 für BPEL vorgestellt und im weiteren Verlauf deren Realisierung für die
 verschiedenen Datenquellen, d.h.
 für Dateisysteme, Datenbanken und Sensornetze, erläutert.
 Aus den in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Umsetzung-der-Datenmanagement"

\end_inset

 identifizierten Funktionen, die für die Umsetzung der Datenmanagement-Patterns
 benötigt werden, werden dann in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Resultierende-BPEL-Aktivitäten"

\end_inset

 neue benötigte BPEL-Aktivitäten abstrahiert, die dann später die entsprechenden
 Funktionen ausführen werden.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Datenmanagement-Patterns"

\end_inset

Datenmanagement-Patterns
\end_layout

\begin_layout Standard
In diesem Abschnitt werden alle Datenmanagement-Patterns, die zur Realisierung
 einer generischen Unterstützung von verschiedenen Abfragesprachen, aufgeführt
 und beschrieben.
\end_layout

\begin_layout Subsubsection*
Relationale Datenbanken
\end_layout

\begin_layout Standard
Dieser Abschnitt beschreibt alle Datenmanagement-Patterns, die zur Realisierung
 einer SQL-inline Unterstützung für BPEL benötigt werden (vgl.
 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

).
\end_layout

\begin_layout Paragraph*
Query Pattern
\end_layout

\begin_layout Standard
Das Query Pattern beschreibt die Notwendigkeit, mithilfe von SQL-Befehlen
 externe Daten anfordern zu können.
 Die aus den Queries resultierenden Daten können dabei auf der Datenquelle
 zwischengespeichert oder direkt im BPEL-Prozess gehalten werden.
\end_layout

\begin_layout Paragraph*
Set IUD Pattern
\end_layout

\begin_layout Standard
Das Set IUD Pattern beschreibt die Möglichkeit auf mengenorientierten Daten
 außerhalb des Prozesses verschiedene Datenmanipulations-Operationen ausführen
 zu können.
 Zu diesen Operationen zählen das mengenorientierte Einfügen (insert), Aktualisi
eren (update) und Löschen (delete) von Daten.
\end_layout

\begin_layout Paragraph*
Data Setup Pattern
\end_layout

\begin_layout Standard
Das Data Setup Pattern liefert die Möglichkeit, benötigte Data Definition
 Language (DDL) Befehle auf einem relationalen Datenbanksystem auszuführen,
 um so während der Prozessausführung die Datenquelle zu konfigurieren oder
 neue Container (Tabellen, Schema, usw.) zu erstellen.
\end_layout

\begin_layout Paragraph*
Stored Procedure Pattern
\end_layout

\begin_layout Standard
Da die komplexe Verarbeitung von Daten meist durch Stored Procedures realisiert
 wird, ist es für die Verarbeitung von externen Daten unbedingt erforderlich,
 Stored Procedures auch aus einem Prozess heraus aufrufen zu können.
\end_layout

\begin_layout Paragraph*
Set Retrieval Pattern
\end_layout

\begin_layout Standard
Manchmal ist es nötig, Daten innerhalb des BPEL-Prozesses zu verarbeiten.
 Das Set Retrieval Pattern liefert dafür eine mengenorientierte Datenstruktur,
 in die man die angefragten externen Daten innerhalb des BPEL-Prozesses
 ablegen kann.
 Diese Datenstruktur verhält sich dabei wie ein Cache im BPEL-Prozess, der
 keine Verbindung zur originalen Datenquelle besitzt.
\end_layout

\begin_layout Paragraph*
Set Access Pattern
\end_layout

\begin_layout Standard
Das Set Access Pattern beschreibt die Notwendigkeit, auf den erzeugten Datencach
e sequentiell und direkt (random) zugreifen zu können.
\end_layout

\begin_layout Paragraph*
Tuple IUD Pattern
\end_layout

\begin_layout Standard
Das Tuple IUD Pattern beschreibt die Notwendigkeit, dass auch in einen Datencach
e Daten eingefügt, aktualisiert und wieder aus diesem gelöscht werden können.
\end_layout

\begin_layout Paragraph*
Synchronization Pattern
\end_layout

\begin_layout Standard
Das Synchronization Pattern realisiert die Synchronisation eines lokalen
 Datencaches mit der originalen Datenquelle.
\end_layout

\begin_layout Subsubsection*
XML-Datenbanken
\end_layout

\begin_layout Standard
Dieser Abschnitt beschreibt alle Datenmanagement-Patterns, die zur Realisierung
 einer XQuery-inline Unterstützung für BPEL benötigt werden.
\end_layout

\begin_layout Paragraph*
Query Pattern
\end_layout

\begin_layout Standard
Das Query Pattern beschreibt die Notwendigkeit, mithilfe von XQuery-Befehlen
 externe Daten anfordern zu können.
 Die aus den Queries resultierenden Daten können dabei auf der Datenquelle
 zwischengespeichert oder direkt im BPEL-Prozess gehalten werden.
\end_layout

\begin_layout Paragraph*
Tree IUD Pattern
\end_layout

\begin_layout Standard
Das Tree IUD Pattern beschreibt die Möglichkeit verschiedene Datenmanipulations-
Operationen auf Knoten von baumartigen Daten außerhalb des Prozesses ausführen
 zu können.
 Zu diesen Operationen zählen das Einfügen , Ersetzen und Löschen von Knoten.
\end_layout

\begin_layout Paragraph*
Node IUD Pattern
\end_layout

\begin_layout Standard
Das Node IUD Pattern beschreibt die Möglichkeit verschiedene Datenmanipulations-
Operationen in Knoten von baumartigen Daten außerhalb des Prozesses ausführen
 zu können.
 Zu diesen Operationen zählen das Einfügen , Ersetzen und Löschen von Werten
 innerhalb von Knoten.
\end_layout

\begin_layout Paragraph*
Data Setup Pattern
\end_layout

\begin_layout Standard
Das Data Setup Pattern liefert die Möglichkeit, benötigte Data Definition
 Language (DDL) Befehle auf einem XML-Datenbanksystem auszuführen, um so
 während der Prozessausführung die Datenquelle zu konfigurieren oder neue
 Container (Tabellen, Schema, usw.) zu erstellen.
\end_layout

\begin_layout Paragraph*
Stored Procedure Pattern
\end_layout

\begin_layout Standard
Da die komplexe Verarbeitung von Daten meist durch Stored Procedures realisiert
 wird, ist es für die Verarbeitung von externen Daten unbedingt erforderlich,
 Stored Procedures auch aus einem Prozess heraus aufrufen zu können.
\end_layout

\begin_layout Paragraph*
Tree Retrieval Pattern
\end_layout

\begin_layout Standard
Manchmal ist es nötig, Daten innerhalb des BPEL-Prozesses zu verarbeiten.
 Das Tree Retrieval Pattern liefert dafür eine baumartige Datenstruktur,
 in die man die angefragten externen Daten innerhalb des BPEL-Prozesses
 ablegen kann.
 Diese Datenstruktur verhält sich dabei wie ein Cache im BPEL-Prozess, der
 keine Verbindung zur originalen Datenquelle besitzt.
\end_layout

\begin_layout Paragraph*
Tree Access Pattern
\end_layout

\begin_layout Standard
Das Tree Access Pattern beschreibt die Notwendigkeit, auf den erzeugten
 Datencache sequentiell und direkt (random) zugreifen zu können.
\end_layout

\begin_layout Paragraph*
Node IUD Pattern
\end_layout

\begin_layout Standard
Das Node IUD Pattern beschreibt die Notwendigkeit, dass auch in einen Datencache
 baumartige Daten eingefügt, aktualisiert und wieder aus diesem gelöscht
 werden können.
\end_layout

\begin_layout Paragraph*
Synchronization Pattern
\end_layout

\begin_layout Standard
Das Synchronization Pattern realisiert die Synchronisation eines lokalen
 Datencaches mit der originalen Datenquelle.
\end_layout

\begin_layout Subsubsection*
Dateisysteme
\end_layout

\begin_layout Standard
Dieser Abschnitt beschreibt alle Datenmanagement-Patterns, die für die Unterstüt
zung von Dateisystemen in BPEL benötigt werden.
\end_layout

\begin_layout Paragraph*
Query Pattern
\end_layout

\begin_layout Standard
Das Query Pattern beschreibt die Notwendigkeit externe Daten anfordern zu
 können.
 Die aus den Abfragen resultierenden Daten können dabei auf der Datenquelle
 zwischengespeichert oder direkt im BPEL-Prozess gehalten werden.
\end_layout

\begin_layout Paragraph*
File IUD Pattern
\end_layout

\begin_layout Standard
Das File IUD Pattern beschreibt die Möglichkeit verschiedene Datenmanipulations-
Operationen auf Dateien eines Dateisystems ausführen zu können.
 Zu diesen Operationen zählen das Einfügen , Ersetzen und Löschen von Dateien.
\end_layout

\begin_layout Paragraph*
Data IUD Pattern
\end_layout

\begin_layout Standard
Das Data IUD Pattern beschreibt die Möglichkeit verschiedene Datenmanipulations-
Operationen innerhalb von Dateien eines Dateisystems ausführen zu können.
 Zu diesen Operationen zählen das Einfügen , Ersetzen und Löschen von Dateiinhal
ten.
\end_layout

\begin_layout Paragraph*
Data Setup Pattern
\end_layout

\begin_layout Standard
Das Data Setup Pattern liefert die Möglichkeit, benötigte Data Definition
 Language (DDL) Befehle auf einem Dateisystem auszuführen, um so während
 der Prozessausführung die Datenquelle zu konfigurieren oder neue Container
 (Ordner, Dateien, usw.) zu erstellen.
\end_layout

\begin_layout Paragraph*
Stored Procedure Pattern
\end_layout

\begin_layout Standard
Da die komplexe Verarbeitung von Daten meist durch Stored Procedures realisiert
 wird, ist es für die Verarbeitung von externen Daten unbedingt erforderlich,
 Stored Procedures auch aus einem Prozess heraus aufrufen zu können.
\end_layout

\begin_layout Paragraph*
File Retrieval Pattern
\end_layout

\begin_layout Standard
Das File Retrieval Pattern liefert eine Datenstruktur, in die man, aus einem
 Dateisystem, abgefragte Dateien innerhalb des BPEL-Prozesses ablegen kann.
 Diese Datenstruktur verhält sich dabei wie ein Cache im BPEL-Prozess, der
 keine Verbindung zur originalen Datenquelle besitzt.
\end_layout

\begin_layout Paragraph*
File Access Pattern
\end_layout

\begin_layout Standard
Das File Access Pattern beschreibt die Notwendigkeit, auf den erzeugten
 Datencache sequentiell zugreifen zu können.
\end_layout

\begin_layout Paragraph*
Data IUD Pattern
\end_layout

\begin_layout Standard
Das Data IUD Pattern beschreibt die Notwendigkeit, dass auch in einen Datencache
 Daten eingefügt, aktualisiert und wieder aus diesem gelöscht werden können.
\end_layout

\begin_layout Paragraph*
Synchronization Pattern
\end_layout

\begin_layout Standard
Das Synchronization Pattern realisiert die Synchronisation eines lokalen
 Datencaches mit der originalen Datenquelle.
\end_layout

\begin_layout Subsubsection*
Sensornetze
\end_layout

\begin_layout Standard
Dieser Abschnitt beschreibt alle Datenmanagement-Patterns, die für die Unterstüt
zung von Sensornetzen in BPEL benötigt werden.
\end_layout

\begin_layout Paragraph*
Query Pattern
\end_layout

\begin_layout Standard
Das Query Pattern beschreibt die Notwendigkeit, mithilfe von SQL-Befehlen
 externe Daten anfordern zu können.
 Die aus den Queries resultierenden Daten können dabei auf der Datenquelle
 in Buffer-Tabellen zwischengespeichert oder direkt im BPEL-Prozess gehalten
 werden.
\end_layout

\begin_layout Paragraph*
Data Setup Pattern
\end_layout

\begin_layout Standard
Das Data Setup Pattern liefert die Möglichkeit, benötigte Data Definition
 Language (DDL) Befehle auf dem Sensornetz-Datenbanksystem auszuführen,
 um so während der Prozessausführung die Datenquelle zu konfigurieren oder
 neue Container (Buffer-Tabellen) zu erstellen.
\end_layout

\begin_layout Paragraph*
Stored Procedure Pattern
\end_layout

\begin_layout Standard
Da die komplexe Verarbeitung von Daten meist durch Stored Procedures realisiert
 wird, ist es für die Verarbeitung von externen Daten unbedingt erforderlich,
 Stored Procedures auch aus einem Prozess heraus aufrufen zu können.
\end_layout

\begin_layout Paragraph*
Set Retrieval Pattern
\end_layout

\begin_layout Standard
Manchmal ist es nötig, Daten innerhalb des BPEL-Prozesses zu verarbeiten.
 Das Set Retrieval Pattern liefert dafür eine mengenorientierte Datenstruktur,
 in die man die angefragten externen Daten innerhalb des BPEL-Prozesses
 ablegen kann.
 Diese Datenstruktur verhält sich dabei wie ein Cache im BPEL-Prozesses,
 der keine Verbindung zur originalen Datenquelle besitzt.
\end_layout

\begin_layout Paragraph*
Set Access Pattern
\end_layout

\begin_layout Standard
Das Set Access Pattern beschreibt die Notwendigkeit, auf den erzeugten Datencach
e sequentiell und direkt (random) zugreifen zu können.
\end_layout

\begin_layout Paragraph*
Tuple IUD Pattern
\end_layout

\begin_layout Standard
Das Tuple IUD Pattern beschreibt die Notwendigkeit, dass auch in einen Datencach
e Daten eingefügt, aktualisiert und wieder aus diesem gelöscht werden können.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Umsetzung-der-Datenmanagement"

\end_inset

Umsetzung der Datenmanagement-Patterns
\end_layout

\begin_layout Standard
In diesem Abschnitt wird die Realisierung der verschiedenen Datenmanagement-Patt
erns aus Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Datenmanagement-Patterns"

\end_inset

 im Zusammenhang mit den jeweiligen Datenquellentypen beschrieben.
\end_layout

\begin_layout Subsubsection*
Relationale Datenbanken
\end_layout

\begin_layout Standard
Hier wird die Umsetzung der in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Datenmanagement-Patterns"

\end_inset

 beschriebenen Patterns im Bereich der SQL-Datenbanken durch bestehende
 SQL-Befehle oder, falls erforderlich, durch die Definition neuer zu implementie
render Funktionen beschrieben.
\end_layout

\begin_layout Itemize
Query Pattern: Realisierung durch SQL-SELECT.
\end_layout

\begin_deeper
\begin_layout Itemize
Beispiel: 
\end_layout

\begin_deeper
\begin_layout Itemize
SELECT info FROM customer
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Set IUD Pattern: Realisierung durch SQL-INSERT, SQL-UPDATE, SQL-DELETE.
\end_layout

\begin_deeper
\begin_layout Itemize
Beispiele: 
\end_layout

\begin_deeper
\begin_layout Itemize
INSERT INTO department VALUES (’E31’, ’architecture’, ’00390’, ’E01’)
\end_layout

\begin_layout Itemize
INSERT INTO department SELECT * FROM old_department
\end_layout

\begin_layout Itemize
UPDATE employee SET job = ’laborer’ WHERE empno = ’000290’
\end_layout

\begin_layout Itemize
DELETE FROM department WHERE deptno = ’D11’
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Data Setup Pattern: Realisierung durch SQL-CREATE SCHEMA, SQL-CREATE TABLE,
 SQL-CREATE VIEW und weitere SQL-CREATE Befehle.
 Weiterhin sollte auch das Löschen dieser Objekte möglich sein, dies wird
 durch SQL-DROP realisiert.
\end_layout

\begin_deeper
\begin_layout Itemize
Beispiele: 
\end_layout

\begin_deeper
\begin_layout Itemize
CREATE SCHEMA internal AUTHORIZATION admin
\end_layout

\begin_layout Itemize
CREATE TABLE tdept (deptno CHAR(3) NOT NULL, deptname VARCHAR(36) NOT NULL,
 mgrno CHAR(6), admrdept CHAR(3) NOT NULL, PRIMARY KEY(deptno)) IN internal
 
\end_layout

\begin_layout Itemize
CREATE VIEW internal.departmentView AS 
\begin_inset Newline newline
\end_inset

SELECT deptno, deptname FROM internal.tdept
\end_layout

\begin_layout Itemize
DROP SCHEMA internal
\end_layout

\begin_layout Itemize
DROP TABLE tdept
\end_layout

\begin_layout Itemize
DROP VIEW internal.departmentView
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Stored Procedure Pattern: Realisierung durch SQL-CALL.
\end_layout

\begin_deeper
\begin_layout Itemize
Beispiele:
\end_layout

\begin_deeper
\begin_layout Itemize
CALL parts_on_hand (?,?,?) 
\shape italic
(? = Parameter der Prozedur)
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Set Retrieval Pattern: Realisierung durch die Definition und Bereitstellung
 einer entsprechenden BPEL-Aktivität.
 Diese Aktivität liefert dann die Möglichkeit, dass durch einen SQL-SELECT
 Befehl abgefragte Daten (siehe Query Pattern) in den BPEL-Prozess geladen
 und in einer entsprechenden BPEL-Variable ablegt werden können.
 Dazu müssen neue Variablentypen bereitgestellt werden, die den Strukturen
 der zu haltenden Daten entsprechen, also mengenartige Daten halten können.
 Die Daten werden dazu über die 
\emph on
Service Data Objects API
\emph default
 (SDO API) abstrahiert.
 Wie in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

 beschrieben, wurde dieses Konzept bereits durch die 
\emph on
Business Integration Suite
\emph default
 und dem darin enthaltenen 
\emph on
WebSphere Integration Developer
\emph default
 mit der Bezeichnung 
\emph on

\begin_inset Quotes eld
\end_inset

Retrieve Set Activity
\begin_inset Quotes erd
\end_inset


\emph default
 realisiert.
 Dabei werden in einer Retrieve Set Activity externe Daten in eine XML-Struktur
 innerhalb des BPEL-Prozesses geladen, eine etwas ausführlichere Beschreibung
 liefert 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

.
\end_layout

\begin_layout Itemize
Set Access Pattern: Um das Set Access Pattern zu realisieren, müssen im
 Projektverlauf Methoden, die eine sequentielle und direkte Bearbeitung
 des durch eine RetrieveData Aktivität erzeugten Datencaches, bereitgestellt
 werden.
 D.h.
 konkret, dass es möglich sein muss, mit den definierten Variablen und deren
 Typen innerhalb von BPEL zu arbeiten.
 Die SDO API liefert dafür bereits einige Methoden, die verwendet werden
 können.
 Es muss weiterhin möglich sein, dass entsprechende Variablen auch in BPEL-Aktiv
itäten, wie z.B.
 einer ForEach Activity, verwendet werden können.
\end_layout

\begin_layout Itemize
Tuple IUD Pattern: Erweitert die Set Access Pattern Methoden um die Möglichkeite
n, Tupel innerhalb der mengenorientierten Datenstruktur im BPEL-Prozess
 zu aktualisieren, einzufügen und zu löschen.
 Die SDO API liefert dafür bereits einige Methoden, die verwendet werden
 können.
 
\end_layout

\begin_layout Itemize
Synchronization Pattern: Um die Daten aus dem Prozesscache zurück auf die
 originale Datenbank zu übertragen, muss ebenfalls eine neue BPEL-Aktivität
 erstellt werden, durch die der Benutzer angibt, dass die Daten zurückgeschriebe
n werden sollen.
 Diese Aktivität nutzt dann intern die im Set IUD Pattern und Set Access
 Pattern beschriebenen Methoden und ebenso SQL-Befehle um die Daten aus
 dem Prozesscache auf die Datenbank zu übertragen.
 Die SDO API und die DAS API liefern dafür bereits einige Methoden, die
 verwendet werden können.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
NEUE BPEL-AKTIVITÄT: Namensvorschlag => WriteBack Activity
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
XML-Datenbanken
\end_layout

\begin_layout Standard
Hier wird die Umsetzung der in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Datenmanagement-Patterns"

\end_inset

 beschriebenen Patterns im Bereich der XQuery-Datenbanken durch bestehende
 XQuery-Befehle oder, falls erforderlich, durch die Definition neuer zu
 implementierender Funktionen beschrieben.
\end_layout

\begin_layout Itemize
Query Pattern: Realisierung durch entsprechende FLWOR-XQuery-Befehle.
\end_layout

\begin_layout Itemize
Beispiel:
\end_layout

\begin_deeper
\begin_layout Itemize
FOR $d IN $doc/books/book RETURN {$d/title/text}
\end_layout

\end_deeper
\begin_layout Itemize
Tree IUD Pattern: Realisierung durch entsprechende XQuery-Befehle.
\end_layout

\begin_deeper
\begin_layout Itemize
Beispiele:
\end_layout

\begin_deeper
\begin_layout Itemize
INSERT NODE <year>2005</year> AFTER fn:doc("bib.xml")/books/book[1]/publisher
\end_layout

\begin_layout Itemize
REPLACE NODE fn:doc("bib.xml")/books/book[1]/publisher WITH 
\begin_inset Newline newline
\end_inset

fn:doc("bib.xml")/books/book[2]/publisher 
\end_layout

\begin_layout Itemize
RENAME NODE fn:doc("bib.xml")/books/book[1]/author[1] AS "principal-author"
\end_layout

\begin_layout Itemize
DELETE NODE fn:doc("bib.xml")/books/book[1]/author[last()]
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Node IUD Pattern: Realisierung durch entsprechende XQuery-Befehle.
\end_layout

\begin_deeper
\begin_layout Itemize
Beispiel:
\end_layout

\begin_deeper
\begin_layout Itemize
REPLACE VALUE OF NODE fn:doc("bib.xml")/books/book[1]/price WITH 
\begin_inset Newline newline
\end_inset

fn:doc("bib.xml")/books/book[1]/price * 1.1
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Data Setup Pattern: Wird erst in einer späteren Iteration realisiert.
\end_layout

\begin_layout Itemize
Stored Procedure Pattern: Wird erst in einer späteren Iteration realisiert.
\end_layout

\begin_layout Itemize
Tree Retrieval Pattern: Wird erst in einer späteren Iteration realisiert.
\end_layout

\begin_layout Itemize
Tree Access Pattern: Wird erst in einer späteren Iteration realisiert.
\end_layout

\begin_layout Itemize
Node IUD Pattern: Wird erst in einer späteren Iteration realisiert.
\end_layout

\begin_layout Itemize
Synchronization Pattern: Wird erst in einer späteren Iteration realisiert.
\end_layout

\begin_layout Subsubsection*
Dateisysteme
\end_layout

\begin_layout Standard
Hier wird die Umsetzung der in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Datenmanagement-Patterns"

\end_inset

 beschriebenen Patterns im Bereich der Dateisysteme durch entsprechende
 Systemaufrufe des dem Dateisystem zugrundeliegenden Betriebssystems beschrieben.
\end_layout

\begin_layout Itemize
Query Pattern: Realisierung durch einen GET-Befehl, der intern java.io Methoden
 verwendet, um Inhalte aus Dateien oder komplette Dateien aus einem Dateisystem
 zu lesen.
 Für das Abfragen von Dateiinhalten muss noch ein Konzept erarbeitet werden,
 wie entsprechende Daten gezielt über einen Befehl ausgewählt und abgefragt
 werden können.
 Eine Möglichkeit wäre z.B.
 einen Filter-Dialog zur Angabe von Suchparametern über die GUI bereitzustellen,
 der es ermöglicht Dateiinhalte zu suchen und zurückzugeben.
\end_layout

\begin_layout Itemize
File IUD Pattern: Realisierung durch einen entsprechenden PUT- und REMOVE-Befehl
 (RM), die intern java.io Methoden verwenden, um Inhalt in Dateien zu schreiben
 und aus ihnen zu löschen.
 Ein Update wird bei Dateien intern durch das Löschen des alten Wertes und
 anschließendem Einfügen des neuen Wertes ausgeführt.
 Dafür muss noch ein Konzept erarbeitet werden, wie entsprechende Informationen
 gezielt über einen Befehl eingefügt und gelöscht werden können.
\end_layout

\begin_layout Itemize
Data IUD Pattern: Wird erst in einer späteren Iteration realisiert.
\end_layout

\begin_layout Itemize
Data Setup Pattern: Realisierung durch die Verwendung entsprechender Erzeugungsb
efehle, wie MKDIR und MKFILE zur Erzeugung von Ordnern und Dateien.
 Diese werden intern wieder durch java.io-Methoden realisiert.
 Hier sollte es auf jeden Fall möglich sein, Dateien und Ordner in einem
 Dateisystem zu erzeugen.
 Ebenso sollte das Löschen auf der gleichen Ebene, d.h.
 von ganzen Dateien und Ordnern, möglich sein.
\end_layout

\begin_layout Itemize
Stored Procedure Pattern: Wird nur eventuell in einer späteren Iteration
 umgesetzt.
 Eine Realisierung wäre z.B.
 über den Aufruf von auf dem Dateisystem hinterlegten Batch-Dateien denkbar.
\end_layout

\begin_layout Itemize
File Retrieval Pattern: Realisierung durch die Definition und Bereitstellung
 einer entsprechenden BPEL-Aktivität.
 Diese Aktivität liefert dann die Möglichkeit, dass durch einen GET-Befehl
 abgefragte Daten (siehe Query Pattern) in den BPEL-Prozess geladen und
 in einer entsprechenden BPEL-Variable ablegt werden können.
 Dazu müssen neue Variablentypen bereitgestellt werden, die den Strukturen
 der zu haltenden Daten entsprechen.
 Die Daten werden dazu über die 
\emph on
Service Data Objects API
\emph default
 (SDO API) abstrahiert.
 Wie in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

 beschrieben, wurde dieses Konzept bereits durch die 
\emph on
Business Integration Suite
\emph default
 und dem darin enthaltenen 
\emph on
WebSphere Integration Developer
\emph default
 mit der Bezeichnung 
\emph on

\begin_inset Quotes eld
\end_inset

Retrieve Set Activity
\begin_inset Quotes erd
\end_inset


\emph default
 für mengenorientierte Daten realisiert.
 Dabei werden in einer Retrieve Set Activity externe Daten in eine XML-Struktur
 innerhalb des BPEL-Prozesses geladen, eine etwas ausführlichere Beschreibung
 liefert 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

.
\end_layout

\begin_layout Itemize
File Access Pattern: Um das File Access Pattern zu realisieren, müssen im
 Projektverlauf Methoden, die eine sequentielle Bearbeitung des durch eine
 RetrieveData Aktivität erzeugten Datencaches, bereitgestellt werden.
 D.h.
 konkret, dass es möglich sein muss, mit den definierten Variablen und deren
 Typen innerhalb von BPEL zu arbeiten.
 Die SDO API liefert dafür bereits einige Methoden, die verwendet werden
 können.
 Es muss weiterhin möglich sein, dass entsprechende Variablen auch in BPEL-Aktiv
itäten, wie z.B.
 einer ForEach Activity, verwendet werden können.
\end_layout

\begin_layout Itemize
Data IUD Pattern: Erweitert die File Access Pattern Methoden um die Möglichkeite
n Werte innerhalb des Datencaches des BPEL-Prozesses zu aktualisieren, einzufüge
n und zu löschen.
 Die SDO API liefert dafür bereits einige Methoden, die verwendet werden
 können.
 
\end_layout

\begin_layout Itemize
Synchronization Pattern: Um die Daten aus dem Prozesscache zurück auf die
 originale Datenquelle zu übertragen, muss ebenfalls eine neue BPEL-Aktivität
 erstellt werden, durch die der Benutzer angibt, dass die Daten zurückgeschriebe
n werden sollen.
 Diese Aktivität nutzt dann intern die im Set IUD Pattern und Set Access
 Pattern beschriebenen Methoden um die Daten aus dem Prozesscache auf die
 Datenquelle zu übertragen.
 Die SDO API und die 
\emph on
Data Access Services API
\emph default
 (DAS API) liefern dafür bereits einige Methoden die verwendet werden können.
 Die Umsetzung dieses Patterns wird erst in einer späteren Iteration realisiert,
 da zuerst Erkentnisse im Bereich der Datenbanken gesammelt werden und mit
 diesen dann ein Ansatz für Dateisysteme erarbeitet wird.
\end_layout

\begin_layout Subsubsection*
\begin_inset CommandInset label
LatexCommand label
name "sub:Sensornetze"

\end_inset

Sensornetze
\end_layout

\begin_layout Standard
Hier wird die Umsetzung der in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Datenmanagement-Patterns"

\end_inset

 beschriebenen Patterns im Bereich der Sensornetze und deren Datenbanken
 durch bestehende sensornetzspezifische SQL-Befehle oder, falls erforderlich,
 durch die Definition neuer zu implementierender Funktionen beschrieben.
 Alle SQL-Befehlsbeispiele beziehen sich hier auf den SQL-Dialekt der Sensornetz
-Datenbank TinyDB (siehe 
\begin_inset CommandInset citation
LatexCommand cite
key "key-14"

\end_inset

).
\end_layout

\begin_layout Itemize
Query Pattern: Realisierung durch ein entsprechendes SQL-SELECT der Sensornetz-D
atenbank.
 Weiterhin besteht die Möglichkeit, sensornetzintern in einem Buffer Werte
 zwischenzuspeichern.
 Realisiert wird dies durch im Arbeitsspeicher von Sensoren (siehe Data
 Setup Pattern) erstellte Tabellen, die mit momentanen Sensorwerten gefüllt
 werden können, um später die Daten zeitversetzt abrufen zu können.
 Die gewünschten Werte werden dabei mit einem entsprechenden SQL-SELECT
 Befehl in den Buffer geschrieben.
\end_layout

\begin_deeper
\begin_layout Itemize
Befehlsstruktur: 
\end_layout

\begin_deeper
\begin_layout Itemize
SELECT select-list [FROM sensors] WHERE where-clause [GROUP BY gb-list [HAVING
 having-list]][TRIGGER ACTION command-name[(param)]] [EPOCH DURATION integer]
\end_layout

\begin_layout Itemize
Werte einfügen in Buffer-Tabelle: SELECT field1, field2, ...
 FROM sensors SAMPLE PERIOD x INTO name
\end_layout

\end_deeper
\begin_layout Itemize
Beispiele: 
\end_layout

\begin_deeper
\begin_layout Itemize
SELECT temp FROM sensors WHERE temp > thresh TRIGGER ACTION SetSnd(512)
 EPOCH DURATION 512
\end_layout

\begin_layout Itemize
SELECT field1, field2 SAMPLE PERIOD 100 FROM name (SELECT auf Buffer-Tabelle
 
\emph on
name
\emph default
)
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Data Setup Pattern: Es können Tabellen im Arbeitsspeicher der Sensoren erstellt
 werden, die dann Werte von Sensoren aufnehmen und halten können.
 Die Erstellung solcher Tabellen wird durch SQL-CREATE BUFFER und das Löschen
 des gesamten Buffers durch SQL-DROP realisiert.
\end_layout

\begin_deeper
\begin_layout Itemize
Eine Buffer-Tabelle erstellen: CREATE BUFFER name SIZE x ( field1 type,
 field2 type, ...
 )
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
Bemerkungen: 
\series bold
\emph default
x
\series default
\emph on
 ist die Anzahl der Zeilen, 
\series bold
type
\series default
 ist ein Datentyp aus der Menge {uint8, uint16, uint16, int8, int16, int32}
 und 
\series bold
field1
\series default
, 
\series bold
field2
\series default
, usw.
 sind Spaltennamen, die wie der Tabellenname jeweils 8 Zeichen lang sein
 dürfen.
\end_layout

\end_deeper
\begin_layout Itemize
Alle Buffer-Tabellen löschen: DROP ALL
\end_layout

\end_deeper
\begin_layout Itemize
Stored Procedure Pattern: Es gibt für die TinyDB einen Stored Procedure-ähnliche
n Ansatz.
 Dabei können, falls eine bestimmte Bedingung gilt (z.B.
 Temperatur > 20°C), sogenannte 
\emph on
commands 
\emph default
aufgerufen werden.
 Der Code für diese Methoden wird auf die entsprechenden Sensoren übertragen
 und dort dann bei Bedarf ausgeführt.
 Ein Zugriff von außerhalb wie bei Stored Procedures ist hier allerdings
 nicht möglich.
\end_layout

\begin_deeper
\begin_layout Itemize
Beispiele:
\end_layout

\begin_deeper
\begin_layout Itemize
SELECT temp FROM sensors WHERE temp > thresh TRIGGER ACTION SetSnd(512)
 EPOCH DURATION 512
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
Bemerkungen: Hier wird alle 512ms die Temperatur an den Sensoren abgefragt
 und falls diese einen gewissen Wert übersteigt, wird über den 
\series bold
command
\series default
 SetSnd(512) für 512ms ein Signalton ausgegeben.
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Itemize
Set Retrieval Pattern: Realisierung ebenso wie bei SQL-Datenbanken beschrieben.
\end_layout

\begin_layout Itemize
Set Access Pattern: Realisierung ebenso wie bei SQL-Datenbanken beschrieben.
\end_layout

\begin_layout Itemize
Tuple IUD Pattern: Realisierung ebenso wie bei SQL-Datenbanken beschrieben.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Resultierende-BPEL-Aktivitäten"

\end_inset

Resultierende BPEL-Aktivitäten
\begin_inset Note Note
status open

\begin_layout Plain Layout
BPEL-Aktivitäten Code ausformulieren vor Abgabe Iter2!
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In diesem Abschnitt werden die durch Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Umsetzung-der-Datenmanagement"

\end_inset

 identifizierten BPEL-Aktivitäten aufgezählt und ihre Funktion noch einmal
 kurz beschrieben.
 Dazu gehört z.B.
 auch, welche Attribute welchen Typs für die einzelnen Aktivitäten benötigt
 werden.
 Generell gilt, dass alle Aktivitäten mindestens die vier Variablen 
\emph on
type
\emph default
, 
\emph on
kind
\emph default
, 
\emph on
dsAddress
\emph default
 und
\emph on
 statement
\emph default
 vom Typ String besitzen.
 Die Variable 
\emph on
type
\emph default
 dient zur Angabe des Datenquellentyps, für den die Aktivität ausgeführt
 wird, also ob es sich um ein Dateisystem, eine Datenbank oder ein Sensornetz
 handelt.
 Die Variable 
\emph on
kind
\emph default
 dient zur Angabe der Datenquellenart, d.h.
 um was für ein Dateisystem, was für eine Datenbank oder welche Art von
 Sensornetz es sich handelt.
 Diese Informationen sind wichtig, um intern den richtigen SQL-Dialekt bzw.
 Befehlssatz für die entsprechende Datenquelle auszuwählen.
 Die Variable 
\emph on
dsAddress
\emph default
 dient zur Angabe der Datenquellenadresse und die Variable 
\emph on
statement 
\emph default
zur Haltung des entsprechenden Systemaufrufs bzw.
 SQL- oder XQuery-Befehls, der ausgeführt werden soll.
 Da jede der definierten Aktivitäten diese vier Variablen besitzt, werden
 diese nachfolgend nicht mehr angegeben und nur falls benötigt weitere aktivität
sspezifische Variablen beschrieben.
 Weiterhin werden die verschiedenen Ausprägungen der einzelnen Aktivitäten
 im Hinblick auf die zugrundeliegende Datenquelle aufgezeigt, so dass am
 Ende ein vollständiger Überblick aller definierten Aktivitäten und ihrer
 Ausprägungen vorliegt.
 Generell gibt es durch die verschiedenen Datenquellen nur wenige strukturelle
 Unterschiede in den Aktivitäten.
 Das liegt vor allem daran, dass auf datenquellenspezifische Eigenschaften
 bereits in der graphischen Oberfläche, also dem Eclipse BPEL Designer,
 eingegangen werden soll und diese so durch entsprechende Dialoge intern
 immer auf dieselbe Struktur abgebildet werden können.
 Eben dazu sollen alle Befehle auch über entsprechende graphische Elemente
 angegeben werden können, indem sie einfach 
\begin_inset Quotes eld
\end_inset

zusammengeklickt
\begin_inset Quotes erd
\end_inset

 werden können (siehe Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Eigenschaftsfenster-einer-Data-Management-Aktivität"

\end_inset

).
 Dadurch soll eine einfachere Handhabung realisiert werden, damit der Benutzer
 schnellstmöglich ohne detaillierte Kenntnisse der Abfragesprache alle zur
 Verfügung gestellten Daten- und Datenquellenbefehle für alle unterstützten
 Datenquellen ausführen kann.
 Trotz der Einschränkungen, die ohne Zweifel durch die grafische Erstellung
 der Befehle bestehen, steht dem Benutzer der volle Sprachumfang der jeweiligen
 Datenquellensprache bzw.
 der vollständige Befehlssatz der Datenquelle zur Verfügung.
 Der volle Sprachumfang kann dabei mindestens, wie in Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Eigenschaftsfenster-einer-Data-Management-Aktivität"

\end_inset

 dargestellt, über die Angabe von Befehlen im 
\begin_inset Quotes eld
\end_inset

Resulting statement
\begin_inset Quotes erd
\end_inset

-Textfeld genutzt werden.
\end_layout

\begin_layout Standard
Nachfolgend werden alle, durch die Abschnitte 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Datenmanagement-Patterns"

\end_inset

 und 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Umsetzung-der-Datenmanagement"

\end_inset

 identifizierten, Aktivtäten aufgezeigt und beschrieben.
 Dabei werden in den Listings der DM-Aktivitäten die in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

 beschriebenen Notationen und Definitionen verwendet.
 Die Schemata der DM-Aktivitäten werden im Verlauf der 1.Iteration vervollständig
t.
\end_layout

\begin_layout Subsubsection*
Query Aktivität
\end_layout

\begin_layout Standard
Diese Aktivität ermöglicht es, aus jeder beliebigen Datenquelle Daten zu
 lesen.
 Weitere spezifische Attribute werden dafür nicht benötigt.
 Die Query Aktivität ist für alle Datenquellen gleich strukturiert, und
 nur die entsprechenden Query-Befehle unterscheiden sich je nach Datenquelle.
 Diese Aktivität wird auch für das sensornetzinterne Einfügen von Sensordaten
 in Buffer-Tabellen genutzt (wie auch in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Sensornetze"

\end_inset

 beschrieben).
 Listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "lst:Query Aktivität"

\end_inset

 zeigt das BPEL-Schema einer Query Aktivität mit der in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

 definierten Notation.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "basicstyle={\small\ttfamily},captionpos=b,frame=single,tabsize=4,xleftmargin=3cm,xrightmargin=3cm"
inline false
status open

\begin_layout Plain Layout

<extensionActivity>
\end_layout

\begin_layout Plain Layout

	<queryActivity standard-attributes>
\end_layout

\begin_layout Plain Layout

		
\end_layout

\begin_layout Plain Layout

		standard-elements
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	</queryActivity> 
\end_layout

\begin_layout Plain Layout

</extensionActivity>
\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lst:Query Aktivität"

\end_inset

Schema einer Query Aktivität
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Insert Aktivität
\end_layout

\begin_layout Standard
Diese Aktivität ermöglicht es, Daten in eine Datenquelle einzufügen.
 Listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "lst:Insert Aktivität"

\end_inset

 zeigt das BPEL-Schema einer Insert Aktivität mit der in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

 definierten Notation.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "basicstyle={\small\ttfamily},captionpos=b,frame=single,tabsize=4,xleftmargin=3cm,xrightmargin=3cm"
inline false
status open

\begin_layout Plain Layout

<extensionActivity>
\end_layout

\begin_layout Plain Layout

	<insertActivity standard-attributes>
\end_layout

\begin_layout Plain Layout

		
\end_layout

\begin_layout Plain Layout

		standard-elements
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	</insertActivity> 
\end_layout

\begin_layout Plain Layout

</extensionActivity>
\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lst:Insert Aktivität"

\end_inset

Schema einer Insert Aktivität
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Update Aktivität
\end_layout

\begin_layout Standard
Diese Aktivität ermöglicht es, auf einer Datenquelle hinterlegte Daten durch
 aktuellere externe Daten zu ersetzen.
 Diese Aktivität kann nicht auf Sensornetze angewendet werden.
 Listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "lst:Insert Aktivität"

\end_inset

 zeigt das BPEL-Schema einer Update Aktivität mit der in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

 definierten Notation.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "basicstyle={\small\ttfamily},captionpos=b,frame=single,tabsize=4,xleftmargin=3cm,xrightmargin=3cm"
inline false
status open

\begin_layout Plain Layout

<extensionActivity>
\end_layout

\begin_layout Plain Layout

	<updateActivity standard-attributes>
\end_layout

\begin_layout Plain Layout

		
\end_layout

\begin_layout Plain Layout

		standard-elements
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	</updateActivity> 
\end_layout

\begin_layout Plain Layout

</extensionActivity>
\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lst:Update Aktivität"

\end_inset

Schema einer Update Aktivität
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Delete Aktivität
\end_layout

\begin_layout Standard
Diese Aktivität ermöglicht es, Daten in Datenquellen zu löschen.
 Diese Aktivität kann nicht auf Sensornetze angewendet werden.
 Listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "lst:Delete Aktivität"

\end_inset

 zeigt das BPEL-Schema einer Delete Aktivität mit der in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

 definierten Notation.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "basicstyle={\small\ttfamily},captionpos=b,frame=single,tabsize=4,xleftmargin=3cm,xrightmargin=3cm"
inline false
status open

\begin_layout Plain Layout

<extensionActivity>
\end_layout

\begin_layout Plain Layout

	<deleteActivity standard-attributes>
\end_layout

\begin_layout Plain Layout

		
\end_layout

\begin_layout Plain Layout

		standard-elements
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	</deleteActivity> 
\end_layout

\begin_layout Plain Layout

</extensionActivity>
\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lst:Delete Aktivität"

\end_inset

Schema einer Delete Aktivität
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Create Aktivität
\end_layout

\begin_layout Standard
Diese Aktivität ermöglicht es, Zuordnungseinheiten (Dateien, Ordner, Tabellen,
 Schemata, usw.) auf beliebigen Datenquellen zu erstellen.
 Dabei werden die folgenden Befehle zur Erstellung von Zuordnungseinheiten
 auf den entsprechenden Datenquellen unterstützt:
\end_layout

\begin_layout Itemize
Dateisysteme
\end_layout

\begin_deeper
\begin_layout Itemize
MKDIR FOLDER
\end_layout

\begin_layout Itemize
MKFILE FILE
\end_layout

\end_deeper
\begin_layout Itemize
Datenbanken
\end_layout

\begin_deeper
\begin_layout Itemize
CREATE TABLE
\end_layout

\begin_layout Itemize
CREATE SCHEMA
\end_layout

\begin_layout Itemize
CREATE VIEW
\end_layout

\begin_layout Itemize
optional:
\end_layout

\begin_deeper
\begin_layout Itemize
CREATE DOMAIN
\end_layout

\begin_layout Itemize
CREATE INDEX 
\end_layout

\begin_layout Itemize
CREATE TRIGGER
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Sensornetze
\end_layout

\begin_deeper
\begin_layout Itemize
CREATE BUFFER
\end_layout

\end_deeper
\begin_layout Standard
Listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "lst:Create Aktivität"

\end_inset

 zeigt das BPEL-Schema einer Create Aktivität mit der in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

 definierten Notation.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "basicstyle={\small\ttfamily},captionpos=b,frame=single,tabsize=4,xleftmargin=3cm,xrightmargin=3cm"
inline false
status open

\begin_layout Plain Layout

<extensionActivity>
\end_layout

\begin_layout Plain Layout

	<createActivity standard-attributes>
\end_layout

\begin_layout Plain Layout

		
\end_layout

\begin_layout Plain Layout

		standard-elements
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	</createActivity> 
\end_layout

\begin_layout Plain Layout

</extensionActivity>
\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lst:Create Aktivität"

\end_inset

Schema einer Create Aktivität
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Call Aktivität
\end_layout

\begin_layout Standard
Diese Aktivität ermöglicht es auf der Datenquelle hinterlegte Prozeduren
 auszuführen.
 Diese Aktivität kann vorerst nur für Datenbanken verwendet werden.
 Listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "lst:Call Aktivität"

\end_inset

 zeigt das BPEL-Schema einer Call Aktivität mit der in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

 definierten Notation.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "basicstyle={\small\ttfamily},captionpos=b,frame=single,tabsize=4,xleftmargin=3cm,xrightmargin=3cm"
inline false
status open

\begin_layout Plain Layout

<extensionActivity>
\end_layout

\begin_layout Plain Layout

	<callActivity standard-attributes>
\end_layout

\begin_layout Plain Layout

		
\end_layout

\begin_layout Plain Layout

		standard-elements
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	</callActivity> 
\end_layout

\begin_layout Plain Layout

</extensionActivity>
\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lst:Call Aktivität"

\end_inset

Schema einer Call Aktivität
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
RetrieveData Aktivität
\end_layout

\begin_layout Standard
Diese Aktivität ermöglicht es, Daten von Datenquellen in den BPEL-Prozess
 zu laden.
 Listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "lst:RetrieveData Aktivität"

\end_inset

 zeigt das BPEL-Schema einer RetrieveData Aktivität mit der in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

 definierten Notation.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "basicstyle={\small\ttfamily},captionpos=b,frame=single,tabsize=4,xleftmargin=3cm,xrightmargin=3cm"
inline false
status open

\begin_layout Plain Layout

<extensionActivity>
\end_layout

\begin_layout Plain Layout

	<retrieveDataActivity standard-attributes>
\end_layout

\begin_layout Plain Layout

		
\end_layout

\begin_layout Plain Layout

		standard-elements
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	</retrieveDataActivity> 
\end_layout

\begin_layout Plain Layout

</extensionActivity>
\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lst:RetrieveData Aktivität"

\end_inset

Schema einer RetrieveData Aktivität
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*

\series bold
Drop Aktivität
\end_layout

\begin_layout Standard
Diese Aktivität ermöglicht es Zuordnungseinheiten auf beliebigen Datenquellen
 zu löschen.
 Dazu werden die folgenden Befehle unterstützt:
\end_layout

\begin_layout Itemize
Dateisysteme
\end_layout

\begin_deeper
\begin_layout Itemize
RMDIR FOLDER
\end_layout

\begin_layout Itemize
RM FILE
\end_layout

\end_deeper
\begin_layout Itemize
Datenbanken
\end_layout

\begin_deeper
\begin_layout Itemize
DROP TABLE
\end_layout

\begin_layout Itemize
DROP SCHEMA
\end_layout

\begin_layout Itemize
DROP VIEW
\end_layout

\begin_layout Itemize
optional:
\end_layout

\begin_deeper
\begin_layout Itemize
DROP DOMAIN
\end_layout

\begin_layout Itemize
DROP INDEX 
\end_layout

\begin_layout Itemize
DROP TRIGGER
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Sensornetze
\end_layout

\begin_deeper
\begin_layout Itemize
DROP ALL
\end_layout

\end_deeper
\begin_layout Standard
Listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "lst:Drop Aktivität"

\end_inset

 zeigt das BPEL-Schema einer Drop Aktivität mit der in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

 definierten Notation.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "basicstyle={\small\ttfamily},captionpos=b,frame=single,tabsize=4,xleftmargin=3cm,xrightmargin=3cm"
inline false
status open

\begin_layout Plain Layout

<extensionActivity>
\end_layout

\begin_layout Plain Layout

	<dropActivity standard-attributes>
\end_layout

\begin_layout Plain Layout

		
\end_layout

\begin_layout Plain Layout

		standard-elements
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	</dropActivity> 
\end_layout

\begin_layout Plain Layout

</extensionActivity>
\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lst:Drop Aktivität"

\end_inset

Schema einer Drop Aktivität
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Optionale Aktivitäten:
\end_layout

\begin_layout Itemize

\series bold
Import Aktivität
\series default
: Diese Aktivität ermöglicht es, lokale Daten (z.B.
 Simulationsparameter) des Benutzers in einen Prozess einzubinden und in
 diesem zu verwenden.
\end_layout

\begin_layout Itemize

\series bold
Export Aktivität
\series default
: Diese Aktivität ermöglicht es, Daten eines Prozesses (z.B.
 Simulationsergebnisse) lokal auf den Benutzer-Rechner zu exportieren.
\end_layout

\begin_layout Itemize

\series bold
Move Aktivität
\series default
: Diese Aktivität ermöglicht es, Daten zwischen beliebigen Datenquellen
 zu kopieren/verschieben, d.h.
 es können beispielsweise Daten aus einer Datei in eine Datenbank-Tabelle
 verschoben/kopiert werden.
\end_layout

\begin_layout Itemize

\series bold
WriteBack Aktivität:
\series default
 Diese Aktivität ermöglicht es, Daten aus dem BPEL-Prozess auf die originale
 Datenquelle zurückzuschreiben.
 Diese Aktivität existiert nicht für Sensornetze.
\end_layout

\begin_layout Itemize

\series bold
Alter Aktivität:
\series default
 Diese Aktivität ermöglicht es, bereits bestehende Zuordnungseinheiten (Tabellen
, Schemata, usw.) nachträglich gezielt zu verändern und an veränderte Anforderung
en anzupassen.
 Es ist z.B.
 möglich in eine Tabelle neue Spalten einzufügen, bestehende Spalten neu
 zu benennen oder zu löschen.
\end_layout

\begin_layout Standard
In Tabelle 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:ResultierendeAktivitäten"

\end_inset

 werden nocheinmal alle resultierenden DM-Aktivitäten und ihre Verwendbarkeit
 im Bezug auf die verschiedenen Datenquellen aufgezeigt.
 Dabei steht ein 
\begin_inset Quotes eld
\end_inset

x
\begin_inset Quotes erd
\end_inset

 für die vollständige Anwendbarkeit einer Aktivität auf eine Datenquelle,
 
\begin_inset Quotes eld
\end_inset

(x)
\begin_inset Quotes erd
\end_inset

 steht für die teilweise Verwendbarkeit (z.B.
 in einer Move Aktivität können Sensornetze nur als Quelle nicht als Ziel
 angegeben werden) bzw.
 dass eventuell erst in einer späteren Iterationen diese Aktivität auf eine
 Datenquelle angewendet werden kann.
 Ein 
\begin_inset Quotes eld
\end_inset

-
\begin_inset Quotes erd
\end_inset

 steht dafür, dass eine Aktivität nicht mit einer entsprechenden Datenquelle
 verwendet werden kann.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:ResultierendeAktivitäten"

\end_inset

Übersicht der resultierenden Aktivitäten und ihrer Anwendbarkeit auf verschieden
e Datenquellen
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="5">
<features>
<column alignment="center" valignment="top" width="3cm">
<column alignment="center" valignment="top" width="2cm">
<column alignment="center" valignment="top" width="2cm">
<column alignment="center" valignment="top" width="3cm">
<column alignment="center" valignment="top" width="4cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aktivität
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RDB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
XML-DB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dateisysteme
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sensornetze (TinyDB)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Query Aktivität
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Insert Aktivität
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Update Aktivität
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Delete Aktivität
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Create Aktivität
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Call Aktivität
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RetrieveData Aktivität
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Drop Aktivität
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Import Aktivität
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Export Aktivität
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Move Aktivität
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(x)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
WriteBack Aktivität
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(x)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alter Aktivität
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Authentifizierung-und-Autorisierung"

\end_inset

Authentifizierung und Autorisierung
\end_layout

\begin_layout Standard
Dieser Abschnitt behandelt die Authentifizierung und Autorisierung bei dem
 Zugriff auf Datenquellen und die dabei eingesetzten Technologien und Konzepte.
 Bei beiden Verfahren handelt es sich um Verfahren auf Seite der Datenquellen,
 d.h.
 es findet keine Autorisierung und Authentifizierung der Benutzer innerhalb
 eines Prozesses statt.
 Das Rahmenwerk bietet dem Benutzer lediglich die Möglichkeit benötigte
 Authentifizierung- und Autorisierungsinformationen bereitzustellen und
 ggf.
 Zwischenzuspeichern.
 Ziel des Rahmenwerks ist es, eine Vielzahl an Authentifizierungs- und Autorisie
rung-Verfahren zu unterstützen und für weitere Verfahren erweiterbar zu
 sein.
\end_layout

\begin_layout Subsubsection
Authentifizierung
\end_layout

\begin_layout Standard
Bei der Authentifizierung wird vor dem eigentlichen Zugriff zunächst ein
 Vertrauensverhältnis zwischen Benutzer und Datenquelle hergestellt.
 Je nach Verfahren wird dabei das Vertrauen einseitig oder auch beidseitig
 hergestellt.
 Für das Rahmenwerk soll dabei das Konzept des Single Sign On (SSO) angewendet
 werden, das nach einer erfolgreich durchgeführten Authentifizierung verhindert,
 dass bei weiteren Zugriffen eine erneute Authentifizierung durchgeführt
 werden muss.
 Unabhängig von der Realisierung, soll das für den Benutzer auch bedeuten,
 dass die Authentifizierungsinformationen nicht in jeder DM-Aktivität zu
 einer Datenquelle redundant angegeben werden müssen.
\end_layout

\begin_layout Subsubsection*
Benutzername und Passwort
\end_layout

\begin_layout Standard
Benutzername und Passwort können in der ersten Iteration zunächst nur in
 den Globalen Einstellungen (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Globale-Einstellungen"

\end_inset

) für alle Datenquellen festgelegt werden.
\end_layout

\begin_layout Subsubsection
Autorisierung
\end_layout

\begin_layout Standard
Eine Autorisierung findet meist nach einer erfolgreichen Authentifizierung
 statt und überprüft, ob die Operation eines Zugriffs berechtigt ist.
 Dazu werden Zugriffsrechte überprüft, die als Regeln formuliert auf Seite
 der Datenquellen verwaltet werden.
 In der ersten Iteration wird lediglich die Autorisierung über den Benutzernamen
 unterstützt.
\end_layout

\begin_layout Subsubsection*
Benutzername
\end_layout

\begin_layout Standard
Wird durch die Authentifizierung durch Benutzername und Passwort unterstützt.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Sollen wir wenn es geht Autorisierunginformationen abrufen und die Autorisierung
 auf SIMPL Seite durchführen, um dem Benutzer zB bestimmte Operationen erst
 gar nicht zur Auswahl zu stellen? Oder einfach zulassen und auf einen Fehler
 warten?
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Transaktionen 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Einige Sätze zur Umsetzung und Unterstützung eines Transaktionskonzepts.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Auditing
\end_layout

\begin_layout Standard
In diesem Abschnitt wird eine Beschreibung des geplanten Auditing von SIMPL
 gegeben.
 Dazu wird zunächst auf das bestehende Monitoring von ODE eingegangen.
\end_layout

\begin_layout Subsubsection
Momentane Situation - Monitoring von ODE
\end_layout

\begin_layout Standard
Das Monitoring von ODE wird durch sogenannte Events und Event Listener sowie
 die Management API realisiert.
\end_layout

\begin_layout Subsubsection*
Management API
\end_layout

\begin_layout Standard
Die Management API der ODE Engine macht es möglich zahlreiche Informationen
 abzurufen.
 So ist es beispielsweies möglich, zu überprüfen, welche Prozesse gerade
 eingesetzt werden und welche Prozessinstanzen ausgeführt werden oder beendet
 sind.
 Dies ist besonders für das Monitoring wichtig, da es hierdurch möglich
 ist spezifische Informationen zu einem bestimmten Prozess oder einer bestimmten
 Instanz abzurufen.
 Dies kann zum Beispiel das Erstellungsdatum sein, eine Liste der Events,
 die für diesen Prozess oder diese Instanz generiert wurden und vieles mehr.
\end_layout

\begin_layout Subsubsection*
Events
\end_layout

\begin_layout Standard
Events sind Ereignisse, die auftreten, wenn bestimmte Aktionen innerhalb
 der ODE Engine durchgeführt werden.
 Zum Beispiel das Aktivieren eines Prozesses oder das Erzeugen einer neuen
 Prozessinstanz.
 Diese Events machen es möglich, zu verfolgen, was innerhalb der ODE Engine
 passiert und produzieren detailierte Informationen über die Prozessausführung.
 Sie können mit Hilfe der Management API abgefragt werden oder man nutzt
 Event Listener.
\end_layout

\begin_layout Subsubsection*
Event Listener
\end_layout

\begin_layout Standard
Event Listener sind bestimmte Konstrukte, die es ermöglichen bei Auftreten
 bestimmter Events eine direkte Rückmeldung zu geben oder auf verschiedene
 Events zu reagieren und event-spezifische Aktionen durchzuführen.
\end_layout

\begin_layout Subsubsection
Auditing von SIMPL
\end_layout

\begin_layout Standard
Im BPEL Designer ist der Zugriff auf das Auditing und die Auditingeinstellungen
 unter dem entsprechenden Menüpunkt möglich.
 Hier kommt man nun zum entsprechenden Interface, in dem sich verschiedene
 Einstellungen für das Auditing tätigen lassen (siehe Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Auditing-Einstellungen"

\end_inset

).
 Es ist möglich das Auditing zu aktivieren oder zu deaktivieren.
 Weiterhin ist möglich die Datenbank für das Speichern der Auditing Daten
 festzulegen.
 Das Auditing ist standardmäßig aktiviert, kann allerdings über die Adminkonsole
 deaktiviert und auch erneut aktiviert werden.
\end_layout

\begin_layout Standard
Für das Auditing von SIMPL werden die von ODE erzeugten Daten direkt an
 den SIMPL Core übergeben und weiterverarbeitet, anstatt diese wie bisher
 in der virtuellen Datenbank von ODE abzulegen.
 Die so erzeugten Daten über die Prozesse, Instanzen und Events werden anschließ
end in einer zuvor in der Adminkonsole festgelegten Auditing-Datenbank abgelegt.
\end_layout

\begin_layout Subsubsection
Event Modell
\end_layout

\begin_layout Standard
In diesem Unterabschnitt wird das Event Modell für das Auditing von SIMPL
 aufgeführt und erläutert.
 In Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Event-Modell-des-Auditings"

\end_inset

 ist das Event Modell für die Ausführung von DM-Aktivitäten zu sehen.
 Darin enthalten sind die verschiedenen WS-BPEL Events.
 Auf diesem Modell aufbauend wird analyisert welche Events in ODE hinzugefügt
 werden müssen.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename BPEL Event Modell DM-Aktivität Ablauf 2.jpg
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Event-Modell-des-Auditings"

\end_inset

Event-Modell für die Ausführung von DM-Aktivitäten
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Aus den Events im BPEL Event Modell der Ausführung folgt, dass zwei neue
 Event Klassen hinzugefügt werden müssen.
 Dies sind die Event Klassen Connection_Events und DM_Events.
 Jede dieser beiden Event Klassen verfügt über eine Anzahl von einzelnen
 Events, die nachfolgend genauer erläutert werden.
\end_layout

\begin_layout Paragraph
Connection_Events
\end_layout

\begin_layout Itemize
Connection_Failure_Event 
\end_layout

\begin_layout Itemize
Connection_Active_Event 
\end_layout

\begin_layout Itemize
Connection_Closed_Event 
\end_layout

\begin_layout Itemize
Connection_TimeOut_Event
\end_layout

\begin_layout Paragraph
DM_Events
\end_layout

\begin_layout Itemize
DM_Finished 
\end_layout

\begin_layout Itemize
DM_Started 
\end_layout

\begin_layout Itemize
DM_Failure
\end_layout

\begin_layout Standard
Dabei sind Connection_Events für Ereignisse bei der Verbindung zu einer
 Datenquelle zuständig.
 Wie die Namen der Events bereits zeigen, gibt es ein Event für:
\end_layout

\begin_layout Itemize
einen fehlgeschlagenen Verbindungsversuch
\end_layout

\begin_layout Itemize
einen erfoglreichen Verbindungsaufbau 
\end_layout

\begin_layout Itemize
das Beenden einer Verbindung zu einer Datenquelle 
\end_layout

\begin_layout Itemize
einen unerwarteten Abbruch der Verbindung
\end_layout

\begin_layout Standard
Die DM_Events sind für die Ereignisse einer DM-Aktivität zuständig.
 Hier wird nicht getrennt, um welche Art von DM-Aktivität es sich handelt.
 Für alle DM-Aktivitäten werden die selben Events erzeugt.
 Diese Events enthalten jeweils Informationen über den Namen und den Typ
 der Aktivität.
 Auch hier zeigen bereits die Namen an welche Events es gibt:
\end_layout

\begin_layout Itemize
die Ausführung einer DM-Aktivität wurde gestartet 
\end_layout

\begin_layout Itemize
die Ausführung einer DM-Aktivität wurde erfolgreich beendet 
\end_layout

\begin_layout Itemize
bei der Ausführung einer DM-Aktivität trat ein Fehler auf 
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Technologien und Werkzeuge"

\end_inset

Technologien und Werkzeuge
\end_layout

\begin_layout Standard
In diesem Kapitel folgt ein Überblick über die im Projekt verwendeten Technologi
en und Werkzeuge.
\end_layout

\begin_layout Subsection
Technologien
\end_layout

\begin_layout Standard
In der Entwicklung von SIMPL werden die folgenden Technologien zum Einsatz
 kommen:
\end_layout

\begin_layout Subsubsection*
Apache Axis2 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset


\end_layout

\begin_layout Standard
Axis2 ist eine SOAP-Engine zur Konstruktion von darauf basierenden Web Services
 und Client-Anwendungen.
\end_layout

\begin_layout Subsubsection*
Apache ODE 
\begin_inset CommandInset citation
LatexCommand cite
key "key-6"

\end_inset


\end_layout

\begin_layout Standard
Apache ODE ist eine BPEL-Workflow-Engine.
 Es wird sowohl WS-BPEL 2.0 als auch BPEL4WS 1.1 unterstützt, und die Ausführung
 von Prozessen in SOA ist möglich.
 Zudem ist ein Deployment von Prozessen zur Laufzeit (Hot Deployment) möglich,
 als auch die Analyse und Validierung von Prozessen.
\end_layout

\begin_layout Subsubsection*
Apache Tomcat 
\begin_inset CommandInset citation
LatexCommand cite
key "key-7"

\end_inset


\end_layout

\begin_layout Standard
Apache Tomcat ist ein Web Container für Web Services, der aber auch einen
 kompletten Webserver beinhaltet.
\end_layout

\begin_layout Subsubsection*
Apache Tuscany DAS 
\begin_inset CommandInset citation
LatexCommand cite
key "key-8"

\end_inset


\end_layout

\begin_layout Standard
Data Access Services ermöglichen den einheitlichen Zugriff auf Datenquellen,
 indem eine zentrale Schnittstelle für das Lesen und Schreiben von heterogenen
 Daten bereitgestellt wird.
 Die Daten werden dabei in Service Data Objects gekapselt und so von ihrer
 Quelle unabhängig gemacht.
\end_layout

\begin_layout Subsubsection*
Apache Tuscany SDO 
\begin_inset CommandInset citation
LatexCommand cite
key "key-9"

\end_inset


\end_layout

\begin_layout Standard
Service Data Objects stellen eine einheitliche API zur Verfügung, mit der
 die Handhabung verschiedener heterogener Daten und Datenquellen vereinfacht
 wird.
\end_layout

\begin_layout Subsubsection*
Eclipse BPEL Designer 
\begin_inset CommandInset citation
LatexCommand cite
key "key-10"

\end_inset


\end_layout

\begin_layout Standard
Der Eclipse BPEL Designer ist ein Eclipse Plugin für die Modellierung von
 BPEL-Prozessen.
 Er verfügt über eine leicht verständliche GUI und über eine Syntaxsprüfung
 für BPEL-Prozesse.
 Zudem bietet der Eclipse BPEL Designer, in Kombination mit Apache ODE,
 eine Schritt für Schritt Ausführung von Prozessen.
\end_layout

\begin_layout Subsubsection*
IBM-DB2 
\begin_inset CommandInset citation
LatexCommand cite
key "key-11"

\end_inset


\end_layout

\begin_layout Standard
Die IBM-DB2 ist ein Hybriddatenserver mit dem sowohl die Verwaltung von
 XML-Daten als auch von relationalen Daten möglich ist.
\end_layout

\begin_layout Subsubsection*
Java 6 
\begin_inset CommandInset citation
LatexCommand cite
key "key-12"

\end_inset


\end_layout

\begin_layout Standard
Java ist eine objektorientierte Programmiersprache der Firma Sun Microsystems,
 mit der sich plattformunabhängige Programme entwickeln lassen.
\end_layout

\begin_layout Subsubsection*
JAX-WS 
\begin_inset CommandInset citation
LatexCommand cite
key "key-13"

\end_inset


\end_layout

\begin_layout Standard
JAX-WS ist eine Java API zur Erstellung von Webservices, die für das Deployment
 Java Annotationen verwendet.
\end_layout

\begin_layout Subsubsection*
TinyDB 
\begin_inset CommandInset citation
LatexCommand cite
key "key-14"

\end_inset


\end_layout

\begin_layout Standard
TinyDB ist ein Datenbanksystem für Sensornetze und bietet eine SQL-ähnliche
 Schnittstelle.
\end_layout

\begin_layout Subsubsection*
Webservices
\end_layout

\begin_layout Standard
Webservices sind abgeschlossene Software-Einheiten, die sich selbst beschreiben
 und die ihre Dienste über ein Netzwerk, wie beispielsweise das Internet,
 bereitstellen.
 Damit werden verteilte Anwendungen möglich, die flexibel auf sich ändernde
 Anforderungen angepasst werden können.
 Die Schnittstellen von Webservices werden mit WSDL beschrieben und können
 damit unabhängig von Betriebssystem, Plattform und Programmiersprache verwendet
 werden.
\end_layout

\begin_layout Subsection
Werkzeuge
\end_layout

\begin_layout Standard
Es werden folgende Werkzeuge eingesetzt, um den Entwicklungsvorgang und
 die Dokumentation zu unterstützen:
\end_layout

\begin_layout Subsubsection*
Apache Maven 
\begin_inset CommandInset citation
LatexCommand cite
key "key-15"

\end_inset


\end_layout

\begin_layout Standard
Maven ist ein Projekt-Management-Tool zur standardisierten Erstellung und
 Verwaltung von Java-Programmen.
 Mit Maven ist es möglich viele Schritte, die die Entwickler normalerweise
 von Hand erledigen müssen, zu automatisieren.
\end_layout

\begin_layout Subsubsection*
Eclipse 
\begin_inset CommandInset citation
LatexCommand cite
key "key-16"

\end_inset


\end_layout

\begin_layout Standard
Eclipse ist eine IDE für Java und auch andere Programmiersprachen.
 Für SIMPL wird Eclipse in der Version 3.5 (Galileo) verwendet.
\end_layout

\begin_layout Subsubsection*
Hudson 
\begin_inset CommandInset citation
LatexCommand cite
key "key-17"

\end_inset


\end_layout

\begin_layout Standard
Hudson ist ein webbasiertes System zur kontinuierlichen Integration von
 Softwareprojekten.
\end_layout

\begin_layout Subsubsection*
LyX 
\begin_inset CommandInset citation
LatexCommand cite
key "key-18"

\end_inset


\end_layout

\begin_layout Standard
LyX ist ein Textverarbeitungsprogramm, mit dem es möglich ist, auf einfache
 Art und Weise LaTeX-Dokumente zu erstellen.
\end_layout

\begin_layout Subsubsection*
PDF-XChange Viewer 
\begin_inset CommandInset citation
LatexCommand cite
key "key-19"

\end_inset


\end_layout

\begin_layout Standard
Mit dem PDF-XChange Viewer lassen sich PDF-Dateien nicht nur öffnen, lesen
 und drucken, sondern zusätzlich Kommentare, Notizen und Markierungen vornehmen.
\end_layout

\begin_layout Subsubsection*
Subversion 
\begin_inset CommandInset citation
LatexCommand cite
key "key-20"

\end_inset


\end_layout

\begin_layout Standard
Subversion ist eine Software zur Versionskontrolle und eine Weiterentwicklung
 von CVS.
 Es wird genutzt um mehreren Nutzern den gleichzeitigen Zugriff und ein
 gleichzeitiges Bearbeiten von verschiedenen Dateien und Dokumenten zu ermöglich
en.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"

\end_inset

 SIMPL Angebot, Version 1.2, 25.September 2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"

\end_inset

 Vrhovnik, M.; Schwarz, H.; Radeschütz, S.; Mitschang, B.: An Overview of SQL
 Support in Workflow Products.
 In: Proc.
 of the 24th International Conference on Data Engineering (ICDE 2008), Cancún,
 México, April 7-12, 2008
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-3"

\end_inset

 Wieland, M.; Görlach, K.; Schumm, D.; Leymann, F.: Towards Reference Passing
 in Web Service and Workflow-based Applications.
 In: Proceedings of the 13th IEEE Enterprise Distributed Object Conference
 (EDOC 2009)
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"

\end_inset

W3C.
 Web Services Addressing 1.0 - Core, W3C Recommendation.
 http://www.w3.org/TR/ ws-addr-core/, 2006.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-4"

\end_inset

 Web Services Business Process Execution Language Version 2.0, http://docs.oasis-o
pen.org/wsbpel/2.0/wsbpel-v2.0.pdf, 15.10.2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-5"

\end_inset

 Axis2, http://ws.apache.org/axis2/, 17.10.2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-6"

\end_inset

 Apache ODE, http://ode.apache.org/, 17.10.2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-7"

\end_inset

 Apache Tomcat, http://tomcat.apache.org/, 17.10.2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-8"

\end_inset

 Apache Tuscany DAS, http://tuscany.apache.org/das-overview.html, 17.10.2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-9"

\end_inset

 Apache Tuscany SDO, http://tuscany.apache.org/sdo-overview.html, 17.10.2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-10"

\end_inset

 Eclipse BPEL Designer, http://www.eclipse.org/bpel/, 17.10.2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-11"

\end_inset

 IBM-DB2, http://www.ibm.com/db2/, 17.10.2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-12"

\end_inset

 Java 6, http://java.sun.com/, 17.10.2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-13"

\end_inset

 JAX-WS, https://jax-ws.dev.java.net/, 17.10.2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-14"

\end_inset

 TinyDB, http://telegraph.cs.berkeley.edu/tinydb/, 17.10.2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-15"

\end_inset

 Apache Maven, http://maven.apache.org/, 18.10.2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-16"

\end_inset

 Eclipse, http://www.eclipse.org/, 18.10.2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-17"

\end_inset

 Hudson, https://hudson.dev.java.net/, 18.10.2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-18"

\end_inset

 LyX, http://www.lyx.org/, 18.10.2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-19"

\end_inset

 PDF-XChange Viewer, http://pdf-xchange-viewer.softonic.de/, 18.10.2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-20"

\end_inset

 Subversion, http://subversion.tigris.org/, 18.10.2009
\end_layout

\begin_layout Standard

\series bold
\size larger
Abkürzungsverzeichnis
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="24" columns="2">
<features>
<column alignment="left" valignment="top" width="2cm">
<column alignment="left" valignment="top" width="6cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
API 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Application Programming Interface
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
BPEL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Business Process Execution Language
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DAS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Data Access Service(s)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DDL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Data Definition Language
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Data Management
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
EPR
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Endpoint Reference
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FLWOR
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FOR, LET, WHERE, ORDER, RETURN
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
IDE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Integrated Development Environment
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
IUD
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
INSERT, UPDATE, DELETE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ODE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Orchestration Director Engine
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RDB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Relational Data Base
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RRS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reference Resolution System
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SDO
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Service Data Object(s)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SIMPL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SimTech: Information Management, Processes and Languages
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SOAP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Simple Object Access Protocol
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SQL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Structured Query Language
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SSO
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Single Sign On
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UDDI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Universal Description, Discovery and Integration 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
URI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unified Resource Identifier
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
URL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unified Resource Locator
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
WS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Web Service
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
WSDL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Web Service Description Language
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
XML
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Extensible Markup Language
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
XQUERY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
XML Query Language
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\end_body
\end_document
