#LyX 1.6.3 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\begin_preamble





\usepackage{babel}

%Packages für eigen definierte Header und Footer
\usepackage{lastpage}
\usepackage{fancyhdr}

% doctitel = Titel des Dokuments
% docvers = Versionsnr.
% docautor = Author(en)
% docdate = Datum der letzten Änderung
\def\doctitel{Grobentwurf}
\def\docvers{1.0}
\def\docautor{Michael Schneidt}
\def\docdate{29. Oktober 2009}

% docstate = Status des Dokuments aus {neu, bearbeitet}
% qsstate = QS-Prüfungsstatus aus {positiv QS-geprüft, negativ QS-geprüft, verworfen}
% proofstate = Prüfungsstatus (durch Projektleiter) aus {positiv geprüft, negativ geprüft, verworfen}
% reviewstate = Annahmestatus des Reviews {kein Review durchgeführt, akzeptiert ohne Änderungen, akzeptiert mit Änderungen, nicht akzeptiert}
% endstate = Endstatus des Dokuments aus {freigegeben, verworfen}
\def\docstate{neu}
\def\qsstate{nicht QS-geprüft}
\def\proofstate{nicht geprüft}
\def\reviewstate{kein Review durchgeführt}
\def\endstate{-}

%Nicht einrücken
%\setlength{\parindent}{0pt}
\end_preamble
\use_default_options false
\language ngerman
\inputencoding latin9
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_amsmath 0
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 3cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "Deckblatt.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "DokStatus.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%Header und Footer Definitionen für alle anderen Seiten
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pagestyle
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

fancy
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset FormulaMacro
\renewcommand{\headrulewidth}{0mm}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
lhead
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
chead
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
rhead
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
lfoot
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\size small
SIMPL © 2009 $IMPL
\size default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
cfoot
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
rfoot
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\size small

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thepage
\end_layout

\end_inset


\begin_inset space \space{}
\end_inset

/ 
\begin_inset CommandInset ref
LatexCommand pageref
reference "LastPage"

\end_inset


\size default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%Ab hier beginnt das Dokument
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section*
Änderungsgeschichte
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="4">
<features>
<column alignment="left" valignment="top" width="2cm">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="6cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Version
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Datum
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Autor
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Änderungen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
29.10.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
schneimi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erstellung des Dokuments
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
30.10.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
schneimi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitel 1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
04.11.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
schneimi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitel 2, Kapitel 3.3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
07.11.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
schneimi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitel 4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Einleitung
\end_layout

\begin_layout Standard
Dieses Kapitel soll dem Leser einen Überblick über das SIMPL Rahmenwerk
 geben und Zweck, Anforderungen und die eingesetzten Entwurfsprinzipien
 erläutern.
 Die Struktur und der Aufbau des Dokuments orientieren sich dabei an der
 Entwurfsvorlage 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

 von Markus Knauß.
\end_layout

\begin_layout Subsection
Zweck des Dokuments
\end_layout

\begin_layout Standard
Der Grobentwurf beschreibt das Rahmenwerk auf Komponentenebene und bildet
 die Grundlage für den späteren Feinentwurf.
 Es werden alle wichtigen Komponenten sowie Schnittstellen identifiziert
 und ihr Zusammenspiel beschrieben.
 Damit soll herausgestellt werden, dass das resultierende System funktionieren
 kann und den Anforderungen gerecht wird.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Das-SIMPL-Rahmenwerk"

\end_inset

Das SIMPL Rahmenwerk
\begin_inset Note Note
status open

\begin_layout Plain Layout
generisch
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Das SIMPL Rahmenwerk soll dem Benutzer eine generische und erweiterbare
 Umgebung bieten, die eine einfache Modellierung von BPEL-Geschäftsprozessen
 mit Zugriff auf beliebige Datenquellen ermöglicht.
 Bei den Datenquellen kann es sich beispielsweise um Datenbanken, Sensornetze
 oder Dateisysteme handeln.
 Die Modellierung der Prozesse findet in Eclipse mit dem Eclipse BPEL Designer
 Plug-In statt, das für diesen Zweck um zusätzliche Aktivitäten, für den
 Zugriff auf Datenquellen, erweitert wird.
 Die Ausführung der Prozesse erfolgt durch die Apache ODE Workflow Engine,
 bei der das bestehende Event-Modell und das Auditing der Prozessdaten für
 diese Aktivitäten angepasst werden.
 Dienste, die für die Ausführung der Aktivitäten von der Workflow Engine
 benötigt werden, werden in Form von Web Services bereitgestellt.
 Diese Aktivitäten werden im folgenden Verlauf des Dokuments als Data-Management
-Aktivitäten bzw.
 DM-Aktivitäten bezeichnet.
\end_layout

\begin_layout Subsection
Anforderungen
\end_layout

\begin_layout Standard
In diesem Abschnitt werden die Anforderungen des SIMPL Rahmenwerks beschrieben.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Einfache-Modellierung"

\end_inset

Einfache Modellierung
\end_layout

\begin_layout Standard
Bei der Modellierung von Prozessen wiederholen sich in der Regeln häufig
 längere Statements in Anfragesprachen wie z.B SQL und XQuery oder auch längere
 Namen von Datenquellen oder Datencontainern (Tabellen, Dateien, XML-Dokumente,
 etc).
 Damit diese vom Prozess-Modellierer nicht jedes mal vollständig angegeben
 werden müssen, soll es die Möglichkeit geben diese in BPEL-Variablen zu
 hinterlegen, die anschließend als Referenzen in anderen Statements verwendet
 werden können.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Große-Datenmengen"

\end_inset

Große Datenmengen
\end_layout

\begin_layout Standard
Der Schwerpunkt des Rahmenwerks liegt bei der Modellierung von wissenschaftliche
n Prozessen, bei denen überwiegend mit großen Datenmengen gearbeitet wird.
 Damit diese Datenmengen nicht innerhalb des Prozess gehalten werden müssen,
 wird ein Reference Resolution System (RRS) realisiert, das es ermöglicht
 Daten zu referenzieren, die nur bei Bedarf aufgelöst werden und somit sehr
 schnell weitergegeben werden können.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Auditing-von-Prozessen"

\end_inset

Auditing von Prozessen
\end_layout

\begin_layout Standard
Bei dem Auditing von Prozessen handelt es sich um das Protokollieren von
 Daten, die in Prozessen anfallen und ein Monitoring der Prozesse ermöglichen.
 Die Erfassung der Daten muss auf die zusätzlichen DM-Aktivitäten angepasst
 werden und dem Benutzer die Möglichkeit gegeben werden, die Granularität
 der Daten zu bestimmen.
 Zusätzlich soll das interne Auditing von Apache ODE, auf eine frei wählbare
 Datenbank umgeleitet werden können.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Late-Binding-von"

\end_inset

Late Binding von Datenquellen
\end_layout

\begin_layout Standard
Da bei der Modellierung nicht immer unmittelbar feststeht, auf welche Datenquell
e zugegriffen werden soll, beispielsweise beim Ablegen von Daten, soll ein
 Late Binding von Datenquellen unterstützt werden.
 Damit kann durch die Formulierung von Anforderungen an die Datenquelle
 und das Wählen einer Auswahlstrategie durch den Prozess-Modellierer, eine
 passende Datenquelle zur Laufzeit bestimmt werden.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Authentifizierung-und-Autorisierung"

\end_inset

Authentifizierung und Autorisierung
\end_layout

\begin_layout Standard
Datenquellen erfordern in der Regel eine Authentifizierung und Autorisierung
 des Benutzers bei einem Zugriff.
 Das Rahmenwerk soll dem Prozess-Modellierer diesen Vorgang vereinfachen,
 so dass die dafür benötigten Informationen wie z.B.
 Name und Passwort nicht bei jedem wiederholten Zugriff erneut angegeben
 werden müssen.
 Dazu soll das Konzept des Single Sign On (SSO) angeboten bzw.
 unterstützt werden.
 (siehe 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

, Kapitel 7.2.1)
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Registry"

\end_inset

Registry
\end_layout

\begin_layout Standard
Für die Verwaltung der für den Prozess-Modellierer zur Verfügung stehenden
 Datenquellen, soll eine Registry bereitgestellt werden, in der die Datenquellen
 vom Workflow-Administrator zentral definiert werden können.
 Dort werden auch die entsprechenden Eigenschaften der Datenquellen hinterlegt,
 die für das Late Binding benötigt werden.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Admin-Konsole"

\end_inset

Admin-Konsole
\end_layout

\begin_layout Standard
Für alle wichtigen Einstellungen des Rahmenwerks soll eine Admin-Konsole
 bereitgestellt werden, über die der Workflow-Administrator Einstellungen
 treffen kann.
 Dies betrifft vor allem alle Einstellungen die auch zur Laufzeit getätigt
 werden können, wie z.B.
 das Einbinden einer zusätzlicher Datenquelle.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Erweiterbarkeit"

\end_inset

Erweiterbarkeit
\end_layout

\begin_layout Standard
Das Rahmenwerk stellt folgende Anforderungen an die Erweiterbarkeit und
 soll dafür entsprechende 
\begin_inset Quotes eld
\end_inset

Hot Spots
\begin_inset Quotes erd
\end_inset

 bereitstellen:
\end_layout

\begin_layout Itemize
Weitere Typen von Datenquellen
\end_layout

\begin_layout Itemize
Unterstützung weiterer Anfragesprachen
\end_layout

\begin_layout Itemize
Erweiterung um neue DM-Aktivitäten
\end_layout

\begin_layout Itemize
Erweiterung um neue Events für das Auditing
\end_layout

\begin_layout Itemize
Unterstützung weiterer Authentifizierungs- und Autorisierungsverfahren
\end_layout

\begin_layout Itemize
Unterstützung weiterer Registries
\end_layout

\begin_layout Itemize
Austauschbare GUI der Admin-Konsole
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Verwendbarkeit"

\end_inset

Verwendbarkeit
\end_layout

\begin_layout Standard
Die Aktivitäten, die für SIMPL entwickelt werden, sollen auf beliebigen
 anderen BPEL Worflow-Engines ausgeführt werden können.
 Dazu muss der von den Aktivitäten bei der Modellierung erzeugte, erweiterte
 Code, in Standard-BPEL transformiert werden.
 Eine zusätzliche Anforderung ist, dass die von SIMPL bereitgestellten Web
 Services, auf verschiedenen Web Containern lauffähig sein müssen.
\end_layout

\begin_layout Subsection
Entwurfsprinzipien
\end_layout

\begin_layout Standard
In diesem Abschnitt werden die Prinzipien beschrieben, die bei dem Entwurf
 angewendet werden.
 (vgl.
 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

, Kapitel 17)
\end_layout

\begin_layout Subsubsection
Offenes Rahmenwerk
\end_layout

\begin_layout Standard
Bei dem SIMPL Rahmenwerk handelt es sich größtenteils um ein offenes Rahmenwerk.
 Daher können viele Erweiterungen nicht ohne technisches Verständnis und
 Wissen über die Mechanismen und Abläufe des Rahmenwerks realisiert werden.
 Die Erweiterungsmöglichkeiten werden daher ausführlich dokumentiert und
 Beispiele erstellt, anhand denen eigene Erweiterungen umgesetzt werden
 können.
 Bereiche des Rahmenwerks bei denen im Laufe des Projekts ausreichend Erfahrung
 gesammelt wurde, werden wenn möglich in geschlossener Form für die Entwicklung
 bereitgestellt.
\end_layout

\begin_layout Subsubsection
Modularisierung
\end_layout

\begin_layout Standard
Durch die Modularisierung werden die Komponenten in einfache und leicht
 verständliche Teile gegliedert.
 Die Realisierungsdetails eines Moduls werden nach dem Prinzip des Information
 Hiding versteckt und die Dienste nur über eine Schnittstelle angeboten.
 Ziel ist es, später Module ändern oder austauschen zu können, möglichst
 ohne dabei die Schnittstellen ändern zu müssen und damit Auswirkungen auf
 andere Module zu verursachen.
\end_layout

\begin_layout Subsubsection
Kopplung und Zusammenhalt
\end_layout

\begin_layout Standard
Bei dem Entwurf der Module wird darauf geachtet, dass die Kopplung zu anderen
 Modulen möglichst gering bleibt und der Zusammenhalt innerhalb des Moduls
 möglichst hoch wird.
 Durch dieses Vorgehen wird eine hohe Lokalität und damit gute Wartbarkeit
 erreicht, da sich Fehler die bei Änderungen entstehen, nicht im System
 fortpflanzen können.
\end_layout

\begin_layout Subsubsection
Entwicklungsrichtung
\end_layout

\begin_layout Standard
Bei der Entwicklung wird Top-down vorgegangen.
 Dabei wird die Aufgabe des Rahmenwerks rekursiv bis zur elementaren Ebene
 (der Programmiersprache) in Teilaufgaben zerlegt und damit schrittweise
 verfeinert.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Plug-In"

\end_inset

Plug-In
\end_layout

\begin_layout Standard
Plug-Ins sind externe Software-Einheiten, durch die das Rahmenwerk um zusätzlich
e Funktionalität erweitert werden kann.
 Das Rahmenwerk bietet dafür entsprechende 
\begin_inset Quotes eld
\end_inset

Hot Spots
\begin_inset Quotes erd
\end_inset

 an, an denen die Plug-Ins angeschlossen werden können.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Adapter"

\end_inset

Adapter
\end_layout

\begin_layout Standard
Adapter bzw.
 Konnektoren sind interne Verbindungsstücke, die dort entwickelt werden,
 wo Komponenten angebunden werden sollen, deren Schnittstellen nicht zu
 vorhandenen Schnittstellen des Rahmenwerks passen.
\end_layout

\begin_layout Subsection
Überblick über den Grobentwurf
\end_layout

\begin_layout Itemize
Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Architektur"

\end_inset

 
\begin_inset Quotes eld
\end_inset

Architektur
\begin_inset Quotes erd
\end_inset

 beschreibt die Architektur des Rahmenwerks.
 Das Rahmenwerk wird in überschaubare Komponenten gegliedert, die jeweils
 genau definierte Funktionen erfüllen.
\end_layout

\begin_layout Itemize
Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Komponenten"

\end_inset

 
\begin_inset Quotes eld
\end_inset

Komponenten
\begin_inset Quotes erd
\end_inset

 beschreibt die im Kapitel 
\begin_inset Quotes eld
\end_inset

Architektur
\begin_inset Quotes erd
\end_inset

 genannten Komponenten im Detail.
 Dabei werden Schnittstellen, Protokolle und Verhalten definiert.
\end_layout

\begin_layout Itemize
Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Schnittstellen"

\end_inset

 
\begin_inset Quotes eld
\end_inset

Schnittstellen
\begin_inset Quotes erd
\end_inset

 beschreibt die in Kapitel 
\begin_inset Quotes eld
\end_inset

Komponenten
\begin_inset Quotes erd
\end_inset

 definierten Schnittstellen und ihre Verwendung.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Architektur"

\end_inset

Architektur
\end_layout

\begin_layout Standard
Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Architektur-des-SIMPL"

\end_inset

 zeigt eine Übersicht des SIMPL Rahmenwerks.
 Die übergeordneten Komponenten und ihr Zusammenspiel werden im Folgenden
 kurz beschrieben.
 Auf die elementaren Komponenten des Rahmenwerks wird dann in Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Komponenten"

\end_inset

 eingegangen.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Architektur.png
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Architektur-des-SIMPL"

\end_inset

Architektur des SIMPL Rahmenwerks
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Apache Tomcat
\end_layout

\begin_layout Standard
Apache Tomcat ist die Laufzeitumgebung für Apache ODE, sowie den SIMPL Core
 und die Registry Apache jUDDI.
 Apache ODE ist für die Ausführung der Prozesse nach der Modellierung zuständig
 und benötigt, wie bereits in Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Das-SIMPL-Rahmenwerk"

\end_inset

 erwähnt, bestimmte Dienste für die Ausführung der zusätzlichen DM-Aktivitäten
 in Prozessen.
 Diese Dienste werden von dem SIMPL Core bereitgestellt, der sich aus verschiede
nen, nach Aufgaben eingeteilten, Web Services zusammensetzt.
 Mit der Registry Apache jUDDI werden die im Rahmenwerk zur Verfügung stehenden
 Datenquellen vom Workflow-Administrator zentral bereitgestellt.
\end_layout

\begin_layout Subsection
Eclipse
\end_layout

\begin_layout Standard
Die Entwicklungsumgebung Eclipse bildet, mit den entsprechenden Plug-Ins,
 die GUI für den Prozess-Modellierer, als auch den Workflow-Administrator.
 Mit dem Eclipse BPEL Designer Plug-In kann der Prozess-Modellierer bereits
 BPEL Prozesse erstellen und auf dem Apache ODE zum Einsatz bringen (deployen).
 Das SIMPL Eclipse Plug-In erweitert nun zum Einen die bestehenden Aktivitäten
 des Eclipse BPEL Designer Plug-Ins um die DM-Aktivitäten und bietet zum
 Anderen die GUI mit den Einstellungen für den Workflow-Administrator, wie
 z.B die Admin-Konsole und die Globalen Einstellungen (siehe 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

, Kapitel 4).
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Komponenten"

\end_inset

Komponenten
\end_layout

\begin_layout Standard
In Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Komponenten"

\end_inset

 werden die für das SIMPL Rahmenwerk wichtigen Komponenten und Abhängigkeiten
 gezeigt, die in den folgenden Abschnitten näher beschrieben werden.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Komponenten.png
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Komponenten"

\end_inset

Komponenten des SIMPL Rahmenwerks
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Eclipse
\begin_inset Note Note
status open

\begin_layout Plain Layout
- Alles was dazu im Schaubild zu sehen ist, muss beschrieben werden (bei
 Schnittstellen nur die Pfeile raus!)
\end_layout

\begin_layout Plain Layout
- Eclipse greift zur Modellierung auf den SIMPL Registry Service zu (z.B.
 Auflisten der Datenquellen)
\end_layout

\begin_layout Plain Layout
- Erweiterung der Anfragesprachen (
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Erweiterbarkeit"

\end_inset

) wird durch entsprechende GUI-Schnittstellen ermöglicht
\end_layout

\begin_layout Plain Layout
- SIMPL Transformation Service wird in Eclipse vor dem Deployment verwendet.
\end_layout

\begin_layout Plain Layout
- Admin GUI Komponenten nennen (Menü usw.)
\end_layout

\begin_layout Plain Layout
- Erweiterung um neue DM-Aktivitäten und Anfragesprachen, wird bei der GUI
 wie erreicht? (zB.
 modularer Aufbau,...)
\end_layout

\begin_layout Plain Layout
- IPVS-Referenzen werden evtl.
 im Deployment Descriptor erstellt und beim Deployment aufgelöst
\end_layout

\begin_layout Plain Layout
- SIMPL Eclipse Plug-In teilt sich auf in SIMPL DM-Activity Extension, SIMPL
 Administration Plug-In (Namen sind noch nicht festgelegt!)
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Apache ODE
\begin_inset Note Note
status open

\begin_layout Plain Layout
- Alles was dazu im Schaubild zu sehen ist, muss beschrieben werden (bei
 Schnittstellen nur die Pfeile raus!)
\end_layout

\begin_layout Plain Layout
- Erweiterung um neue Events für das Auditing wird wie erreicht? (zB.
 Event Klasse spezialisieren,...)
\end_layout

\begin_layout Plain Layout
-
\begin_inset space \space{}
\end_inset

BPEL Variablen für SDO Objekte?
\end_layout

\begin_layout Plain Layout
-Beschreibung von ManagementAPI muss in Apache ODE Kapitel
\end_layout

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

Das ManagementAPI von Apache ODE bietet Funktionen auf Prozess- und auf
 Instanzenebene, darüber können z.B.
 Prozesse gestartet und beendet werden und Informationen zu einzelnen Instanzen
 abgerufen werden.
 
\begin_inset Quotes eld
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
SIMPL Core
\begin_inset Note Note
status open

\begin_layout Plain Layout
Abschnitte in gleiche Reihenfolge wie das Schaubild bringen
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Der SIMPL Core stellt alle Funktionalität zur Verfügung, die während der
 Modellierung und der Ausführung von Prozessen benötigt werden.
 Er besteht aus mehreren Web Services (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:SIMPL-Core"

\end_inset

), die jeweils fest definierte Aufgaben innerhalb des SIMPL Rahmenwerks
 haben.
 Die Web Services werden dabei innerhalb einer Apache Axis2 Installation
 bereitgestellt und mit der Java API JAX-WS erstellt, damit ein Einsatz
 auch mit anderen Web Containern, außer Apache Tomcat, gewährleistet ist
 (siehe Anforderung 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Verwendbarkeit"

\end_inset

).
 Jeder dieser Web Services bietet nach Außen eine Schnittstelle.
 In den folgenden Abschnitten werden zunächst die Web Services und ihre
 Aufgaben näher beschrieben, die Schnittstellen und ihre Verwendung sind
 dann Thema von Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Schnittstellen"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename SIMPLCore.png
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:SIMPL-Core"

\end_inset

Der SIMPL Core
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Strategy Service
\end_layout

\begin_layout Standard
Mit dem Strategy Service wird das Late Binding (siehe Anforderung 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Late-Binding-von"

\end_inset

) ermöglicht, dort stehen verschiedene Auswahlstrategien bzw.
 -algorithmen zur Verfügung, um mit den im Prozess formulierten Anforderungen
 eine passende Datenquelle ausfindig zu machen.
 
\end_layout

\begin_layout Subsubsection
Datasource Service
\end_layout

\begin_layout Standard
Der Datasource Service ist für alle Aufgaben zuständig, die den Zugriff
 auf die Datenquellen betreffen.
 Dort werden entsprechende Adapter (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Adapter"

\end_inset

) in Form von Direct Access Services (DAS) implementiert, die den Zugriff
 auf verschiedene Typen von Datenquellen ermöglichen und die Erweiterbarkeit
 für weitere Typen und Anfragesprachen (siehe Anforderung 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Erweiterbarkeit"

\end_inset

) garantieren.
 Des weiteren werden Plug-In-Schnittstellen (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Plug-In"

\end_inset

) für zusätzliche funktionale Erweiterungen geschaffen, wie z.B die Unterstützung
 verschiedener Dateitypen bei Dateisystemen.
\end_layout

\begin_layout Subsubsection
Reference Service
\end_layout

\begin_layout Standard
Der Reference Service erfüllt die Anforderung, große Datenmengen in BPEL
 referenzieren zu können (siehe Anforderung 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Große-Datenmengen"

\end_inset

).
 Über diesen Service lassen sich die Referenzen verwalten und auflösen,
 um die referenzierten Daten bei Bedarf in einen Prozess zu holen.
\end_layout

\begin_layout Subsubsection
Security Service
\end_layout

\begin_layout Standard
Der Security Service ist zuständig für Aufgaben, die die Authentifizierung
 und Autorisierung gegenüber Datenquellen betreffen.
 Mit diesem Service können Authentifizierungs- und Autorisierungsinformationen
 verarbeitet und ggf.
 transformiert werden.
 Die Informationen können außerdem zwischengespeichert werden um das Konzept
 des SSO (siehe Anforderung 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Authentifizierung-und-Autorisierung"

\end_inset

) zu realisieren.
\end_layout

\begin_layout Subsubsection
Administration Service
\end_layout

\begin_layout Standard
Über den Administration Service werden alle Einstellungen des Rahmenwerks
 verwaltet und die Funktionalität für die Admin-Konsole (siehe Anforderung
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Admin-Konsole"

\end_inset

) bereitgestellt.
 Für Einstellungen, mit denen zur Laufzeit Einfluss auf Apache ODE genommen
 wird, wie z.B.
 die Granularität des Auditing, werden die vorhandenen Schnittstellen von
 Apache ODE verwendet und, falls nötig, neue Schnittstellen geschaffen.
 Die geforderte austauschbare GUI (siehe Anforderung 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Erweiterbarkeit"

\end_inset

), wird durch die unabhängige WSDL-Schnittstelle erreicht.
\end_layout

\begin_layout Subsubsection
Transformation Service
\end_layout

\begin_layout Standard
Damit modellierte Prozesse, die DM-Aktivitäten enthalten, auch auf anderen
 Workflow Engines ausgeführt werden können (siehe Anforderung 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Verwendbarkeit"

\end_inset

), wird der Transformation Service bereitgestellt, mit dem der erweiterte
 BPEL Code mit Referenzen in Standard-BPEL-Code transformiert werden kann.
\end_layout

\begin_layout Subsubsection
Storage Service
\end_layout

\begin_layout Standard
Der Storage Service bildet den zentralen Speicherort von Daten des SIMPL
 Rahmenwerks, dort laufen alle Einstellungen, Daten und Informationen zusammen
 und werden persistent in einer Datenquelle gespeichert.
 Beispielsweise werden dort die Referenzen gespeichert, die über den Reference
 Service hinzugefügt werden.
\end_layout

\begin_layout Subsubsection
Registry Service
\end_layout

\begin_layout Standard
Über den Registry Service kann auf die Registry des Rahmenwerks zugegriffen
 werden, in der die vorhandenen Datenquellen mit ihren Eigenschaften zentral
 verwaltet werden.
 (siehe Anforderung 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Registry"

\end_inset

)
\end_layout

\begin_layout Subsection
Apache jUDDI
\end_layout

\begin_layout Standard
Das SIMPL Rahmenwerk stellt mit Apache jUDDI bereits eine UDDI-Registry
 zur Verfügung, die mit den Registry Service genutzt werden kann.
 Über die WSDL Schnittstelle des Registry Service kann aber auch jede andere
 Implementierung einer Registry realisiert werden (siehe Anforderung 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Erweiterbarkeit"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Schnittstellen"

\end_inset

Schnittstellen
\end_layout

\begin_layout Standard
In diesem Kapitel wird die Kommunikation der Komponenten über die Schnittstellen
 beschrieben und interne und externe Abhängigkeiten, sowie eingesetzte Protokoll
e und übertragene Objekte erläutert.
 Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Schnittstellen"

\end_inset

 zeigt dazu die Schnittstellen in einer Übersicht, die in den folgenden
 Abschnitten näher beschrieben werden.
 Bei allen Schnittstellen handelt es sich um WSDL-Schnittstellen, die an
 das Übertragungsprotokoll SOAP gebunden sind.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Schnittstellen.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Schnittstellen"

\end_inset

Schnittstellen des SIMPL Rahmenwerks
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Apache ODE
\end_layout

\begin_layout Standard
Hier werden die bestehenden Schnittstellen von Apache ODE und ihre Verwendung
 von den Komponenten beschrieben.
\end_layout

\begin_layout Subsubsection
ManagementAPI
\end_layout

\begin_layout Standard
Der Administration Service verwendet die ManagementAPI-Schnittstelle für
 die Einstellungen des Rahmenwerks, die zur Laufzeit gemacht werden.
\end_layout

\begin_layout Subsubsection
DeploymentService
\begin_inset Note Note
status open

\begin_layout Plain Layout
wird die wirklich von Eclipse benutzt? 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die DeploymentService-Schnittstelle wird von Eclipse für das Deployment
 vom Prozessen verwendet.
\end_layout

\begin_layout Subsection
Apache jUDDI
\end_layout

\begin_layout Standard
Auf Apache jUDDI wird vom Rahmenwerk nur über den Registry Service benutzt.
\end_layout

\begin_layout Subsection
SIMPL Core
\end_layout

\begin_layout Standard
Hier werden die Schnittstellen vom SIMPL Core und ihre Verwendung von den
 Komponenten beschrieben.
 Alle internen Abhängigkeiten des SIMPL Core werden ebenfalls über diese
 Schnittstellen realisiert.
\end_layout

\begin_layout Subsubsection
DatasourceService
\end_layout

\begin_layout Standard
Die DatasourceService-Schnittstelle wird von Apache ODE bei dem Zugriff
 auf Datenquellen und für das Speichern der Auditing-Daten verwendet, intern
 wird die Schnittstelle vom Storage Service für die Datenhaltung genutzt.
 Sie bietet Funktionen zum Abrufen von Daten von Datenquellen und Senden
 von Befehlen in unterstützten Anfragesprachen.
 Die Daten werden dabei als Service Data Object (SDO) übertragen.
\end_layout

\begin_layout Subsubsection
StrategyService
\end_layout

\begin_layout Standard
Die StrategyService-Schnittstelle wird von Apache ODE für das Late Binding
 genutzt und bietet Funktionen für die verschiedenen Auswahlstrategien.
 Die Anforderungen an die Datenquellen werden dabei als WS-Policy-Objekte
 übertragen.
\end_layout

\begin_layout Subsubsection
ReferenceService
\begin_inset Note Note
status open

\begin_layout Plain Layout
Referenzen hinzufügen direkt aus Eclipse oder über AdminService?
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die ReferenceService-Schnittstelle wird bei der Modellierung in Eclipse
 zur Verwaltung von Referenzen genutzt und von Apache ODE zur Auflösung
 der Referenzen zur Laufzeit verwendet.
 Sie bietet Funktionen zur Verwaltung und Auflösung von Referenzen, wobei
 die Daten der aufgelösten Referenzen als SDO zurückgeliefert werden.
\end_layout

\begin_layout Subsubsection
SecurityService
\begin_inset Note Note
status open

\begin_layout Plain Layout
Wird von wem genutzt? Auch von Apache ODE direkt? (im Schaubild mal drin
 gelassen)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die SecurityService-Schnittstelle bietet Funktionen für die Verwaltung und
 Transformation von Authentifizierungs- und Autorisierungsinformationen.
 Sie wird vom Datasource Service benötigt um entsprechende Informationen
 für einen Zugriff auf eine Datenquelle abzurufen.
 Die Informationen werden dabei unter anderem in der Security Assertion
 Markup Language (SAML) und der eXtensible Access Control Markup Language
 (XACML) übertragen.
\end_layout

\begin_layout Subsubsection
AdministrationService
\begin_inset Note Note
status open

\begin_layout Plain Layout
wirklich SDO? Kann somit evtl.
 direkt gespeichert werden.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die AdministrationService-Schnittstelle bietet Funktionen mit denen Einstellunge
n zur Prozess-Laufzeit gemacht werden können und bietet außerdem Funktionen
 für die Verwaltung der Einstellungen der Admin-Konsole.
 Die Einstellungen der Admin-Konsole werden dabei als SDO übertragen.
\end_layout

\begin_layout Subsubsection
TransformationService
\end_layout

\begin_layout Standard
Die TransformationService-Schnittstelle bietet eine Funktion zur Umwandlung
 von, mit DM-Aktivitäten, erweitertem BPEL-Code in Standard-BPEL-Code.
 Dazu werden die enstprechenden BPEL-Dateien übergeben und transformiert
 zurückgeliefert.
\end_layout

\begin_layout Subsubsection
StorageService
\end_layout

\begin_layout Standard
Die StorageService-Schnittstelle bietet Funktionen zur Verwaltung von Daten
 innerhalb des Rahmenwerks und wird vom Reference Service, Administration
 Service und SecurityService verwendet.
 Zusätzlich bietet sie dem Administration Service die Möglichkeit eine Datenquel
le für die Speicherung festzulegen.
 Alle Daten werden als SDO übertragen.
\end_layout

\begin_layout Subsubsection
RegistryService
\begin_inset Note Note
status open

\begin_layout Plain Layout
Datenquellen hinzufügen direkt aus Eclipse oder über AdminService?
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die RegistryService-Schnittstelle bietet Funktionen für die Verwaltung von
 Datenquellen und ihrer Eigenschaften.
 Der StrategyService bekommt dadurch Zugriff auf die vorhanden Datenquellen,
 die von Eclipse, ebenfalls über die Schnittstelle verwaltet werden.
 Die Datenquellen werden dabei als WSDL-Objekte und ihre Eigenschaften als
 WS-Policy-Objekte übertragen.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{Literaturverzeichnis}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"

\end_inset

Knauß, Markus (März 2008): 
\shape italic
Entwurfsvorlage
\shape default
, http://www.iste.uni-stuttgart.de/se/.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"

\end_inset

Ludewig, Jochen; Lichter, Horst (2007): 
\shape italic
Software Engineering: Grundlagen, Menschen, Prozesse und Techniken
\shape default
, punkt.verlag GmbH.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-3"

\end_inset

Stupro-A SIMPL: 
\shape italic
Spezifikation
\shape default
 (2009), http://code.google.com/p/simpl09/.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{Abkürzungsverzeichnis}
\end_layout

\end_inset


\end_layout

\begin_layout Section*

\series bold
\size larger
Abkürzungsverzeichnis
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="19" columns="2">
<features>
<column alignment="left" valignment="top" width="2cm">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
API
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Application Programming Interface
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
BPEL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Business Process Execution Language
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DAS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Data Access Service
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Data-Management
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GUI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Graphical User Interface
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
JAX-WS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Java API for XML - Web Services
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ODE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Orchestration Director Engine
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RRS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reference Resolution System
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SAML
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Security Assertion Markup Language
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SDA
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Service Data Object
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SIMPL 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SimTech: Information Management, Processes and Languages
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SOAP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Simple Object Access Protocol
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SQL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Structured Query Language
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SSO
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Single Sign On
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UDDI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Universal Description, Discovery and Integration
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
WS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Web Service
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
WSDL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Web Service Description Language
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
XACML
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
eXtensible Access Control Markup Language
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
XQuery
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
XML Query Language
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{Abbildungsverzeichnis}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\end_body
\end_document
