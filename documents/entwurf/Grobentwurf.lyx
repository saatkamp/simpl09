#LyX 1.6.3 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\begin_preamble





\usepackage{babel}

%Packages für eigen definierte Header und Footer
\usepackage{lastpage}
\usepackage{fancyhdr}

% doctitel = Titel des Dokuments
% docvers = Versionsnr.
% docautor = Author(en)
% docdate = Datum der letzten Änderung
\def\doctitel{Grobentwurf}
\def\docvers{2.1}
\def\docautor{Michael Schneidt}
\def\docdate{28. Juni 2010}

% docstate = Status des Dokuments aus {neu, bearbeitet}
% qsstate = QS-Prüfungsstatus aus {positiv QS-geprüft, negativ QS-geprüft, verworfen}
% proofstate = Prüfungsstatus (durch Projektleiter) aus {positiv geprüft, negativ geprüft, verworfen}
% reviewstate = Annahmestatus des Reviews {kein Review durchgeführt, akzeptiert ohne Änderungen, akzeptiert mit Änderungen, nicht akzeptiert}
% endstate = Endstatus des Dokuments aus {freigegeben, verworfen}
\def\docstate{neu}
\def\qsstate{nicht QS-geprüft}
\def\proofstate{nicht geprüft}
\def\reviewstate{kein Review durchgeführt}
\def\endstate{-}

%Nicht einrücken
%\setlength{\parindent}{0pt}
\end_preamble
\use_default_options false
\language ngerman
\inputencoding latin9
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_amsmath 0
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 3cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "Deckblatt.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset CommandInset include
LatexCommand input
filename "DokStatus.lyx"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%Header und Footer Definitionen für alle anderen Seiten
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pagestyle
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

fancy
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset FormulaMacro
\renewcommand{\headrulewidth}{0mm}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
lhead
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
chead
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
rhead
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
lfoot
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\size small
SIMPL © 2009 $IMPL
\size default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
cfoot
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
rfoot
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\size small

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thepage
\end_layout

\end_inset


\begin_inset space \space{}
\end_inset

/ 
\begin_inset CommandInset ref
LatexCommand pageref
reference "LastPage"

\end_inset


\size default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%Ab hier beginnt das Dokument
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section*
Änderungsgeschichte
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="19" columns="4">
<features>
<column alignment="left" valignment="top" width="2cm">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="8cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Version
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Datum
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Autor
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Änderungen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
29.10.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
schneimi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erstellung des Dokuments
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
30.10.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
schneimi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitel 1 erstellt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
04.11.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
schneimi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitel 2, Kapitel 3.3 erstellt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
07.11.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
schneimi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitel 4 erstellt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
09.11.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rehnre
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitel 3.2 erstellt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
09.11.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
bruededl
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitel 3.1 erstellt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11.11.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
schneimi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Korrektur nach internem Review
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20.11.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
schneimi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Überarbeitung nach Kundenreview
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
05.12.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
schneimi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Neue Schaubilder und Beschreibungen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
07.12.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
zoabi,bruededl
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitel 3.1 überarbeitet
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
07.12.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rehnre
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitel 3.2 überarbeitet
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
07.12.2009
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
schneimi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitel 4 überarbeitet
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
21.02.2010
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
schneimi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitel 1, 2, 3.0, 3.3, 3.4, 4 überarbeitet (091207-Grobentwurf-comments_PR_MS.pdf)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
22.02.2010
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
bruededl
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitel 3.1 überarbeitet
\end_layout

\begin_layout Plain Layout
(091207-Grobentwurf-comments_PR_MS.pdf)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
22.02.2010
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rehnre
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitel 3.2 überarbeitet
\end_layout

\begin_layout Plain Layout
(091207-Grobentwurf-comments_PR_MS.pdf)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
22.02.2010
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
huettiwg
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitel 3.2.2 und 3.2.3 überarbeitet
\end_layout

\begin_layout Plain Layout
(091207-Grobentwurf-comments_PR_MS.pdf)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14.06.2010
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
schneimi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Einleitung"

\end_inset

 und 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Architektur"

\end_inset

 überarbeitet
\end_layout

\begin_layout Plain Layout
(100222-Grobentwurf-v03-comments_PR_MS.pdf)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15.06.2010
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
schneimi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Komponenten"

\end_inset

 Einleitung überarbeitet (100222-Grobentwurf-v03-comments_PR_MS.pdf)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Einleitung"

\end_inset

Einleitung
\end_layout

\begin_layout Standard
Dieses Kapitel soll dem Leser einen Überblick über das SIMPL Rahmenwerk
 geben und dessen Zweck, die damit verbundenen Anforderungen und die eingesetzte
n Entwurfsprinzipien erläutern.
 Die Struktur und der Aufbau des Dokuments orientieren sich dabei an der
 Entwurfsvorlage 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

 von Markus Knauß.
\end_layout

\begin_layout Subsection
Zweck des Dokuments
\end_layout

\begin_layout Standard
Der Grobentwurf beschreibt das Rahmenwerk auf Komponentenebene und bildet
 die Grundlage für den späteren Feinentwurf.
 Es werden alle wichtigen Komponenten und ihre Schnittstellen identifiziert
 sowie ihr Zusammenspiel beschrieben.
 Damit soll gezeigt werden, dass das resultierende System funktionieren
 kann und den Anforderungen gerecht wird.
 Damit die in späteren Iterationen dazukommenden Funktionalitäten schon
 beim Feinentwurf berücksichtigt werden, wird, soweit es möglich ist, das
 Gesamtsystem beschrieben und inhaltlich nicht zwischen den einzelnen Iteratione
n unterschieden.
 Die Teile, die erst in späteren Iterationen entworfen werden können, werden
 explizit kenntlich gemacht.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Das-SIMPL-Rahmenwerk"

\end_inset

Das SIMPL Rahmenwerk
\end_layout

\begin_layout Standard
Das SIMPL Rahmenwerk soll dem Benutzer eine erweiterbare Umgebung bieten,
 die eine einfache Modellierung von Simulationsworkflows auf Basis von BPEL
 mit generischem Zugriff auf beliebige Datenquellen ermöglicht.
 Bei den Datenquellen kann es sich beispielsweise um Datenbanken, Sensornetze
 oder Dateisysteme handeln.
 Die Modellierung der Prozesse findet in Eclipse mit dem Eclipse BPEL Designer
 Plug-In statt, das für diesen Zweck um zusätzliche Aktivitäten für den
 Zugriff auf Datenquellen und die Definition von Datenmangementoperationen
 innerhalb des Prozesses erweitert wird.
 Diese Aktivitäten werden im folgenden Verlauf des Dokuments als Datenmanagement
-Aktivitäten bzw.
 DM-Aktivitäten bezeichnet.
 Die Ausführung der Prozesse erfolgt durch die Apache ODE Workflow Engine,
 die für diese Aktivitäten erweitert werden muss.
 Zusätzlich werden das bestehende Event-Modell und das Auditing der Prozessdaten
 für die DM-Aktivitäten angepasst.
 Die Dienste, die für die Ausführung der DM-Aktivitäten von der Workflow
 Engine benötigt werden, werden in Form von Web Services bereitgestellt.
 Durch ein weiteres Plug-In für das SIMPL Rahmenwerk sollen außerdem Referenzvar
iablen bei der Modellierung von Prozessen unterstützt werden und diese durch
 eine entsprechende Modelltransformation 
\begin_inset CommandInset citation
LatexCommand cite
key "key-6"

\end_inset

 auch auf anderen Workflow Engines einsetzbar bleiben.
\end_layout

\begin_layout Subsection
Anforderungen
\end_layout

\begin_layout Standard
In diesem Abschnitt werden die Anforderungen des SIMPL Rahmenwerks beschrieben.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Einfache-Modellierung"

\end_inset

Einfache Modellierung
\end_layout

\begin_layout Standard
Neben der vereinfachten Modellierung der DM-Aktivitäten (siehe 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

 Kapitel 7.3) gibt es eine weitere Anforderung.
 Während der Modellierung von Prozessen wiederholen sich in der Regel häufig
 längere Befehle (Statements) oder Befehlsteile in Anfragesprachen wie SQL
 oder XQuery und auch längere Namen von Datenquellen oder Datencontainern
 (Tabellen, Dateien, XML-Dokumente, etc).
 Damit diese vom Prozess-Modellierer nicht jedes mal vollständig angegeben
 werden müssen, soll es die Möglichkeit geben, diese in BPEL-Variablen zu
 hinterlegen.
 Diese BPEL-Variablen können anschließend als Referenzen in anderen Befehlen
 verwendet werden.
 Durch solch eine Modularisierung der Befehle sind insbesondere komplexe
 und geschachtelte Datenmanagementoperationen einfacher zu modellieren,
 und die Komplexität wird reduziert.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Große-Datenmengen"

\end_inset

Große Datenmengen
\end_layout

\begin_layout Standard
Der Schwerpunkt des Rahmenwerks liegt in der Modellierung von wissenschaftlichen
 Prozessen, bei denen überwiegend mit großen Datenmengen gearbeitet wird.
 Damit diese Datenmengen nicht innerhalb des Prozesses gehalten werden müssen,
 wird ein Reference Resolution System (RRS) nach 
\begin_inset CommandInset citation
LatexCommand cite
key "key-6"

\end_inset

 realisiert.
 Damit wird es möglich, Daten zu referenzieren, sie per Referenz sehr schnell
 weiterzugeben und nur bei Bedarf aufzulösen und in den Prozess zu laden.
 
\end_layout

\begin_layout Standard
Weiterhin kann es einen weiteren Typ von Referenzen innerhalb der DM-Aktivitäten
 geben.
 In diesem Kontext können Datenquellen bzw.
 Datencontainer per Referenz angegeben werden.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Auditing-von-Prozessen"

\end_inset

Auditing von Prozessen
\end_layout

\begin_layout Standard
Beim Auditing von Prozessen handelt es sich um das Protokollieren von Prozessdat
en, wie z.B.
 dem Status einer Variable oder aufgetretene Events, die unter Anderem ein
 Monitoring der Prozesse ermöglichen.
 Apache ODE besitzt bereits ein internes Auditing, bei dem Prozessdaten
 persistent gespeichert werden.
 Das interne Auditing muss für die zusätzlichen DM-Aktivitäten angepasst
 werden, und der Benutzer soll außerdem die Möglichkeit bekommen, das Auditing
 zu aktivieren und zu deaktivieren.
 Zusätzlich soll die interne Datenspeicherung auf eine beliebige externe
 Datenbank umgeleitet werden können.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Late-Binding-von"

\end_inset

Late Binding von Datenquellen
\end_layout

\begin_layout Standard
Da bei der Modellierung nicht immer feststeht, auf welche Datenquelle zugegriffe
n wird, beispielsweise beim Ablegen von Daten, soll das Late Binding von
 Datenquellen unterstützt werden.
 Damit kann, durch die Formulierung von Anforderungen an eine Datenquelle
 und der Angabe einer Auswahlstrategie durch den Prozess-Modellierer, eine
 passende Datenquelle erst zur Laufzeit bestimmt werden.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Authentifizierung-und-Autorisierung"

\end_inset

Authentifizierung und Autorisierung
\end_layout

\begin_layout Standard
Datenquellen erfordern in der Regel eine Authentifizierung und Autorisierung
 des Benutzers bei einem Zugriff.
 Das Rahmenwerk soll dem Prozess-Modellierer diesen Vorgang vereinfachen,
 sodass die dafür benötigten Informationen wie z.B.
 Benutzername und Passwort nicht bei jedem Zugriff erneut angegeben werden
 müssen.
 Dazu soll das Konzept des Single Sign On (SSO) angeboten bzw.
 unterstützt werden (siehe 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

, Kapitel 7.4.1).
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Registry"

\end_inset

Registry
\end_layout

\begin_layout Standard
Für die Verwaltung der für den Prozess-Modellierer zur Verfügung stehenden
 Datenquellen ist eine zentrale Registry vorgesehen, in der die Datenquellen
 von Datenquellen-Administratoren registriert werden können.
 Dort werden auch die entsprechenden Eigenschaften der Datenquellen hinterlegt,
 die für das Late Binding benötigt werden.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Admin-Konsole"

\end_inset

Admin-Konsole
\end_layout

\begin_layout Standard
Für alle wichtigen Einstellungen des Rahmenwerks soll eine Admin-Konsole
 bereitgestellt werden, über die der Workflow-Administrator Einstellungen
 treffen kann.
 Dies betrifft vor allem alle Einstellungen, die auch zur Laufzeit getätigt
 werden können, wie z.B.
 das Aktivieren und Deaktivieren des Auditings.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Erweiterbarkeit"

\end_inset

Erweiterbarkeit
\end_layout

\begin_layout Standard
Für das gesamte SIMPL Rahmenwerk und insbesondere die DM-Aktivitäten werden
 folgende Anforderungen an die Erweiterbarkeit gestellt, die über die Bereitstel
lung entsprechender Zugriffspunkte gewährleistet werden sollen:
\end_layout

\begin_layout Paragraph
SIMPL Rahmenwerk
\end_layout

\begin_layout Itemize
Anbindung weiterer Frameworks für den Datenzugriff wie z.B.
 JDBC, SDO, EJB
\end_layout

\begin_layout Itemize
Erweiterung der Funktionalität des Rahmenwerks durch Integration neuer Dienste,
 die ggf.
 bereits vorhandene Dienste benutzen
\end_layout

\begin_layout Itemize
Unterstützung weiterer Authentifizierungs- und Autorisierungsverfahren
\end_layout

\begin_layout Itemize
Unterstützung weiterer Registries für Datenquellen
\end_layout

\begin_layout Itemize
Erweiterung um zusätzliche Unterpunkte für die Admin-Konsole
\end_layout

\begin_layout Paragraph
DM-Aktivitäten
\end_layout

\begin_layout Itemize
Anbindung weiterer Datenquellentypen bzw.
 Anfragesprachen
\end_layout

\begin_layout Itemize
Erweiterung/Anpassung der DM-Aktivitätstypen, insbesondere Erweiterung um
 neue Datenmanagement-Patterns
\end_layout

\begin_layout Itemize
Erweiterung um neue Events für das Auditing
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Verwendbarkeit"

\end_inset

Verwendbarkeit
\end_layout

\begin_layout Standard
BPEL-Prozesse, die Referenzvariablen (
\begin_inset CommandInset citation
LatexCommand cite
key "key-6"

\end_inset

) nutzen, sollen auch auf anderen BPEL Workflow-Engines ausführbar sein.
 Dazu müssen die bei der Modellierung verwendeten Referenzen in standard-konform
en BPEL-Code transformiert werden.
 Eine zusätzliche Anforderung ist, dass die von SIMPL bereitgestellten Web
 Services auf verschiedenen Web Containern lauffähig sein müssen.
\end_layout

\begin_layout Subsection
Entwurfsprinzipien
\end_layout

\begin_layout Standard
In diesem Abschnitt werden die Prinzipien beschrieben, die für den Entwurf
 angewendet werden (vgl.
 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

, Kapitel 17).
\end_layout

\begin_layout Subsubsection
Offenes Rahmenwerk
\end_layout

\begin_layout Standard
Das SIMPL Rahmenwerk ist größtenteils ein offenes Rahmenwerk.
 Offen bedeutet, es gibt keine einheitliche Schnittstelle für alle Erweiterungen.
 Daher können viele Erweiterungen nicht ohne technisches Verständnis und
 Wissen über die Mechanismen und Abläufe des Rahmenwerks realisiert werden.
 Die Erweiterungsmöglichkeiten werden daher ausführlich dokumentiert und
 Beispiele erstellt, mit denen die Umsetzung eigener Erweiterungen erleichtert
 wird.
 Bereiche des Rahmenwerks, bei denen im Laufe des Projekts ausreichend Erfahrung
 gesammelt wurde, werden wenn möglich in geschlossener Form für die Entwicklung
 bereitgestellt.
\end_layout

\begin_layout Subsubsection
Modularisierung
\end_layout

\begin_layout Standard
Durch die Modularisierung werden die Komponenten in einfache und leicht
 verständliche Teile gegliedert.
 Die Realisierungsdetails eines Moduls werden nach dem Prinzip des Information
 Hiding versteckt und die Dienste nur über eine Schnittstelle angeboten.
 Ziel ist es, später Module ändern oder austauschen zu können, möglichst
 ohne dabei die Schnittstellen ändern zu müssen und damit Auswirkungen auf
 andere Module zu verursachen.
\end_layout

\begin_layout Subsubsection
Kopplung und Zusammenhalt
\end_layout

\begin_layout Standard
Beim Entwurf der Module wird darauf geachtet, dass die Kopplung zu anderen
 Modulen möglichst gering ist, und dass der Zusammenhalt innerhalb eines
 Moduls möglichst hoch ist.
 Durch dieses Vorgehen wird eine hohe Lokalität und damit gute Wartbarkeit
 erreicht, da sich Fehler, die bei Änderungen entstehen, nicht im System
 fortpflanzen können.
\end_layout

\begin_layout Subsubsection
Entwicklungsrichtung
\end_layout

\begin_layout Standard
Die Entwicklung wird Top-down durchgeführt.
 Dabei wird die Aufgabe des Rahmenwerks rekursiv bis zur elementaren Ebene
 (der Programmiersprache) in Teilaufgaben zerlegt und damit schrittweise
 verfeinert.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Plug-In"

\end_inset

Plug-In
\end_layout

\begin_layout Standard
Plug-Ins sind externe Software-Einheiten, durch die das Rahmenwerk um zusätzlich
e Funktionalität erweitert werden kann.
 Das Rahmenwerk bietet dafür entsprechende Zugriffspunkte an, an denen die
 Plug-Ins angeschlossen werden können.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Adapter"

\end_inset

Adapter
\end_layout

\begin_layout Standard
Adapter bzw.
 Konnektoren sind interne Verbindungsstücke.
 Sie werden dort entwickelt, wo Komponenten angebunden werden sollen, deren
 Schnittstellen nicht zu den vorhandenen Schnittstellen des Rahmenwerks
 passen.
\end_layout

\begin_layout Subsection
Überblick über den Grobentwurf
\end_layout

\begin_layout Standard
Der Grobentwurf gliedert sich in die folgenden weiteren Kapitel.
\end_layout

\begin_layout Itemize
Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Architektur"

\end_inset

 
\begin_inset Quotes eld
\end_inset

Architektur
\begin_inset Quotes erd
\end_inset

 beschreibt die Architektur des Rahmenwerks.
 Das Rahmenwerk wird in überschaubare Komponenten gegliedert, die jeweils
 genau definierte Funktionen erfüllen.
\end_layout

\begin_layout Itemize
Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Komponenten"

\end_inset

 
\begin_inset Quotes eld
\end_inset

Komponenten
\begin_inset Quotes erd
\end_inset

 beschreibt die im Kapitel 
\begin_inset Quotes eld
\end_inset

Architektur
\begin_inset Quotes erd
\end_inset

 genannten Komponenten und definiert ihre Schnittstellen.
\end_layout

\begin_layout Itemize
Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Schnittstellen"

\end_inset

 
\begin_inset Quotes eld
\end_inset

Schnittstellen
\begin_inset Quotes erd
\end_inset

 beschreibt die in Kapitel 
\begin_inset Quotes eld
\end_inset

Komponenten
\begin_inset Quotes erd
\end_inset

 definierten Schnittstellen, die eingesetzten Protokolle und die übertragenen
 Daten.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Architektur"

\end_inset

Architektur
\end_layout

\begin_layout Standard
Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Architektur-des-SIMPL"

\end_inset

 zeigt die Architektur des SIMPL Rahmenwerks.
 Es zeigt die bereits vorhanden Komponenten, Komponenten, die realisiert
 werden und externe Komponenten, die eingebunden bzw.
 unterstützt werden.
 Die eingezeichneten Pfeile beschreiben den Datenfluß zwischen den Komponenten,
 machen aber keine Aussage über die Abhängigkeit bzw.
 welche Komponente dabei auf welche zugreift.
 Das Zusammenspiel der Komponenten wird in den folgenden Abschnitten näher
 beschrieben, auf die Komponenten selbst und ihre Erweiterungen wird in
 Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Komponenten"

\end_inset

 eingegangen.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Architektur.png
	width 90text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Architektur-des-SIMPL"

\end_inset

Architektur des SIMPL Rahmenwerks
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Eclipse
\end_layout

\begin_layout Standard
Die Entwicklungsumgebung Eclipse bildet mit den SIMPL Eclipse Plug-Ins sowohl
 die GUI für den Prozess-Modellierer als auch für den Workflow-Administrator.
 Mit dem Eclipse BPEL Designer Plug-In kann der Prozess-Modellierer bereits
 BPEL Prozesse erstellen und auf Apache ODE zum Einsatz bringen (deployen).
 Mit dem BPEL-DM Plug-In werden die bestehenden Aktivitäten des Eclipse
 BPEL Designer Plug-Ins um die DM-Aktivitäten über einen vorhandenen Extension
 Point erweitert und um weitere Modellierungshilfen wie z.B.
 Statement-Editoren und die Bereistellung von Datenquellen-Metadaten erweitert.
 Das SIMPL Core Plug-In stellt das SIMPL Eclipse-Menü und die GUI der Admin-Kons
ole für den Workflow-Administrator (siehe 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

, Kapitel 5.2) zur Verfügung.
 Beide Plug-Ins nutzen das SIMPL Communication Plug-In, um die Verbindung
 zu den SIMPL Core Web Services (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:SIMPL-Core"

\end_inset

) herzustellen.
\end_layout

\begin_layout Standard
Mit dem RRS Plug-In wird die Modellierung und Verwaltung von Referenzvariablen
 im Eclipse BPEL Designer ermöglicht und über das RRS Transformation Plug-In
 der Kontakt zum RRS Transformation Service hergestellt, über den ggf.
 vor dem Deployment eine Modelltransformation durchgeführt werden kann (siehe
 Anforderung 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Verwendbarkeit"

\end_inset

).
 Eine UDDI Datenquellenregistry (siehe Anforderung 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Registry"

\end_inset

) kann über das UDDI Plug-In integriert werden und stellt die verwendbaren
 Datenquellen für die Modellierung im Eclipse BPEL Designer zur Verfügung.
\end_layout

\begin_layout Subsection
Apache Tomcat
\end_layout

\begin_layout Standard
Der Web Container Apache Tomcat ist die Laufzeitumgebung für Apache ODE,
 den SIMPL Core und das RRS, die aber grundsätzlich auch in unterschiedlichen
 Laufzeitumgebungen installiert sein können.
 Apache ODE ist für die Ausführung der Prozesse nach der Prozessmodellierung
 zuständig und wird über einen vorhandenen Extension Point für die zusätzliche
 Ausführung von DM-Aktivitäten um die BPEL-DM Extension Activities erweitert.
 Diese neuen Extension Activities können über den SIMPL Core mit den Datenquelle
n kommunizieren und z.B.
 Daten abrufen.
 Wie bereits in Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Das-SIMPL-Rahmenwerk"

\end_inset

 erwähnt, werden dazu bestimmte Dienste benötigt, die vom SIMPL Core bereitgeste
llt werden, der sich aus nach Aufgaben eingeteilten Web Services zusammensetzt
 (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:SIMPL-Core"

\end_inset

).
 
\end_layout

\begin_layout Standard
Das Reference Resolution System bietet Web Services für die Verwaltung der
 Referenzen in einer Embedded Datenbank über das RRS Plug-In, sowie für
 das Abrufen und Auflösen von Referenzen zur Laufzeit von der Workflow Engine
 (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:RRS-Retrieval-Service"

\end_inset

).
 Der eigenständige RRS Transformation Service realisiert den Web Service
 für die BPEL Transformation über das RRS Transformation Plug-In.
 
\end_layout

\begin_layout Standard
Das Auditing auf einer externen Datenbank (siehe Anforderung 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Auditing-von-Prozessen"

\end_inset

) wird über die SIMPL Auditing Erweiterung in der Workflow Engine realisiert,
 die alle relevanten anfallenden Daten von der Workflow Engine an den SIMPL
 Core weiterleitet, über den die Daten in einer Auditing Datenbank (Apache
 ODE Auditing) gespeichert werden.
 Das Ein- und Ausschalten des Auditings zur Laufzeit, wird vom SIMPL Core
 direkt über die SIMPL Auditing Erweiterung vorgenommen.
\end_layout

\begin_layout Subsection
UDDI Registry
\end_layout

\begin_layout Standard
Eine UDDI Registry ermöglicht die zentrale Verwaltung von Datenquellen und
 wird über das jUDDI Web Interface ermöglicht.
 In der Registry werden auch die Eigenschaften der Datenquellen erfasst,
 die z.B.
 für das Late Binding (siehe Anforderung 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Late-Binding-von"

\end_inset

) benötigt werden oder über die der Prozess-Modellierer eine geeignete Datenquel
le identifizieren kann.
 Das SIMPL Rahmenwerk wird mit Apache jUDDI als Registry ausgeliefert, unterstüt
zt aber auch andere UDDI-Registries, welche die Version 3 der UDDI API Spezifika
tion 
\begin_inset CommandInset citation
LatexCommand cite
key "key-7"

\end_inset

 unterstützen.
 Die Registry wird zur Laufzeit vom SIMPL Core für das Auffinden einer Datenquel
le beim Late Binding verwendet, sowie vom UDDI Plug-In um die Datenquellen
 in Eclipse bereitzustellen und von Apache ODE um die bei der Modellierung
 verwendeten logischen Deskriptoren wie z.B.
 Namen von Datenquellen zu einer Datenbankaddresse aufzulösen, mit der über
 den SIMPL Core dann darauf zugegriffen werden kann.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Komponenten"

\end_inset

Komponenten
\end_layout

\begin_layout Standard
In Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Komponenten"

\end_inset

 werden die für das SIMPL Rahmenwerk relevanten Komponenten und ihre Abhängigkei
ten gezeigt, die in den folgenden Abschnitten näher beschrieben werden.
 Die Richtung der Pfeile zu den Komponenten beschreibt die Richtung, in
 der die Zugriffe stattfinden, der Datenfluß dabei wird durch gestrichelten
 Pfeile verdeutlicht.
 
\end_layout

\begin_layout Standard
Eclipse greift auf die Registry Apache jUDDI zu, um die zur Verfügung stehenden
 Datenquellen abzurufen und für die Modellierung zur Verfügung zu stellen.
 Der SIMLCore greift ebenfalls auf Apache jUDDI zu, um beim Late Binding
 eine passende Datenquelle zu finden.
 Die bei der Modellierung verwendeten logischen Deskriptoren von Datenquellen
 werden von Apache ODE zur Laufzeit über Apache jUDDI aufgelöst.
 Eclipse bietet die Möglichkeit, den SIMPL Core über eine GUI (Admin-Konsole)
 zu administrieren, Einstellungen werden im SIMPL Core gespeichert und von
 dort wieder geladen.
 Zusätzlich können vom SIMPL Core Metadaten von den Datenquellen abgerufen
 werden, die in Eclipse zur Modellierung verwendet werden können.
\end_layout

\begin_layout Standard
Für Einstellungen zur Laufzeit, wie das An- und Ausschalten des Auditings,
 muss vom SIMPL Core direkt auf Apache ODE zugegriffen werden.
 Apache ODE verwendet den SIMPL Core für die Ausführung der DM-Aktivitäten
 und für die Speicherung der Auditing Daten, sowie das RRS, um Referenzen
 zur Laufzeit aufzulösen.
 Die Referenzen des RRS werden ebenfalls über eine GUI in Eclipse verwaltet
 und innerhalb des RRS gespeichert.
 Mit Hilfe des RRS Transformation Service kann in Eclipse ggf.
 eine Modelltransformation durchgeführt werden, bevor ein Prozess in Apache
 ODE deployt wird.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Komponenten.png
	width 60text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Komponenten"

\end_inset

Komponenten des SIMPL Rahmenwerks
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Eclipse
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
- Erweiterung der Anfragesprachen (
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Erweiterbarkeit"

\end_inset

) wird durch entsprechende GUI-Schnittstellen ermöglicht
\end_layout

\begin_layout Plain Layout
- Erweiterung um neue DM-Aktivitäten und Anfragesprachen, wird bei der GUI
 wie erreicht? (zB.
 modularer Aufbau,...)
\end_layout

\begin_layout Plain Layout
- IPVS-Referenzen werden evtl.
 im Deployment Descriptor erstellt und beim Deployment aufgelöst
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
Abbildung 2 hat sich geändert, muss im Text noch überarbeitet werden.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die relevanten Komponenten der Enwicklungsumgebung Eclipse in Abbildung
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Eclipse-mit-SIMPL"

\end_inset

 besteht im Rahmen des SIMPL Projekts aus der Eclipse Basis IDE und dem
 SIMPL Eclipse Plug-In.
 Das SIMPL Eclipse Plug-In setzt sich aus verschiedenen Plug-Ins zusammen,
 die über bestehende Extension Points realisiert werden und ggf.
 selbst Extension Points anbieten.
 In den folgenden Abschnitten werden die Plug-Ins näher beschrieben.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Eclipse.png
	width 90text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Eclipse-mit-SIMPL"

\end_inset

Eclipse mit SIMPL Erweiterungen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Eclipse Extension Points
\end_layout

\begin_layout Standard
Eclipse bietet über Extension Points die Möglichkeit, die IDE zu erweitern.
 Für das SIMPL Projekt nutzen wir den 
\begin_inset Quotes eld
\end_inset

Menu
\begin_inset Quotes erd
\end_inset

 - und 
\begin_inset Quotes eld
\end_inset

View
\begin_inset Quotes erd
\end_inset

 Extension Point, den Eclipse zur Verfügung stellt.
\end_layout

\begin_layout Paragraph
Menu 
\end_layout

\begin_layout Standard
Das Menu stellt die Auswahlmöglicheiten als Drop-Down Liste dar, die auf
 die verschiedenen Funktionsbereiche des Plug-Ins verweist.
 Der Extension Point 
\begin_inset Quotes eld
\end_inset

Menu
\begin_inset Quotes erd
\end_inset

 wird im Rahmen von SIMPL dazu verwendet, um ein SIMPL-Menü in Eclipse und
 später auch zusätzliche Einträge bereitstellen zu können.
 
\end_layout

\begin_layout Paragraph
View
\end_layout

\begin_layout Standard
Die View ist eine Art Fenster zur Darstellung und Eingabe von Daten innerhalb
 von Eclipse, wie z.B.
 ein 
\begin_inset Quotes eld
\end_inset

ErrorLog
\begin_inset Quotes erd
\end_inset

, der alle Fehler und Probleme von Eclipse Projekten anzeigt, oder eine
 
\begin_inset Quotes eld
\end_inset

PropertiesView
\begin_inset Quotes erd
\end_inset

 in der z.B.
 BPEL-Aktivitäten näher spezifiziert werden können.
 Im Rahmen von SIMPL wird z.B.
 eine View verwendet, um die Referenzen für das RRS Plug-In anzuzeigen bzw.
 zu verwalten.
 
\end_layout

\begin_layout Subsubsection
Eclipse BPEL Designer Plug-In Extension Points
\end_layout

\begin_layout Standard
Es wird auf die unten genannten drei Extension Points eingegangen, weil
 nur diese vom BPEL Designer benutzt werden.
 Es gibt auch noch weitere Extension Points im BPEL Designer Plug-In, diese
 sind jedoch nicht für SIMPL relevant.
\end_layout

\begin_layout Paragraph
UIObjectFactory
\end_layout

\begin_layout Standard
Dieser Extension Point ermöglicht das Anbinden neuer UIObjectFactories,
 mit deren Hilfe Instanzen von BPEL Extension Activities erzeugt werden
 können.
 Bei der Auswahl einer Aktivität in der BPEL Designer Palette wird ein neues
 Objekt durch die UIObjectFactory erzeugt.
\end_layout

\begin_layout Paragraph
PaletteAdditions
\end_layout

\begin_layout Standard
Die Palette ist ein Auswahlfenster aller zur Verfügung stehenden BPEL-Konstrukte
, dies sind z.B.
 Standard BPEL-Aktivitäten oder eigene Extension Activities.
 Durch diesen Extension Point können neue Items und Kategorien der Benutzerschni
ttstelle hinzugefügt werden.
\end_layout

\begin_layout Paragraph
PropertySections
\end_layout

\begin_layout Standard
Dieser Extension Point ermöglicht das Erweitern von Property-Fenstern über
 die, in das Prozessmodell eingefügte, BPEL-Aktivitäten ausformuliert und
 mit Werten gefüllt werden können.
 
\end_layout

\begin_layout Subsubsection
BPEL-DM Plug-In
\end_layout

\begin_layout Standard
Das BPEL-DM Plug-In beinhaltet die Datenmanagement-Aktiviäten, die die Standard
 BPEL-Aktivitäten des BPEL Designer Plug-Ins erweitern.
 Die Erweiterung der Aktivitäten geschieht über folgende drei Extension
 Points:
\end_layout

\begin_layout Itemize
UIObjectFactory ( Erzeugt neue Objekte für die Modellierung)
\end_layout

\begin_layout Itemize
PaletteAdditions ( Ermöglicht grafische Auswahlmöglichkeit in der Palette.
\end_layout

\begin_layout Itemize
PropertySections ( Ermöglicht Erzeugung und Konfiguration von Werten der
 Aktivitäten )
\end_layout

\begin_layout Standard
Weiterhin werden durch das BPEL-DM Plug-In PropertySections für alle Datenmanage
ment-Aktivitäten bereitgestellt, die Zugriff auf einen Editor zur graphischen
 Modellierung von Datenquellenbefehlen bieten.
\end_layout

\begin_layout Subsubsection
SIMPL Core Plug-In
\end_layout

\begin_layout Standard
Das SIMPL Core Plug-In erweitert die Eclipse IDE um das SIMPL-Menü und die
 SIMPL-Hilfe.
 Das SIMPL-Menü beinhaltet die Menüpunkte 
\begin_inset Quotes eld
\end_inset

Admin-Console
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Settings
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Help
\begin_inset Quotes erd
\end_inset

 und 
\begin_inset Quotes eld
\end_inset

About
\begin_inset Quotes erd
\end_inset

, die auf entsprechende Fenster verlinken.
 Die 
\begin_inset Quotes eld
\end_inset

Admin-Console
\begin_inset Quotes erd
\end_inset

 bietet den Zugriff auf die globale Eigenschaften ,Referenzen, Datenquellen
 und Strategien.
 Unter 
\begin_inset Quotes eld
\end_inset

Settings
\begin_inset Quotes erd
\end_inset

 werden allgemeine Einstellungen für die Eclipse Plug-Ins von SIMPL eingestellt
 die nicht systemkritisch sind, wie zum Beispiel die Adresse des SIMPL Core
 oder Schriftgrößen .Die SIMPL-
\begin_inset Quotes erd
\end_inset

Help
\begin_inset Quotes erd
\end_inset

stellt weiterführende Informationen zur Bedienbarkeit und Funktionalität
 dar.
 Das SIMPL Core Plug-In stellt den Extension Point 
\begin_inset Quotes eld
\end_inset

Admin Console Item
\begin_inset Quotes erd
\end_inset

 (ACItem) bereit, mit Hilfe dessen die Admin-Konsole um weitere Elemente
 erweitert werden kann.
 Jeder Eintrag in der Konsole wird als Plug-In realisiert welches über den
 Extension-Point ACItem angebunden werden.
 Alle Einträge des Menüs werden durch Plug-Ins integriert.
\end_layout

\begin_layout Subsubsection
RRS Plug-In
\end_layout

\begin_layout Standard
Das RRS Plug-In wird über den 
\begin_inset Quotes eld
\end_inset

View
\begin_inset Quotes erd
\end_inset

-Extension-Point in Eclipse angebunden.
 Es wird eine GUI-Schnittstelle für den RRS Management Service angeboten.
 Nähere Informationen dazu finden sich im Kapitel 3.4.
 So können über Eclipse mit dem RRS Plug-In alle Referenzen des angebundenen
 RRS verwaltet werden.
 Hier kann auch die Adresse eingestellt werden wenn mehrere RRS vorhanden
 sind und eines ausgewählt werden sollte.
\end_layout

\begin_layout Subsection
Apache ODE
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
- Alles was dazu im Schaubild zu sehen ist, muss beschrieben werden
\end_layout

\begin_layout Plain Layout
- Erweiterung um neue Events für das Auditing wird wie erreicht? (zB.
 Event Klasse spezialisieren,...)
\end_layout

\begin_layout Plain Layout
-
\begin_inset space \space{}
\end_inset

BPEL Variablen für SDO Objekte?
\end_layout

\begin_layout Plain Layout
-Beschreibung von ManagementAPI muss in Apache ODE Kapitel
\end_layout

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

Das ManagementAPI von Apache ODE bietet Funktionen auf Prozess- und auf
 Instanzenebene, darüber können z.B.
 Prozesse gestartet und beendet werden und Informationen zu einzelnen Instanzen
 abgerufen werden.
 
\begin_inset Quotes eld
\end_inset


\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
Abbildung 2 hat sich geändert, muss im Text noch überarbeitet werden
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Hier werden der Aufbau und die einzelnen Bestandteile von ODE, die für das
 SIMPL Rahmenwerk von Bedeutung sind, erläutert.
 Zunächst wird eine kurze Beschreibung über den derzeitigen Zustand von
 ODE geboten.
 Im Anschluss folgt eine Beschreibung der Erweiterungen, die für die Ausführung
 der DM-Aktivitäten notwendig sind.
 In Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Apache-ODE-mit"

\end_inset

 werden alle wichtigen Bestandteile dargestellt.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ApacheODE.png
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Apache-ODE-mit"

\end_inset

Apache ODE mit SIMPL Erweiterungen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Schnittstellen
\end_layout

\begin_layout Standard
In diesem Teil folgt eine kurze Beschreibung der Schnittstellen, über die
 die ODE Engine verfügt.
 Diese werden hier nur aufgelistet, aber voraussichtlich nicht verwendet.
\end_layout

\begin_layout Paragraph
ProcessManagement und InstanceManagement (Management API)
\end_layout

\begin_layout Standard
Die Management API von Apache ODE bietet Funktionen auf Prozessmodell, und
 auf Prozessinstanzebene an.
 Dadurch können z.B.
 bestimmte Nachrichten an Prozesse geschickt werden um deren Ausführung
 zu starten oder zu beenden und es können Informationen zu den einzelnen
 Prozessinstanzen abgerufen werden.
\end_layout

\begin_layout Standard
Die Management API unterteilt sich in Instanz-Management und Prozess-Management.
 Beide bieten verschiedene Funktionen für Prozessinstanzen bzw.
 Prozessmodelle an.
 Es besteht auf der einen Seite die Möglichkeit, verschiedene Informationen
 über die Prozessemodelle und Prozessinstanzen zu erhalten, zum Beispiel
 eine Liste der verschiedene Prozessmodelle oder Informationen über ein
 einzelnes Prozessmodell.
 Auf der anderen Seite ist es auch möglich, direkt mit Prozessinstanzen
 zu interagieren.
 Dadurch ist es beispielsweise möglich, eine Prozessinstanz anzuhalten,
 oder direkt zu terminieren.
\end_layout

\begin_layout Paragraph
DeploymentService
\end_layout

\begin_layout Standard
Der Deployment Service bietet verschiedene Funktionen für das Deployment
 von Prozessen an.
 Dazu gehören Deploy- und Undeploy-Funktionen.
\end_layout

\begin_layout Subsubsection
Komponenten
\end_layout

\begin_layout Standard
Hier werden die bereits vorhandenen Komponenten von Apache ODE beschrieben.
\end_layout

\begin_layout Paragraph
Plug-In Architektur
\end_layout

\begin_layout Standard
ODE verfügt über eine Plug-In-Architektur, mit der es unter anderem möglich
 ist, Extension Activities zu erstellen, die BPEL um zusätzliche Aktivitäten
 erweitern.
 Dazu werden spezielle Interfaces zur Verfügung gestellt.
 Dabei handelt es sich um 
\begin_inset Quotes eld
\end_inset

AbstractSyncExtensionOperation
\begin_inset Quotes erd
\end_inset

 bei synchronen Aktivitäten und um 
\begin_inset Quotes eld
\end_inset

AbstractAsyncExtensionOperation
\begin_inset Quotes erd
\end_inset

 bei asynchronen Aktivitäten.
 Um diese Aktivitäten der ODE Engine hinzuzufügen, ist es notwendig, diese
 als jar-Dateien in den Classpath von ODE zu kopieren (ode
\backslash
WEB-INF
\backslash
lib).
 Anschließend ist es nur noch notwendig, die Extension in der ODE Engine
 zu registrieren.
 Dies geschieht in der ode-axis2.PROPERTIES Datei.
\end_layout

\begin_layout Paragraph
Event System
\end_layout

\begin_layout Standard
Innerhalb des ODE Event Systems existieren bereits 5 Event-Typen:
\end_layout

\begin_layout Itemize
Instance Life Cycle Events
\end_layout

\begin_deeper
\begin_layout Itemize
Diese Events sind für alle Ereignisse zuständig, die während der Ausführung
 einer Prozessinstanz auftreten können.
 Dies sind beispielsweise das Starten der Ausführung einer Prozessinstanz
 oder das Terminieren einer Prozessinstanz
\end_layout

\end_deeper
\begin_layout Itemize
Activity Life Cycle Events
\end_layout

\begin_deeper
\begin_layout Itemize
Diese Events sind für alle Ereignisse zuständig, die während der Ausführung
 von Aktivitäten auftreten können.
 Dies sind beispielsweise das Starten der Ausführung einer Aktivität oder
 Rückmeldungen über das Fehlschlagen einer Aktivität.
\end_layout

\end_deeper
\begin_layout Itemize
Scope Handling Events
\end_layout

\begin_deeper
\begin_layout Itemize
Diese Events sind für alle Ereignisse zuständig, die während der Ausführung
 von Scopes auftreten können.
 Dies sind peispielsweise das Registrieren von Compensation Handlern für
 einen Scope und Rückmeldungen über Fehler in einem Scope.
\end_layout

\end_deeper
\begin_layout Itemize
Data Handling Events
\end_layout

\begin_deeper
\begin_layout Itemize
Diese Events sind für alle Ereignisse die beim Umgang mit Daten auftreten
 können.
 Dies betrifft beispielsweise das Lesen und Modifizieren von Variablen.
\end_layout

\end_deeper
\begin_layout Itemize
Correlation Events
\end_layout

\begin_deeper
\begin_layout Itemize
Diese Events sind für Ereignisse 
\begin_inset Quotes eld
\end_inset

Correlation sets
\begin_inset Quotes erd
\end_inset

 betreffend zuständig.
 
\begin_inset Quotes eld
\end_inset

Correlation sets
\begin_inset Quotes erd
\end_inset

 sind dabei Partner die Nachrichten untereinander austauschen.
 Hier gibt es nur die Events 
\begin_inset Quotes eld
\end_inset

Correlation match
\begin_inset Quotes erd
\end_inset

 und 
\begin_inset Quotes eld
\end_inset

Correlation no match
\begin_inset Quotes erd
\end_inset

.
 
\begin_inset Quotes eld
\end_inset

Correlation match
\begin_inset Quotes erd
\end_inset

 wird ausgelöst wenn das 
\begin_inset Quotes eld
\end_inset

Correlation set
\begin_inset Quotes erd
\end_inset

 für das die Nachricht bestimmt ist gefunden wurde und 
\begin_inset Quotes eld
\end_inset

Correlation no match
\begin_inset Quotes erd
\end_inset

, falls es nicht gefunden wurde.
\end_layout

\end_deeper
\begin_layout Standard
Diese Events sind in einer Hierarchie organisiert.
 Diese ensteht durch die Vererbungsverhältnisse unter den Events.
 Dabei haben alle verschiedenen Events die Klasse 
\begin_inset Quotes eld
\end_inset

BPEL-Event
\begin_inset Quotes erd
\end_inset

 als Oberklasse.
 Anschließend ist die weitere Hierarchie durch die von den einzelnen Events
 betroffenen Konstrukten begründet.
 Das bedeutet, dass 
\begin_inset Quotes eld
\end_inset

Activity Life Cycle Events
\begin_inset Quotes erd
\end_inset

 eine Unterklasse von 
\begin_inset Quotes eld
\end_inset

Scope Handling Event
\begin_inset Quotes erd
\end_inset

 ist.
 
\begin_inset Quotes eld
\end_inset

Scope Handling Events
\begin_inset Quotes erd
\end_inset

 wiederum sind eine Unterklasse von 
\begin_inset Quotes eld
\end_inset

Instanz Life Cycle Events
\begin_inset Quotes erd
\end_inset

, welche eine direkte Unterklasse von 
\begin_inset Quotes eld
\end_inset

BPELEvent
\begin_inset Quotes erd
\end_inset

 sind.
 Bei 
\begin_inset Quotes eld
\end_inset

BPELEvent
\begin_inset Quotes erd
\end_inset

 handelt es sich um die Vaterklasse, von der alle anderen Events innerhalb
 der Hierarchie abgeleitet werden.
\end_layout

\begin_layout Paragraph
Data Access Object (DAO)
\end_layout

\begin_layout Standard
Das DAO ist für die persistente Datenhaltung aller Daten, die innerhalb
 von ODE erzeugt werden, zuständig.
 Weiterhin werden mit Hilfe des DAOs die Auditing-Daten in der Embedded
 Auditing-Datenbank gespeichert.
 Das DAO bietet außerdem verschiedene Einstellungen für die Auditing-Datenbank
 an.
 So ist es mit Hilfe des DAOs, wie bereits oben erläutert, möglich die Auditing-
Daten auf eine externe Datenbank umzuleiten.
 Es existiert zum Beispiel die Möglichkeit eine MySQL Datenbank zu nutzen.
 Dies ist jedoch nur über die ODE-Config-Dateien möglich und wird erst nach
 dem Neustart von ODE übernommen.
 Mit dem SIMPL DAO ist es möglich die Auditing-Daten, auch wärend der Laufzeit
 des Prozesses auf eine andere Datenbank umzuleiten.
 Näheres zum SIMPL DAO siehe (
\begin_inset CommandInset ref
LatexCommand ref
reference "par:SIMPL-DAO"

\end_inset

) .
\end_layout

\begin_layout Paragraph
Embedded Auditing Datenbank
\end_layout

\begin_layout Standard
Die Embedded Auditing Datenbank ist eine Apache Derby Datenbank und wird
 als Standard bei Apache-Ode mitgeliefert.
 Die Auditingdaten, die ODE erzeugt, werden dort standardmäßig gespeichert.
 
\end_layout

\begin_layout Subsubsection
Erweiterungen
\end_layout

\begin_layout Standard
In den folgenden Abschnitten wird beschrieben, welche Erweiterungen für
 Apache ODE benötigt werden und wie diese realisiert werden.
\end_layout

\begin_layout Paragraph
BPEL-DM Extension Activities
\end_layout

\begin_layout Standard
Diese Extension Activities sind für die Ausführung der unterschiedlichen
 DM-Aktivitäten durch Apache ODE zuständig.
 Sie werden über den Extension Point 
\begin_inset Quotes eld
\end_inset

Extension Activity
\begin_inset Quotes erd
\end_inset

 realisiert.
 Extension Acitivities für die Apache ODE Workflow Engine werden als Java
 Klassen erstellt, welche die Implementierung der neuen Aktivitäten enthalten.
 Weiterhin ist es notwendig, die unter Plug-in Architektur genannten Interfaces
 zu implementieren (
\begin_inset Quotes eld
\end_inset

AbstractAsyncExtensionOperation
\begin_inset Quotes erd
\end_inset

 und 
\begin_inset Quotes eld
\end_inset

AbstractSyncExtensionOperation
\begin_inset Quotes erd
\end_inset

).
 Bei der Ausführung der DM-Aktivitäten wird der SIMPL Core genutzt, um die
 Datenmanagement-Operationen zur Verarbeitung an die jeweilige Datenquelle
 zu schicken.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Paragraph
SIMPL Events
\end_layout

\begin_layout Plain Layout
Für das Auditing der DM-Aktivitäten ist es notwendig, dass eine Reihe von
 eigenen Events erstellt wird.
 Dies geschieht durch Erstellung neuer Event-Klassen, die von den bestehenden
 Event Klassen abgeleitet und anschließend innerhalb der Engine eingebunden
 werden.
 Diese neuen Events werden unterteilt in DM-Events und Connection-Events.
 DM-Events betreffen hierbei die Ausführung der DM-Aktivitäten, während
 Connection-Events Rückmeldung über die Verbindung zu einer Datenquelle
 liefern.
 Die einzelnen Events sind:
\end_layout

\begin_layout Subparagraph
DM-Events:
\end_layout

\begin_layout Itemize
DMStarted
\end_layout

\begin_layout Itemize
DMFailure
\end_layout

\begin_layout Itemize
DMEnd
\end_layout

\begin_layout Subparagraph
Connection-Events:
\end_layout

\begin_layout Itemize
ConnectionStarted
\end_layout

\begin_layout Itemize
ConnectionLost
\end_layout

\begin_layout Itemize
ConnectionEnd
\end_layout

\begin_layout Plain Layout
Bei der Implementierung werden DM-Events und Connection-Events jeweils als
 ein neuer Event-Typ implementiert und die einzelnen spezifischen Events
 werden von diesen abgeleitet.
 Dies bietet die Möglichkeit, die Granularitätseinstellungen innerhalb des
 Deployment-Deskriptors ebenfalls um diese Typen zu erweitern.
 Die Events werden direkt in den Extension Activities eingebunden und werden
 hier auch ausgelöst.
 Es ist nicht vorgesehen, diese Events an einer anderen Stelle in ODE zu
 nutzen.
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
SIMPL DAO
\begin_inset CommandInset label
LatexCommand label
name "par:SIMPL-DAO"

\end_inset


\end_layout

\begin_layout Standard
Das SIMPL DAO nutzt die JPA-DAO Implementierung von Apache ODE und erweitert
 diese, um die Möglichkeit Auditing-Daten über SDOs an den SIMPL Core zu
 senden, über den diese in beliebigen Datenbanken gespeichert werden können.
 Die ursprüngliche JPA-DAO Funktionalität wird dadurch nicht beeinflusst.
 Der Vorteil dieser Methode ist, dass die Auditing-Daten unabhängig vom
 JPA-DAO, in einer eigenen und übersichtlicheren Struktur angeordnet werden
 können.
\end_layout

\begin_layout Subsection
SIMPL Core
\end_layout

\begin_layout Standard
Der SIMPL Core, dargestellt in Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:SIMPL-Core"

\end_inset

, stellt die Funktionalität zur Verfügung, die während der Prozessmodellierung
 mit DM-Aktivitäten und der Ausführung dieser über Extension Activities
 benötigt wird.
 Er bietet nach außen verschiedene Web Services an, die jeweils bestimmte
 Aufgaben innerhalb des SIMPL Rahmenwerks übernehmen.
 Der SIMPL Core wird zudem als JAR-Datei im Classpath von Apache ODE hinterlegt,
 dadurch wird eine schnelle direkte Kommunikation zwischen dem SIMPL Core
 und Apache ODE ermöglicht.
 Die Web Services des SIMPL Cores werden dabei innerhalb der Axis2 Installation
 von Apache ODE bereitgestellt und zusätzlich mit der Java API JAX-WS annotiert,
 damit ein Einsatz auch mit anderen Web Containern außer Apache Tomcat möglich
 ist (siehe Anforderung 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Verwendbarkeit"

\end_inset

).
 Des Weiteren kann der SIMPL Core als Singleton betrieben werden, und es
 können damit z.B.
 Verbindungen zu Datenquellen für Folgezugriffe aufrecht gehalten werden.
 
\end_layout

\begin_layout Standard
In den folgenden Abschnitten werden zunächst die Services des SIMPL Cores
 und ihre Aufgaben näher beschrieben.
 Die Schnittstellen und ihre Verwendung werden in Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Schnittstellen"

\end_inset

 weiter ausgeführt.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Web Service Schnittstellen in die Beschreibungen der Services nennen
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename SIMPLCore.png
	width 90text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:SIMPL-Core"

\end_inset

SIMPL Core
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Administration Service
\end_layout

\begin_layout Standard
Über den Administration Service wird die Funktionalität für die Admin-Konsole
 (siehe Anforderung 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Admin-Konsole"

\end_inset

) in Eclipse bereitgestellt.
 Die Einstellungsinformationen der Admin-Konsole werden über den Storage
 Service verwaltet.
 Für Einstellungen, mit denen zur Laufzeit Einfluss auf Apache ODE genommen
 wird, wie z.B.
 die Granularität des Auditings, werden die vorhandenen Schnittstellen von
 Apache ODE verwendet und, falls nötig, neue Schnittstellen geschaffen.
 Die geforderte austauschbare GUI (siehe Anforderung 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Erweiterbarkeit"

\end_inset

) wird durch die WSDL-Schnittstelle erreicht, durch die eine lose Kopplung
 zwischen Administration Service und der GUI geschaffen wird.
\end_layout

\begin_layout Subsubsection
Datasource Service
\end_layout

\begin_layout Standard
Der Datasource Service ist für alle Aufgaben zuständig, die den Zugriff
 auf die Datenquellen betreffen und bietet eine WSDL-Schnittstelle, die
 von Apache ODE zur Ausführung der DM-Aktivitäten verwendet wird.
 Dort werden entsprechende Adapter (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Adapter"

\end_inset

) in Form von Direct Access Services (DAS) implementiert, die den Zugriff
 auf verschiedene Typen von Datenquellen ermöglichen und die Erweiterbarkeit
 für weitere Typen und Anfragesprachen (siehe Anforderung 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Erweiterbarkeit"

\end_inset

) garantieren.
 Des Weiteren werden Plug-In-Schnittstellen (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Plug-In"

\end_inset

) für zusätzliche funktionale Erweiterungen geschaffen, wie z.B die Unterstützung
 verschiedener Dateitypen bei Dateisystemen.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Was passiert denn, wenn externe Daten in den Prozessspeicher geladen werden
 (Retrieve Activity)? Die müssen imho ja irgendwie in die interne Datenbank
 von ODE kommen, damit ODE dann über seine DAOs darauf zugreifen kann.
 Wie funktioniert das mit dem Data Source Service?
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Security Service
\begin_inset Note Note
status open

\begin_layout Plain Layout
Was macht der Service konkret? "verarbeiten", "transformieren", "zwischenspeiche
rn" - das sagt mir nichts über seine Funktionalität aus.
 WIE soll denn SSO realisiert werden? Meldet der Service sich bei den Datenquell
en an? Wie macht er das? usw.
\end_layout

\begin_layout Plain Layout
Ihr solltet in dem Zusammenhang auch über die Verwaltung der Connections
 nachdenken, z.B.
 über einen connection pool o.ä.
 Es ist an dieser Stelle nicht klar, ob das hier der Security Service macht,
 ob das der Data Source Service macht (oder ein anderer), ob man dafür einen
 neuen Service braucht, oder ob das der Container, in dem der SIMPL Core
 deployed ist, machen soll.
\end_layout

\begin_layout Plain Layout
Tomcat oder ein Service Bus sollten dafür auch entsprechende Funktionalitäten
 bieten.
 Sprecht da am besten mal mit Michael Reiter drüber.
 Auf jeden Fall sollte so etwas in den Grobentwurf.
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
Hier fehlt die Verbindung zwischen dem Data Source Service und dem Security
 Service.
 Wie genau spielen die zusammen? Insbesonder: wer von beiden führt die Authentif
izierung und Autorisierung sowie das SSO gegenüber den Datenquellen durch?
\end_layout

\begin_layout Plain Layout
Wo werden außerdem die Informationen festgelegt? Braucht man da noch eine
 zusätzliche externe Schnittstelle?
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Der Security Service ist zuständig für die Verwaltung von Informationen
 zur Authentifizierung und Autorisierung gegenüber Datenquellen.
 Mit diesem Service können ggf.
 auch Authentifizierungs- und Autorisierungsinformationen in andere Formate
 transformiert werden, wie beispielsweise Benutzername und Passwort nach
 SAML.
 Die Informationen werden über den Storage Service persistent gespeichert
 um das Konzept des SSO (siehe Anforderung 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Authentifizierung-und-Autorisierung"

\end_inset

) zu realisieren, bei dem diese Informationen wiederverwendet werden.
 Des Weiteren werden dort offene Verbindungen zu Datenquellen verwaltet,
 damit diese ggf.
 wiederaufgenommen werden können und nicht erneut hergestellt werden müssen.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Strategy-Service"

\end_inset

Strategy Service
\end_layout

\begin_layout Standard
Der Strategy Service wird vom DatasourceService für das Late Binding (siehe
 Anforderung 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Late-Binding-von"

\end_inset

) verwendet.
 Dort stehen verschiedene Auswahlstrategien bzw.
 -algorithmen zur Verfügung, um mit im Prozess formulierten Anforderungen
 eine passende Datenquelle ausfindig zu machen.
 Die Datenquellen zur Auswahl werden von der UDDI Registry (Apache jUDDI)
 bereitgestellt.
 In einer späteren Iteration werden die Strategien 
\begin_inset Quotes eld
\end_inset

Erster Fund
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Bester Fund
\begin_inset Quotes erd
\end_inset

 und 
\begin_inset Quotes eld
\end_inset

Passender Fund
\begin_inset Quotes erd
\end_inset

 realisiert, die erst in dieser Iteration entworfen werden.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Sollte auch mal jemand entwerfen...
 Feinentwurf?
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Storage Service
\begin_inset Note Note
status open

\begin_layout Plain Layout
Ihr müsst hier und an anderen entsprechenden Stellen in Kapitel 3.3 noch
 begründen, warum man diesen separaten Storage Service braucht.
 Schließlich könnte man die Datenhaltung auch über die anderen Services
 realisieren.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Der Storage Service verwaltet in einer embedded Datenbank alle Daten die
 innerhalb des Rahmenwerks gespeichert werden müssen.
 Damit werden beispielsweise vom Administration Service die Einstellungen
 des SIMPL Rahmenwerks aus der Admin-Konsole gespeichert und können später
 wieder abgerufen werden.
 Auch andere Services können diesen Dienst zur Verwaltung von Daten benutzen,
 wie z.B.
 der Security Service zur Verwaltung von Authentifizierungs- und Autorisierungsi
nformationen.
 Durch den Storage Service bleibt die Datenhaltung dienstunabhängig und
 der SIMPL Core kann einfach um weitere Dienste erweitert werden, die ebenfalls
 eine Datenhaltung benötigen, da diese nicht implementiert werden müssen.
\end_layout

\begin_layout Subsection
Reference Resolution System (RRS)
\end_layout

\begin_layout Standard
Mit Hilfe des RRS wird das Referenzieren von großen Datenmengen in BPEL
 ermöglicht (siehe Anforderung 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Große-Datenmengen"

\end_inset

).
 Wie in Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Reference-Resolution-System"

\end_inset

 zu sehen ist, besteht es aus zwei Web Services und internen Datenquellen-Adapte
rn (Datasource Adapter), die in den folgenden Abschnitten beschrieben werden.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename RRS.png
	width 60text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Reference-Resolution-System"

\end_inset

Reference Resolution System (RRS)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:RRS-Retrieval-Service"

\end_inset

RRS Retrieval Service
\end_layout

\begin_layout Standard
Über den RRS Retrieval Service lassen sich Referenzen auflösen und die referenzi
erten Daten bei Bedarf von der Workflow Engine in einen Prozess holen.
 
\end_layout

\begin_layout Subsubsection
Datasource Adapter
\end_layout

\begin_layout Standard
Das RRS bietet über Datasource Adapter eine erweiterbare Möglichkeit, verschiede
nste Datenquellen anzubinden und darüber auch mit dem RRS Retrieval Service
 und RRS Management Service Referenzen und referenzierte Daten zu verwalten.
\end_layout

\begin_layout Subsubsection
RRS Management Service
\end_layout

\begin_layout Standard
Mit dem RRS Management Service können Referenzen z.B.
 über das Eclipse RRS Plug-In verwaltet werden.
 Die Verwaltung der Referenzen geschieht dabei vorerst über eine eingebettete
 Datenbank, es ist allerdings später auch eine externe Verwaltung durch
 die Verwendung der entsprechenden Datenquellen-Adapter denkbar.
\end_layout

\begin_layout Subsection
Apache jUDDI
\end_layout

\begin_layout Standard
Das SIMPL Rahmenwerk stellt mit Apache jUDDI bereits eine UDDI-Registry
 zur Verfügung, in der Datenquellen von Datenquellen-Administratoren verwaltet
 werden können.
 Das UDDI Plug-In kann über die Registry Datenquellen für den Prozeß-Modellierer
 zur Verfügung stellen.
 Durch den UDDI-Standard können auch beliebige andere UDDI-Registries angebunden
 werden (siehe Anforderung 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Erweiterbarkeit"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Schnittstellen"

\end_inset

Schnittstellen
\end_layout

\begin_layout Standard
In diesem Kapitel werden die Schnittstellen der Komponenten beschrieben
 sowie eingesetzte Protokolle und übertragene Objekte erläutert.
 Bei allen Schnittstellen handelt es sich um WSDL-Schnittstellen, mit denen
 über ein Übertragungsprotokoll wie z.B.
 HTTP SOAP-Nachrichten ausgetauscht werden können.
 Die UDDI Schnittstelle der Registry Apache jUDDI wird direkt genutzt und
 bietet entsprechende Funktionen, die in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-7"

\end_inset

 spezifiziert sind.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:SIMPL-Core"

\end_inset

SIMPL Core
\end_layout

\begin_layout Standard
Hier werden die externen und wichtige interne Schnittstellen des SIMPL Rahmenwer
ks beschrieben (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:SIMPL-Core"

\end_inset

).
\end_layout

\begin_layout Subsubsection
AdministrationService (extern)
\end_layout

\begin_layout Standard
Die AdministrationService-Schnittstelle bietet Funktionen für das Speichern,
 Löschen und Laden von Einstellungen der Admin-Konsole.
 Die Einstellungen werden dabei als Listen bzw.
 HashMaps übertragen.
\end_layout

\begin_layout Subsubsection
StorageService (intern und extern)
\end_layout

\begin_layout Standard
Die StorageService-Schnittstelle bietet Funktionen zur Verwaltung von Daten
 innerhalb des Rahmenwerks.
 Die Daten werden als Service Data Object (SDO) 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

 übertragen.
\end_layout

\begin_layout Subsubsection
DatasourceService (extern)
\end_layout

\begin_layout Standard
Die DatasourceService-Schnittstelle wird von Apache ODE für den Zugriff
 auf Datenquellen und die Speicherung der Auditing-Daten verwendet.
 Sie bietet Funktionen zum Abrufen der Daten von Datenquellen und Senden
 von Befehlen in unterstützten Anfragesprachen.
 Die Daten werden dabei als SDO übertragen.
\end_layout

\begin_layout Subsubsection
StrategyService (intern)
\end_layout

\begin_layout Standard
Die StrategyService-Schnittstelle wird vom Datasource Service für das Late
 Binding genutzt und bietet Funktionen für die verschiedenen Auswahlstrategien
 (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Strategy-Service"

\end_inset

).
 Die nichtfunktionalen Anforderungen an die Datenquellen werden dabei als
 WS-Policy-Objekte übertragen, andere funktionale Eigenschaften als proprietäre
 XML-Struktur.
\end_layout

\begin_layout Subsubsection
SecurityService (intern)
\end_layout

\begin_layout Standard
Die SecurityService-Schnittstelle bietet Funktionen für die Verwaltung von
 Authentifizierungs- und Autorisierungsinformationen.
 Sie wird vom Datasource Service benötigt, um entsprechende Informationen
 für einen Zugriff auf eine Datenquelle abzurufen.
 Die Informationen werden dabei hauptsächlich in der Security Assertion
 Markup Language (SAML) und der eXtensible Access Control Markup Language
 (XACML) übertragen.
\end_layout

\begin_layout Subsection
RRS
\end_layout

\begin_layout Standard
In den folgenden Abschnitten werden die Schnittstellen des RRS beschrieben
 (siehe Seite 19 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Reference-Resolution-System"

\end_inset

).
 Die nachfolgenden Beschreibungen beziehen sich auf 
\begin_inset CommandInset citation
LatexCommand cite
key "key-6"

\end_inset

 und werden hier nicht im Detail erläutert.
\end_layout

\begin_layout Subsubsection
RRSRetrievalService
\end_layout

\begin_layout Standard
Die RRSRetrievalService-Schnittstelle bietet eine Funktion, mit der Referenzen
 aufgelöst werden können.
 Dazu wird eine Endpoint Reference (EPR) übergeben und der damit verbundene
 Wert aus einer Datenquelle ausgelesen und anschließend wird eine SOAP Nachricht
 zurückgeschickt in der die entsprechenden Daten stehen.
\end_layout

\begin_layout Subsubsection
RRSManagementService
\end_layout

\begin_layout Standard
Diese Schnittstelle bietet Funktionen zum Speichern, Löschen und Ändern
 von Referenzen an und gibt im Falle eines Fehlers eine entsprechende Rückmeldun
g die darüber informiert was den Fehler verursacht hat.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{Literaturverzeichnis}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"

\end_inset

Knauß, Markus: 
\shape italic
Entwurfsvorlage
\shape default
.
 Institut für Softwaretechnologie, März 2008.
 http://www.iste.uni-stuttgart.de/se/, Abruf: 06.12.2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"

\end_inset

Ludewig, Jochen; Lichter, Horst: 
\shape italic
Software Engineering.
 
\shape default
Grundlagen, Menschen, Prozesse und Techniken.
 dpunkt.verlag GmbH, 2007.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-3"

\end_inset

Alves, Alexandre; Arkin, Assaf; Askary, Sid; Barreto, Charlton; Bloch, Ben;
 Curbera, Francisco; Ford, Mark; Goand, Yaron; Guízar, Alejandro; Kartha,
 Neelakantan; Liu, Canyang Kevin; Khalaf, Rania; König, Dieter; Marin, Mike;
 Mehta, Vinkesh; Thatte, Satish; van der Rijn, Danny; Yendluri, Prasad;
 Yiu, Alex: 
\emph on
Web Services Business Process Execution Language Version 2.0
\emph default
.
 Organization for the Advancement of Structured Information Standards OASIS,
 11.
 April 2007.
 http://docs.oasis-open.org/wsbpel/2.0/OS/wsbpel-v2.0-OS.pdf, Abruf: 11.11.2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-4"

\end_inset

Adams, Matthew; Andrei, Cezar; Barack, Ron; Blohm, Henning; Boutard, Christophe;
 Brodsky, Stephen; Budinsky, Frank; Bünnig, Stefan; Carey, Michael; Doughan,
 Blaise; Grove, Andy; Halaseh, Omar; Harris, Larry; von Mersewsky, Ulf;
 Moe, Shawn; Nally, Martin; Preotiuc-Pietro, Radu; Rowley, Mike; Samson,
 Eric; Taylor, James; Thiefaine, Arnaud: 
\emph on
Service Data Objects For Java
\emph default
.
 Version: 2.1.0, November 2006.

\emph on
 
\emph default
http://www.osoa.org/download/attachments/36/Java-SDO-Spec-v2.1.0-FINAL.pdf, Abruf:
 11.11.2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-5"

\end_inset


\shape italic
Spezifikation v2.5
\shape default
.

\shape italic
 
\shape default
Stupro-A SIMPL (2010).
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-6"

\end_inset

 Wieland, M.; Görlach, K.; Schumm, D.; Leymann, F.: 
\emph on
Towards Reference Passing in Web Service and Workflow-based Applications
\emph default
.
 In: Proceedings of the 13th IEEE Enterprise Distributed Object Conference
 (EDOC 2009)
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-7"

\end_inset

Clement, Luc; Hately, Andrew; von Riegen, Claus; Rogers, Tony: 
\emph on
UDDI Version 3 Specification- OASIS Standard
\emph default
.
 Organization for the Advancement of Structured Information Standards OASIS,
 19.
 Oktober 2004.
 http://www.oasis-open.org/committees/uddi-spec/doc/tcspecs.htm#uddiv3, Abruf:
 07.12.2009
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{Abkürzungsverzeichnis}
\end_layout

\end_inset


\end_layout

\begin_layout Section*

\series bold
\size larger
Abkürzungsverzeichnis
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="22" columns="2">
<features>
<column alignment="left" valignment="top" width="2cm">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
API
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Application Programming Interface
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
BPEL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Business Process Execution Language
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DAO
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Data Access Object
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DAS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Data Access Service
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Datenmanagement
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
EPR
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Endpoint Reference
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GEF
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Graphical Editing Framework
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GUI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Graphical User Interface
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
JAX-WS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Java API for XML - Web Services
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ODE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Orchestration Director Engine
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RRS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reference Resolution System
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SAML
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Security Assertion Markup Language
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SDO
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Service Data Object
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SIMPL 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SimTech: Information Management, Processes and Languages
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SOAP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Simple Object Access Protocol
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SQL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Structured Query Language
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SSO
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Single Sign On
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UDDI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Universal Description, Discovery and Integration
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
WS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Web Service
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
WSDL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Web Service Description Language
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
XACML
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
eXtensible Access Control Markup Language
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
XQuery
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
XML Query Language
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{Abbildungsverzeichnis}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\end_body
\end_document
